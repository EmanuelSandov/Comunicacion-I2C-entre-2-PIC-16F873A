

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon May 06 21:03:30 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F873A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47     0000                     
    48                           ; Generated 12/10/2023 GMT
    49                           ; 
    50                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F873A Definitions
    80                           ; 
    81                           ; SFR Addresses
    82     0000                     	;# 
    83     0001                     	;# 
    84     0002                     	;# 
    85     0003                     	;# 
    86     0004                     	;# 
    87     0005                     	;# 
    88     0006                     	;# 
    89     0007                     	;# 
    90     000A                     	;# 
    91     000B                     	;# 
    92     000C                     	;# 
    93     000D                     	;# 
    94     000E                     	;# 
    95     000E                     	;# 
    96     000F                     	;# 
    97     0010                     	;# 
    98     0011                     	;# 
    99     0012                     	;# 
   100     0013                     	;# 
   101     0014                     	;# 
   102     0015                     	;# 
   103     0015                     	;# 
   104     0016                     	;# 
   105     0017                     	;# 
   106     0018                     	;# 
   107     0019                     	;# 
   108     001A                     	;# 
   109     001B                     	;# 
   110     001B                     	;# 
   111     001C                     	;# 
   112     001D                     	;# 
   113     001E                     	;# 
   114     001F                     	;# 
   115     0081                     	;# 
   116     0085                     	;# 
   117     0086                     	;# 
   118     0087                     	;# 
   119     008C                     	;# 
   120     008D                     	;# 
   121     008E                     	;# 
   122     0091                     	;# 
   123     0092                     	;# 
   124     0093                     	;# 
   125     0094                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     009F                     	;# 
   132     010C                     	;# 
   133     010D                     	;# 
   134     010E                     	;# 
   135     010F                     	;# 
   136     018C                     	;# 
   137     018D                     	;# 
   138     0000                     	;# 
   139     0001                     	;# 
   140     0002                     	;# 
   141     0003                     	;# 
   142     0004                     	;# 
   143     0005                     	;# 
   144     0006                     	;# 
   145     0007                     	;# 
   146     000A                     	;# 
   147     000B                     	;# 
   148     000C                     	;# 
   149     000D                     	;# 
   150     000E                     	;# 
   151     000E                     	;# 
   152     000F                     	;# 
   153     0010                     	;# 
   154     0011                     	;# 
   155     0012                     	;# 
   156     0013                     	;# 
   157     0014                     	;# 
   158     0015                     	;# 
   159     0015                     	;# 
   160     0016                     	;# 
   161     0017                     	;# 
   162     0018                     	;# 
   163     0019                     	;# 
   164     001A                     	;# 
   165     001B                     	;# 
   166     001B                     	;# 
   167     001C                     	;# 
   168     001D                     	;# 
   169     001E                     	;# 
   170     001F                     	;# 
   171     0081                     	;# 
   172     0085                     	;# 
   173     0086                     	;# 
   174     0087                     	;# 
   175     008C                     	;# 
   176     008D                     	;# 
   177     008E                     	;# 
   178     0091                     	;# 
   179     0092                     	;# 
   180     0093                     	;# 
   181     0094                     	;# 
   182     0098                     	;# 
   183     0099                     	;# 
   184     009C                     	;# 
   185     009D                     	;# 
   186     009E                     	;# 
   187     009F                     	;# 
   188     010C                     	;# 
   189     010D                     	;# 
   190     010E                     	;# 
   191     010F                     	;# 
   192     018C                     	;# 
   193     018D                     	;# 
   194                           
   195                           	psect	idataBANK0
   196     0003                     __pidataBANK0:
   197                           
   198                           ;initializer for _i2c_role
   199     0003  3401               	retlw	1
   200                           
   201                           	psect	strings
   202     0538                     __pstrings:
   203     0538                     stringtab:
   204     0538                     __stringtab:
   205                           
   206                           ;	String table - string pointers are 1 byte each
   207     0538  1BFF               	btfsc	btemp+1,7
   208     0539  2D42               	ljmp	stringcode
   209     053A  1383               	bcf	3,7
   210     053B  187F               	btfsc	btemp+1,0
   211     053C  1783               	bsf	3,7
   212     053D  0800               	movf	0,w
   213     053E  0A84               	incf	4,f
   214     053F  1903               	skipnz
   215     0540  0AFF               	incf	btemp+1,f
   216     0541  0008               	return
   217     0542                     stringcode:
   218     0542                     stringdir:
   219     0542  3005               	movlw	high stringdir
   220     0543  008A               	movwf	10
   221     0544  0804               	movf	4,w
   222     0545  0A84               	incf	4,f
   223     0546  0782               	addwf	2,f
   224     0547                     __stringbase:
   225     0547  3400               	retlw	0
   226     0548                     __end_of__stringtab:
   227     0548                     _teclas:
   228     0548  3437               	retlw	55
   229     0549  3438               	retlw	56
   230     054A  3439               	retlw	57
   231     054B  342F               	retlw	47
   232     054C  3434               	retlw	52
   233     054D  3435               	retlw	53
   234     054E  3436               	retlw	54
   235     054F  3458               	retlw	88
   236     0550  3431               	retlw	49
   237     0551  3432               	retlw	50
   238     0552  3433               	retlw	51
   239     0553  342D               	retlw	45
   240     0554  3443               	retlw	67
   241     0555  3430               	retlw	48
   242     0556  343D               	retlw	61
   243     0557  342B               	retlw	43
   244     0558                     __end_of_teclas:
   245     0005                     _PORTAbits	set	5
   246     0006                     _PORTB	set	6
   247     0014                     _SSPCONbits	set	20
   248     0013                     _SSPBUF	set	19
   249     0014                     _SSPCON	set	20
   250     002A                     _RA2	set	42
   251     0029                     _RA1	set	41
   252     0028                     _RA0	set	40
   253     0063                     _SSPIF	set	99
   254     005F                     _GIE	set	95
   255     005E                     _PEIE	set	94
   256     0091                     _SSPCON2	set	145
   257     0085                     _TRISAbits	set	133
   258     0086                     _TRISB	set	134
   259     0085                     _TRISA	set	133
   260     009F                     _ADCON1	set	159
   261     0094                     _SSPSTATbits	set	148
   262     0094                     _SSPSTAT	set	148
   263     0093                     _SSPADD	set	147
   264     048A                     _PEN	set	1162
   265     0488                     _SEN	set	1160
   266     0463                     _SSPIE	set	1123
   267     043C                     _TRISC4	set	1084
   268     043B                     _TRISC3	set	1083
   269     0558                     STR_2:
   270     0558  344D               	retlw	77	;'M'
   271     0559  3465               	retlw	101	;'e'
   272     055A  346E               	retlw	110	;'n'
   273     055B  3473               	retlw	115	;'s'
   274     055C  3461               	retlw	97	;'a'
   275     055D  346A               	retlw	106	;'j'
   276     055E  3465               	retlw	101	;'e'
   277     055F  3420               	retlw	32	;' '
   278     0560  3465               	retlw	101	;'e'
   279     0561  346E               	retlw	110	;'n'
   280     0562  3476               	retlw	118	;'v'
   281     0563  3469               	retlw	105	;'i'
   282     0564  3461               	retlw	97	;'a'
   283     0565  3464               	retlw	100	;'d'
   284     0566  346F               	retlw	111	;'o'
   285     0567  3400               	retlw	0
   286     0568                     STR_3:
   287     0568  3445               	retlw	69	;'E'
   288     0569  3473               	retlw	115	;'s'
   289     056A  3470               	retlw	112	;'p'
   290     056B  3465               	retlw	101	;'e'
   291     056C  3472               	retlw	114	;'r'
   292     056D  3461               	retlw	97	;'a'
   293     056E  346E               	retlw	110	;'n'
   294     056F  3464               	retlw	100	;'d'
   295     0570  346F               	retlw	111	;'o'
   296     0571  3420               	retlw	32	;' '
   297     0572  3472               	retlw	114	;'r'
   298     0573  3465               	retlw	101	;'e'
   299     0574  3473               	retlw	115	;'s'
   300     0575  3470               	retlw	112	;'p'
   301     0576  3400               	retlw	0
   302     0577                     STR_4:
   303     0577  3445               	retlw	69	;'E'
   304     0578  3473               	retlw	115	;'s'
   305     0579  3463               	retlw	99	;'c'
   306     057A  3472               	retlw	114	;'r'
   307     057B  3469               	retlw	105	;'i'
   308     057C  3462               	retlw	98	;'b'
   309     057D  3461               	retlw	97	;'a'
   310     057E  3420               	retlw	32	;' '
   311     057F  3452               	retlw	82	;'R'
   312     0580  3465               	retlw	101	;'e'
   313     0581  3473               	retlw	115	;'s'
   314     0582  3470               	retlw	112	;'p'
   315     0583  3400               	retlw	0
   316     0584                     STR_1:
   317     0584  3445               	retlw	69	;'E'
   318     0585  3453               	retlw	83	;'S'
   319     0586  3450               	retlw	80	;'P'
   320     0587  3420               	retlw	32	;' '
   321     0588  344D               	retlw	77	;'M'
   322     0589  3453               	retlw	83	;'S'
   323     058A  3400               	retlw	0
   324                           
   325                           	psect	cinit
   326     0013                     start_initialization:	
   327                           ; #config settings
   328                           
   329     0013                     __initialization:
   330                           
   331                           ; Initialize objects allocated to BANK0
   332     0013  118A  2003  118A   	fcall	__pidataBANK0	;fetch initializer
   333     0016  00DF               	movwf	__pdataBANK0& (0+127)
   334                           
   335                           ; Clear objects allocated to BANK1
   336     0017  1383               	bcf	3,7	;select IRP bank0
   337     0018  30BD               	movlw	low __pbssBANK1
   338     0019  0084               	movwf	4
   339     001A  30CD               	movlw	low (__pbssBANK1+16)
   340     001B  118A  27F8  118A   	fcall	clear_ram0
   341                           
   342                           ; Clear objects allocated to BANK0
   343     001E  3043               	movlw	low __pbssBANK0
   344     001F  0084               	movwf	4
   345     0020  305F               	movlw	low (__pbssBANK0+28)
   346     0021  118A  27F8  118A   	fcall	clear_ram0
   347     0024                     end_of_initialization:	
   348                           ;End of C runtime variable initialization code
   349                           
   350     0024                     __end_of__initialization:
   351     0024  0183               	clrf	3
   352     0025  118A  2E8D         	ljmp	_main	;jump to C main() function
   353                           
   354                           	psect	bssBANK0
   355     0043                     __pbssBANK0:
   356     0043                     ISR@index:
   357     0043                     	ds	2
   358     0045                     _charCount:
   359     0045                     	ds	2
   360     0047                     _allow_input:
   361     0047                     	ds	1
   362     0048                     _cursorPosition:
   363     0048                     	ds	1
   364     0049                     _asciiDigits:
   365     0049                     	ds	1
   366     004A                     _asciiMode:
   367     004A                     	ds	1
   368     004B                     _displayString:
   369     004B                     	ds	16
   370     005B                     _asciiValue:
   371     005B                     	ds	4
   372                           
   373                           	psect	dataBANK0
   374     005F                     __pdataBANK0:
   375     005F                     _i2c_role:
   376     005F                     	ds	1
   377                           
   378                           	psect	bssBANK1
   379     00BD                     __pbssBANK1:
   380     00BD                     ISR@receiveBuffer:
   381     00BD                     	ds	16
   382                           
   383                           	psect	clrtext
   384     07F8                     clear_ram0:	
   385                           ;	Called with FSR containing the base address, and
   386                           ;	W with the last address+1
   387                           
   388     07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   389     07F9                     clrloop0:
   390     07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   391     07FA  0A84               	incf	4,f	;increment pointer
   392     07FB  0604               	xorwf	4,w	;XOR with final address
   393     07FC  1903               	btfsc	3,2	;have we reached the end yet?
   394     07FD  3400               	retlw	0	;all done for this memory range, return
   395     07FE  0604               	xorwf	4,w	;XOR again to restore value
   396     07FF  2FF9               	goto	clrloop0	;do the next byte
   397                           
   398                           	psect	cstackBANK1
   399     00A0                     __pcstackBANK1:
   400     00A0                     ?___lldiv:
   401     00A0                     LCD_setCursor@row:	
   402                           ; 4 bytes @ 0x0
   403                           
   404     00A0                     memset@dest:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     00A0                     Read_Keypad@row:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     00A0                     ___wmul@product:	
   411                           ; 2 bytes @ 0x0
   412                           
   413     00A0                     ___lldiv@divisor:	
   414                           ; 2 bytes @ 0x0
   415                           
   416                           
   417                           ; 4 bytes @ 0x0
   418     00A0                     	ds	1
   419     00A1                     memset@p:
   420     00A1                     _LCD_setCursor$339:	
   421                           ; 1 bytes @ 0x1
   422                           
   423                           
   424                           ; 2 bytes @ 0x1
   425     00A1                     	ds	1
   426     00A2                     ?_atoi:
   427     00A2                     Read_Keypad@col:	
   428                           ; 2 bytes @ 0x2
   429                           
   430                           
   431                           ; 2 bytes @ 0x2
   432     00A2                     	ds	1
   433     00A3                     LCD_setCursor@position:
   434                           
   435                           ; 1 bytes @ 0x3
   436     00A3                     	ds	1
   437     00A4                     ??_atoi:
   438     00A4                     ___lldiv@dividend:	
   439                           ; 1 bytes @ 0x4
   440                           
   441                           
   442                           ; 4 bytes @ 0x4
   443     00A4                     	ds	2
   444     00A6                     atoi@neg:
   445                           
   446                           ; 1 bytes @ 0x6
   447     00A6                     	ds	1
   448     00A7                     atoi@n:
   449                           
   450                           ; 2 bytes @ 0x7
   451     00A7                     	ds	1
   452     00A8                     ___lldiv@quotient:
   453                           
   454                           ; 4 bytes @ 0x8
   455     00A8                     	ds	1
   456     00A9                     atoi@s:
   457                           
   458                           ; 1 bytes @ 0x9
   459     00A9                     	ds	3
   460     00AC                     ___lldiv@counter:
   461                           
   462                           ; 1 bytes @ 0xC
   463     00AC                     	ds	1
   464     00AD                     ??_I2C_Master_Init:
   465                           
   466                           ; 1 bytes @ 0xD
   467     00AD                     	ds	4
   468     00B1                     Send_Message_To_Master@message:
   469                           
   470                           ; 1 bytes @ 0x11
   471     00B1                     	ds	1
   472     00B2                     ??_Handle_Keypress:
   473                           
   474                           ; 1 bytes @ 0x12
   475     00B2                     	ds	3
   476     00B5                     Handle_Keypress@asciiCode:
   477                           
   478                           ; 2 bytes @ 0x15
   479     00B5                     	ds	2
   480     00B7                     Handle_Keypress@i_301:
   481                           
   482                           ; 2 bytes @ 0x17
   483     00B7                     	ds	2
   484     00B9                     Handle_Keypress@i:
   485                           
   486                           ; 1 bytes @ 0x19
   487     00B9                     	ds	1
   488     00BA                     Handle_Keypress@i_298:
   489                           
   490                           ; 1 bytes @ 0x1A
   491     00BA                     	ds	1
   492     00BB                     Handle_Keypress@key:
   493                           
   494                           ; 1 bytes @ 0x1B
   495     00BB                     	ds	1
   496     00BC                     main@key:
   497                           
   498                           ; 1 bytes @ 0x1C
   499     00BC                     	ds	1
   500                           
   501                           	psect	cstackCOMMON
   502     0000                     __pcstackCOMMON:
   503     0000                     ??_I2C_Slave_Init:
   504     0000                     ??_LCD_setCursor:	
   505                           ; 1 bytes @ 0x0
   506                           
   507     0000                     ??_LCD_print:	
   508                           ; 1 bytes @ 0x0
   509                           
   510     0000                     ??_Prepare_Keypad_Pins:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0000                     ??_Send_Message_To_Master:	
   514                           ; 1 bytes @ 0x0
   515                           
   516     0000                     ??_memset:	
   517                           ; 1 bytes @ 0x0
   518                           
   519     0000                     ??_Prepare_LCD_Pins:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0000                     ??_I2C_Master_Start:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0000                     ??_I2C_Master_Write:	
   526                           ; 1 bytes @ 0x0
   527                           
   528     0000                     ??_I2C_Master_Stop:	
   529                           ; 1 bytes @ 0x0
   530                           
   531     0000                     ??_I2C_Master_Wait:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0000                     ??_main:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0000                     ??___wmul:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0000                     ??i1_LCD_setCursor:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0000                     ??i1_LCD_print:	
   544                           ; 1 bytes @ 0x0
   545                           
   546                           
   547                           	psect	cstackBANK0
   548     0020                     __pcstackBANK0:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0020                     ?_LCD_init:
   552     0020                     ?_I2C_Slave_Init:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0020                     ?_LCD_clear:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0020                     ?_Prepare_Keypad_Pins:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0020                     ?_Read_Keypad:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0020                     ?_Handle_Keypress:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0020                     ?_Send_Message_To_Master:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0020                     ?_Prepare_LCD_Pins:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0020                     ?_I2C_Master_Start:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0020                     ?_I2C_Master_Write:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0020                     ?_I2C_Master_Stop:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0020                     ?_I2C_Master_Wait:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0020                     ?_main:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0020                     ?_ISR:	
   589                           ; 1 bytes @ 0x0
   590                           
   591     0020                     ?_LCD_command:	
   592                           ; 1 bytes @ 0x0
   593                           
   594     0020                     ?_LCD_data:	
   595                           ; 1 bytes @ 0x0
   596                           
   597     0020                     ?i1_LCD_command:	
   598                           ; 1 bytes @ 0x0
   599                           
   600     0020                     ??i1_LCD_command:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0020                     ?i1_LCD_data:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0020                     ??i1_LCD_data:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0020                     ?i1_LCD_clear:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0020                     ?i1___lldiv:	
   613                           ; 1 bytes @ 0x0
   614                           
   615     0020                     i1___lldiv@divisor:	
   616                           ; 4 bytes @ 0x0
   617                           
   618                           
   619                           ; 4 bytes @ 0x0
   620     0020                     	ds	2
   621     0022                     i1LCD_command@command:
   622     0022                     i1LCD_data@data:	
   623                           ; 1 bytes @ 0x2
   624                           
   625                           
   626                           ; 1 bytes @ 0x2
   627     0022                     	ds	1
   628     0023                     ??i1_LCD_clear:
   629     0023                     ?i1_LCD_setCursor:	
   630                           ; 1 bytes @ 0x3
   631                           
   632     0023                     ?i1_LCD_print:	
   633                           ; 1 bytes @ 0x3
   634                           
   635     0023                     i1LCD_setCursor@column:	
   636                           ; 1 bytes @ 0x3
   637                           
   638     0023                     i1LCD_print@string:	
   639                           ; 1 bytes @ 0x3
   640                           
   641                           
   642                           ; 2 bytes @ 0x3
   643     0023                     	ds	1
   644     0024                     i1LCD_setCursor@row:
   645     0024                     i1___lldiv@dividend:	
   646                           ; 1 bytes @ 0x4
   647                           
   648                           
   649                           ; 4 bytes @ 0x4
   650     0024                     	ds	1
   651     0025                     i1_LCD_setCursor$339:
   652                           
   653                           ; 2 bytes @ 0x5
   654     0025                     	ds	2
   655     0027                     i1LCD_setCursor@position:
   656                           
   657                           ; 1 bytes @ 0x7
   658     0027                     	ds	1
   659     0028                     ??i1___lldiv:
   660                           
   661                           ; 1 bytes @ 0x8
   662     0028                     	ds	1
   663     0029                     i1___lldiv@quotient:
   664                           
   665                           ; 4 bytes @ 0x9
   666     0029                     	ds	4
   667     002D                     i1___lldiv@counter:
   668                           
   669                           ; 1 bytes @ 0xD
   670     002D                     	ds	1
   671     002E                     ?i1_I2C_Master_Init:
   672     002E                     i1I2C_Master_Init@c:	
   673                           ; 1 bytes @ 0xE
   674                           
   675                           
   676                           ; 4 bytes @ 0xE
   677     002E                     	ds	4
   678     0032                     ??i1_I2C_Master_Init:
   679                           
   680                           ; 1 bytes @ 0x12
   681     0032                     	ds	4
   682     0036                     ??_ISR:
   683                           
   684                           ; 1 bytes @ 0x16
   685     0036                     	ds	7
   686     003D                     ISR@temp:
   687                           
   688                           ; 1 bytes @ 0x1D
   689     003D                     	ds	1
   690     003E                     ??_Read_Keypad:
   691     003E                     ?_memset:	
   692                           ; 1 bytes @ 0x1E
   693                           
   694     003E                     ??_LCD_command:	
   695                           ; 1 bytes @ 0x1E
   696                           
   697     003E                     ??_LCD_data:	
   698                           ; 1 bytes @ 0x1E
   699                           
   700     003E                     ??___lldiv:	
   701                           ; 1 bytes @ 0x1E
   702                           
   703     003E                     ?___wmul:	
   704                           ; 1 bytes @ 0x1E
   705                           
   706     003E                     I2C_Slave_Init@address:	
   707                           ; 2 bytes @ 0x1E
   708                           
   709     003E                     I2C_Master_Write@data:	
   710                           ; 1 bytes @ 0x1E
   711                           
   712     003E                     ___wmul@multiplier:	
   713                           ; 1 bytes @ 0x1E
   714                           
   715     003E                     memset@c:	
   716                           ; 2 bytes @ 0x1E
   717                           
   718                           
   719                           ; 2 bytes @ 0x1E
   720     003E                     	ds	1
   721     003F                     ?_I2C_Master_Init:
   722     003F                     I2C_Master_Init@c:	
   723                           ; 1 bytes @ 0x1F
   724                           
   725                           
   726                           ; 4 bytes @ 0x1F
   727     003F                     	ds	1
   728     0040                     LCD_command@command:
   729     0040                     LCD_data@data:	
   730                           ; 1 bytes @ 0x20
   731                           
   732     0040                     ___wmul@multiplicand:	
   733                           ; 1 bytes @ 0x20
   734                           
   735     0040                     memset@n:	
   736                           ; 2 bytes @ 0x20
   737                           
   738                           
   739                           ; 2 bytes @ 0x20
   740     0040                     	ds	1
   741     0041                     ??_LCD_init:
   742     0041                     ??_LCD_clear:	
   743                           ; 1 bytes @ 0x21
   744                           
   745     0041                     ?_LCD_setCursor:	
   746                           ; 1 bytes @ 0x21
   747                           
   748     0041                     ?_LCD_print:	
   749                           ; 1 bytes @ 0x21
   750                           
   751     0041                     LCD_setCursor@column:	
   752                           ; 1 bytes @ 0x21
   753                           
   754     0041                     LCD_print@string:	
   755                           ; 1 bytes @ 0x21
   756                           
   757                           
   758                           ; 2 bytes @ 0x21
   759     0041                     	ds	2
   760                           
   761                           	psect	maintext
   762     068D                     __pmaintext:	
   763 ;;
   764 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   765 ;;
   766 ;; *************** function _main *****************
   767 ;; Defined at:
   768 ;;		line 94 in file "env_esclavo.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;		None
   771 ;; Auto vars:     Size  Location     Type
   772 ;;  key             1   28[BANK1 ] unsigned char 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : B00/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1
   782 ;;      Params:         0       0       0
   783 ;;      Locals:         0       0       1
   784 ;;      Temps:          0       0       0
   785 ;;      Totals:         0       0       1
   786 ;;Total ram usage:        1 bytes
   787 ;; Hardware stack levels required when called: 7
   788 ;; This function calls:
   789 ;;		_Handle_Keypress
   790 ;;		_I2C_Slave_Init
   791 ;;		_LCD_clear
   792 ;;		_LCD_init
   793 ;;		_LCD_print
   794 ;;		_LCD_setCursor
   795 ;;		_Prepare_Keypad_Pins
   796 ;;		_Read_Keypad
   797 ;; This function is called by:
   798 ;;		Startup code after reset
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802     068D                     _main:	
   803                           ;psect for function _main
   804                           
   805     068D                     l2294:	
   806                           ;incstack = 0
   807                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   808                           
   809                           
   810                           ;env_esclavo.c: 95:     LCD_init();
   811     068D  118A  258B  118A   	fcall	_LCD_init
   812                           
   813                           ;env_esclavo.c: 96:     I2C_Slave_Init(0x10);
   814     0690  3010               	movlw	16
   815     0691  158A  27EC  118A   	fcall	_I2C_Slave_Init
   816                           
   817                           ;env_esclavo.c: 98:     LCD_clear();
   818     0694  158A  27DC  118A   	fcall	_LCD_clear
   819     0697                     l2296:
   820                           
   821                           ;env_esclavo.c: 99:     LCD_setCursor(1, 0);
   822     0697  1283               	bcf	3,5	;RP0=0, select bank0
   823     0698  1303               	bcf	3,6	;RP1=0, select bank0
   824     0699  01C1               	clrf	LCD_setCursor@column
   825     069A  3001               	movlw	1
   826     069B  118A  2760  118A   	fcall	_LCD_setCursor
   827     069E                     l2298:
   828                           
   829                           ;env_esclavo.c: 100:     LCD_print("ESP MS");
   830     069E  303D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   831     069F  1283               	bcf	3,5	;RP0=0, select bank0
   832     06A0  1303               	bcf	3,6	;RP1=0, select bank0
   833     06A1  00C1               	movwf	LCD_print@string
   834     06A2  3080               	movlw	128
   835     06A3  00C2               	movwf	LCD_print@string+1
   836     06A4  118A  271C  118A   	fcall	_LCD_print
   837     06A7                     l2300:
   838                           
   839                           ;env_esclavo.c: 103:         if (allow_input) {
   840     06A7  1283               	bcf	3,5	;RP0=0, select bank0
   841     06A8  1303               	bcf	3,6	;RP1=0, select bank0
   842     06A9  0847               	movf	_allow_input,w	;volatile
   843     06AA  1903               	btfsc	3,2
   844     06AB  2EAD               	goto	u2191
   845     06AC  2EAE               	goto	u2190
   846     06AD                     u2191:
   847     06AD  2EA7               	goto	l2300
   848     06AE                     u2190:
   849     06AE                     l2302:
   850                           
   851                           ;env_esclavo.c: 104:             Prepare_Keypad_Pins();
   852     06AE  158A  27AB  118A   	fcall	_Prepare_Keypad_Pins
   853     06B1                     l2304:
   854                           
   855                           ;env_esclavo.c: 105:             char key = Read_Keypad();
   856     06B1  118A  2329  118A   	fcall	_Read_Keypad
   857     06B4  1683               	bsf	3,5	;RP0=1, select bank1
   858     06B5  1303               	bcf	3,6	;RP1=0, select bank1
   859     06B6  00BC               	movwf	main@key^(0+128)
   860     06B7                     l2306:
   861                           
   862                           ;env_esclavo.c: 106:             if (key !=0) {
   863     06B7  083C               	movf	main@key^(0+128),w
   864     06B8  1903               	btfsc	3,2
   865     06B9  2EBB               	goto	u2201
   866     06BA  2EBC               	goto	u2200
   867     06BB                     u2201:
   868     06BB  2EA7               	goto	l2300
   869     06BC                     u2200:
   870     06BC                     l2308:
   871                           
   872                           ;env_esclavo.c: 107:                 Handle_Keypress(key);
   873     06BC  083C               	movf	main@key^(0+128),w
   874     06BD  118A  2027  118A   	fcall	_Handle_Keypress
   875     06C0  2EA7               	goto	l2300
   876     06C1  118A  2811         	ljmp	start
   877     06C3                     __end_of_main:
   878                           
   879                           	psect	text1
   880     0329                     __ptext1:	
   881 ;; *************** function _Read_Keypad *****************
   882 ;; Defined at:
   883 ;;		line 365 in file "env_esclavo.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  col             2    2[BANK1 ] int 
   888 ;;  row             2    0[BANK1 ] int 
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      unsigned char 
   891 ;; Registers used:
   892 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMMON   BANK0   BANK1
   898 ;;      Params:         0       0       0
   899 ;;      Locals:         0       0       4
   900 ;;      Temps:          0       2       0
   901 ;;      Totals:         0       2       4
   902 ;;Total ram usage:        6 bytes
   903 ;; Hardware stack levels used: 1
   904 ;; Hardware stack levels required when called: 3
   905 ;; This function calls:
   906 ;;		Nothing
   907 ;; This function is called by:
   908 ;;		_main
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912     0329                     _Read_Keypad:	
   913                           ;psect for function _Read_Keypad
   914                           
   915     0329                     l2102:	
   916                           ;incstack = 0
   917                           ; Regs used in _Read_Keypad: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
   918                           
   919                           
   920                           ;env_esclavo.c: 366:     for(int row = 0; row < 4; row++) {
   921     0329  1683               	bsf	3,5	;RP0=1, select bank1
   922     032A  1303               	bcf	3,6	;RP1=0, select bank1
   923     032B  01A0               	clrf	Read_Keypad@row^(0+128)
   924     032C  01A1               	clrf	(Read_Keypad@row+1)^(0+128)
   925     032D                     l2104:
   926     032D  0821               	movf	(Read_Keypad@row+1)^(0+128),w
   927     032E  3A80               	xorlw	128
   928     032F  00FF               	movwf	btemp+1
   929     0330  3080               	movlw	128
   930     0331  027F               	subwf	btemp+1,w
   931     0332  1D03               	skipz
   932     0333  2B36               	goto	u1845
   933     0334  3004               	movlw	4
   934     0335  0220               	subwf	Read_Keypad@row^(0+128),w
   935     0336                     u1845:
   936     0336  1C03               	skipc
   937     0337  2B39               	goto	u1841
   938     0338  2B3A               	goto	u1840
   939     0339                     u1841:
   940     0339  2B3B               	goto	l2108
   941     033A                     u1840:
   942     033A  2BD2               	goto	l2142
   943     033B                     l2108:
   944                           
   945                           ;env_esclavo.c: 368:         PORTB = (unsigned char)~(0x10 << row);
   946     033B  3010               	movlw	16
   947     033C  1283               	bcf	3,5	;RP0=0, select bank0
   948     033D  1303               	bcf	3,6	;RP1=0, select bank0
   949     033E  00BE               	movwf	??_Read_Keypad
   950     033F  1683               	bsf	3,5	;RP0=1, select bank1
   951     0340  1303               	bcf	3,6	;RP1=0, select bank1
   952     0341  0A20               	incf	Read_Keypad@row^(0+128),w
   953     0342  1283               	bcf	3,5	;RP0=0, select bank0
   954     0343  1303               	bcf	3,6	;RP1=0, select bank0
   955     0344  2B47               	goto	u1854
   956     0345                     u1855:
   957     0345  1003               	clrc
   958     0346  0DBE               	rlf	??_Read_Keypad,f
   959     0347                     u1854:
   960     0347  3EFF               	addlw	-1
   961     0348  1D03               	skipz
   962     0349  2B45               	goto	u1855
   963     034A  083E               	movf	??_Read_Keypad,w
   964     034B  3AFF               	xorlw	255
   965     034C  0086               	movwf	6	;volatile
   966     034D                     l2110:
   967                           
   968                           ;env_esclavo.c: 371:         TRISB = 0x0F;
   969     034D  300F               	movlw	15
   970     034E  1683               	bsf	3,5	;RP0=1, select bank1
   971     034F  1303               	bcf	3,6	;RP1=0, select bank1
   972     0350  0086               	movwf	6	;volatile
   973     0351                     l2112:
   974                           
   975                           ;env_esclavo.c: 373:         _delay((unsigned long)((20)*(4000000/4000.0)));
   976     0351  301A               	movlw	26
   977     0352  1283               	bcf	3,5	;RP0=0, select bank0
   978     0353  1303               	bcf	3,6	;RP1=0, select bank0
   979     0354  00BF               	movwf	??_Read_Keypad+1
   980     0355  30F8               	movlw	248
   981     0356  00BE               	movwf	??_Read_Keypad
   982     0357                     u2217:
   983     0357  0BBE               	decfsz	??_Read_Keypad,f
   984     0358  2B57               	goto	u2217
   985     0359  0BBF               	decfsz	??_Read_Keypad+1,f
   986     035A  2B57               	goto	u2217
   987     035B                     l2114:
   988                           
   989                           ;env_esclavo.c: 375:         for(int col = 0; col < 4; col++) {
   990     035B  1683               	bsf	3,5	;RP0=1, select bank1
   991     035C  1303               	bcf	3,6	;RP1=0, select bank1
   992     035D  01A2               	clrf	Read_Keypad@col^(0+128)
   993     035E  01A3               	clrf	(Read_Keypad@col+1)^(0+128)
   994     035F                     l2120:
   995                           
   996                           ;env_esclavo.c: 377:             if(!(PORTB & (0x01 << col))) {
   997     035F  3001               	movlw	1
   998     0360  1283               	bcf	3,5	;RP0=0, select bank0
   999     0361  1303               	bcf	3,6	;RP1=0, select bank0
  1000     0362  00BE               	movwf	??_Read_Keypad
  1001     0363  1683               	bsf	3,5	;RP0=1, select bank1
  1002     0364  1303               	bcf	3,6	;RP1=0, select bank1
  1003     0365  0A22               	incf	Read_Keypad@col^(0+128),w
  1004     0366  1283               	bcf	3,5	;RP0=0, select bank0
  1005     0367  1303               	bcf	3,6	;RP1=0, select bank0
  1006     0368  2B6B               	goto	u1864
  1007     0369                     u1865:
  1008     0369  1003               	clrc
  1009     036A  0DBE               	rlf	??_Read_Keypad,f
  1010     036B                     u1864:
  1011     036B  3EFF               	addlw	-1
  1012     036C  1D03               	skipz
  1013     036D  2B69               	goto	u1865
  1014     036E  083E               	movf	??_Read_Keypad,w
  1015     036F  0506               	andwf	6,w	;volatile
  1016     0370  1D03               	btfss	3,2
  1017     0371  2B73               	goto	u1871
  1018     0372  2B74               	goto	u1870
  1019     0373                     u1871:
  1020     0373  2BB2               	goto	l2134
  1021     0374                     u1870:
  1022     0374                     l2124:
  1023     0374  3001               	movlw	1
  1024     0375  00BE               	movwf	??_Read_Keypad
  1025     0376  1683               	bsf	3,5	;RP0=1, select bank1
  1026     0377  1303               	bcf	3,6	;RP1=0, select bank1
  1027     0378  0A22               	incf	Read_Keypad@col^(0+128),w
  1028     0379  1283               	bcf	3,5	;RP0=0, select bank0
  1029     037A  1303               	bcf	3,6	;RP1=0, select bank0
  1030     037B  2B7E               	goto	u1884
  1031     037C                     u1885:
  1032     037C  1003               	clrc
  1033     037D  0DBE               	rlf	??_Read_Keypad,f
  1034     037E                     u1884:
  1035     037E  3EFF               	addlw	-1
  1036     037F  1D03               	skipz
  1037     0380  2B7C               	goto	u1885
  1038     0381  083E               	movf	??_Read_Keypad,w
  1039     0382  0506               	andwf	6,w	;volatile
  1040     0383  1903               	btfsc	3,2
  1041     0384  2B86               	goto	u1891
  1042     0385  2B87               	goto	u1890
  1043     0386                     u1891:
  1044     0386  2B74               	goto	l2124
  1045     0387                     u1890:
  1046     0387                     l216:
  1047                           
  1048                           ;env_esclavo.c: 379:                 PORTAbits.RA3 = 0;
  1049     0387  1185               	bcf	5,3	;volatile
  1050     0388                     l2126:
  1051                           
  1052                           ;env_esclavo.c: 380:                 _delay((unsigned long)((100)*(4000000/4000.0)));
  1053     0388  3082               	movlw	130
  1054     0389  1283               	bcf	3,5	;RP0=0, select bank0
  1055     038A  1303               	bcf	3,6	;RP1=0, select bank0
  1056     038B  00BF               	movwf	??_Read_Keypad+1
  1057     038C  30DD               	movlw	221
  1058     038D  00BE               	movwf	??_Read_Keypad
  1059     038E                     u2227:
  1060     038E  0BBE               	decfsz	??_Read_Keypad,f
  1061     038F  2B8E               	goto	u2227
  1062     0390  0BBF               	decfsz	??_Read_Keypad+1,f
  1063     0391  2B8E               	goto	u2227
  1064     0392  0000               	nop
  1065     0393                     l2128:
  1066                           
  1067                           ;env_esclavo.c: 381:                 PORTAbits.RA3 = 1;
  1068     0393  1283               	bcf	3,5	;RP0=0, select bank0
  1069     0394  1303               	bcf	3,6	;RP1=0, select bank0
  1070     0395  1585               	bsf	5,3	;volatile
  1071                           
  1072                           ;env_esclavo.c: 383:                 TRISB = 0xF0;
  1073     0396  30F0               	movlw	240
  1074     0397  1683               	bsf	3,5	;RP0=1, select bank1
  1075     0398  1303               	bcf	3,6	;RP1=0, select bank1
  1076     0399  0086               	movwf	6	;volatile
  1077     039A                     l2130:
  1078                           
  1079                           ;env_esclavo.c: 385:                 return teclas[row][col];
  1080     039A  0820               	movf	Read_Keypad@row^(0+128),w
  1081     039B  1283               	bcf	3,5	;RP0=0, select bank0
  1082     039C  1303               	bcf	3,6	;RP1=0, select bank0
  1083     039D  00BE               	movwf	??_Read_Keypad
  1084     039E  3002               	movlw	2
  1085     039F                     u1905:
  1086     039F  1003               	clrc
  1087     03A0  0DBE               	rlf	??_Read_Keypad,f
  1088     03A1  3EFF               	addlw	-1
  1089     03A2  1D03               	skipz
  1090     03A3  2B9F               	goto	u1905
  1091     03A4  3001               	movlw	(low ((_teclas-__stringbase)| (0+32768)))& (0+255)
  1092     03A5  073E               	addwf	??_Read_Keypad,w
  1093     03A6  00BF               	movwf	??_Read_Keypad+1
  1094     03A7  1683               	bsf	3,5	;RP0=1, select bank1
  1095     03A8  1303               	bcf	3,6	;RP1=0, select bank1
  1096     03A9  0822               	movf	Read_Keypad@col^(0+128),w
  1097     03AA  1283               	bcf	3,5	;RP0=0, select bank0
  1098     03AB  1303               	bcf	3,6	;RP1=0, select bank0
  1099     03AC  073F               	addwf	??_Read_Keypad+1,w
  1100     03AD  0084               	movwf	4
  1101     03AE  118A  2542  118A   	fcall	stringdir
  1102     03B1  2BD3               	goto	l217
  1103     03B2                     l2134:
  1104                           
  1105                           ;env_esclavo.c: 387:         }
  1106     03B2  3001               	movlw	1
  1107     03B3  1683               	bsf	3,5	;RP0=1, select bank1
  1108     03B4  1303               	bcf	3,6	;RP1=0, select bank1
  1109     03B5  07A2               	addwf	Read_Keypad@col^(0+128),f
  1110     03B6  1803               	skipnc
  1111     03B7  0AA3               	incf	(Read_Keypad@col+1)^(0+128),f
  1112     03B8  3000               	movlw	0
  1113     03B9  07A3               	addwf	(Read_Keypad@col+1)^(0+128),f
  1114     03BA                     l2136:
  1115     03BA  0823               	movf	(Read_Keypad@col+1)^(0+128),w
  1116     03BB  3A80               	xorlw	128
  1117     03BC  00FF               	movwf	btemp+1
  1118     03BD  3080               	movlw	128
  1119     03BE  027F               	subwf	btemp+1,w
  1120     03BF  1D03               	skipz
  1121     03C0  2BC3               	goto	u1915
  1122     03C1  3004               	movlw	4
  1123     03C2  0222               	subwf	Read_Keypad@col^(0+128),w
  1124     03C3                     u1915:
  1125     03C3  1C03               	skipc
  1126     03C4  2BC6               	goto	u1911
  1127     03C5  2BC7               	goto	u1910
  1128     03C6                     u1911:
  1129     03C6  2B5F               	goto	l2120
  1130     03C7                     u1910:
  1131     03C7                     l2138:
  1132                           
  1133                           ;env_esclavo.c: 390:         TRISB = 0xF0;
  1134     03C7  30F0               	movlw	240
  1135     03C8  1683               	bsf	3,5	;RP0=1, select bank1
  1136     03C9  1303               	bcf	3,6	;RP1=0, select bank1
  1137     03CA  0086               	movwf	6	;volatile
  1138                           
  1139                           ;env_esclavo.c: 391:     }
  1140     03CB  3001               	movlw	1
  1141     03CC  07A0               	addwf	Read_Keypad@row^(0+128),f
  1142     03CD  1803               	skipnc
  1143     03CE  0AA1               	incf	(Read_Keypad@row+1)^(0+128),f
  1144     03CF  3000               	movlw	0
  1145     03D0  07A1               	addwf	(Read_Keypad@row+1)^(0+128),f
  1146     03D1  2B2D               	goto	l2104
  1147     03D2                     l2142:
  1148                           
  1149                           ;env_esclavo.c: 393:     return 0;
  1150     03D2  3000               	movlw	0
  1151     03D3                     l217:
  1152     03D3  0008               	return
  1153     03D4                     __end_of_Read_Keypad:
  1154                           
  1155                           	psect	text2
  1156     0FAB                     __ptext2:	
  1157 ;; *************** function _Prepare_Keypad_Pins *****************
  1158 ;; Defined at:
  1159 ;;		line 397 in file "env_esclavo.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1
  1173 ;;      Params:         0       0       0
  1174 ;;      Locals:         0       0       0
  1175 ;;      Temps:          0       0       0
  1176 ;;      Totals:         0       0       0
  1177 ;;Total ram usage:        0 bytes
  1178 ;; Hardware stack levels used: 1
  1179 ;; Hardware stack levels required when called: 3
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		_main
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187     0FAB                     _Prepare_Keypad_Pins:	
  1188                           ;psect for function _Prepare_Keypad_Pins
  1189                           
  1190     0FAB                     l2100:	
  1191                           ;incstack = 0
  1192                           ; Regs used in _Prepare_Keypad_Pins: [wreg]
  1193                           
  1194                           
  1195                           ;env_esclavo.c: 399:     TRISB = 0xF0;
  1196     0FAB  30F0               	movlw	240
  1197     0FAC  1683               	bsf	3,5	;RP0=1, select bank1
  1198     0FAD  1303               	bcf	3,6	;RP1=0, select bank1
  1199     0FAE  0086               	movwf	6	;volatile
  1200                           
  1201                           ;env_esclavo.c: 400:     PORTB = 0x0F;
  1202     0FAF  300F               	movlw	15
  1203     0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  1204     0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  1205     0FB2  0086               	movwf	6	;volatile
  1206     0FB3                     l220:
  1207     0FB3  0008               	return
  1208     0FB4                     __end_of_Prepare_Keypad_Pins:
  1209                           
  1210                           	psect	text3
  1211     0027                     __ptext3:	
  1212 ;; *************** function _Handle_Keypress *****************
  1213 ;; Defined at:
  1214 ;;		line 152 in file "env_esclavo.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  key             1    wreg     unsigned char 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  key             1   27[BANK1 ] unsigned char 
  1219 ;;  i               1   25[BANK1 ] unsigned char 
  1220 ;;  i               2   23[BANK1 ] int 
  1221 ;;  i               1   26[BANK1 ] unsigned char 
  1222 ;;  asciiCode       2   21[BANK1 ] int 
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMMON   BANK0   BANK1
  1232 ;;      Params:         0       0       0
  1233 ;;      Locals:         0       0       7
  1234 ;;      Temps:          0       0       3
  1235 ;;      Totals:         0       0      10
  1236 ;;Total ram usage:       10 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; Hardware stack levels required when called: 6
  1239 ;; This function calls:
  1240 ;;		_LCD_clear
  1241 ;;		_LCD_init
  1242 ;;		_LCD_print
  1243 ;;		_LCD_setCursor
  1244 ;;		_Prepare_LCD_Pins
  1245 ;;		_Send_Message_To_Master
  1246 ;;		_atoi
  1247 ;;		_memset
  1248 ;; This function is called by:
  1249 ;;		_main
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253     0027                     _Handle_Keypress:	
  1254                           ;psect for function _Handle_Keypress
  1255                           
  1256                           
  1257                           ;incstack = 0
  1258                           ; Regs used in _Handle_Keypress: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1259                           ;Handle_Keypress@key stored from wreg
  1260     0027  1683               	bsf	3,5	;RP0=1, select bank1
  1261     0028  1303               	bcf	3,6	;RP1=0, select bank1
  1262     0029  00BB               	movwf	Handle_Keypress@key^(0+128)
  1263     002A                     l2146:
  1264                           
  1265                           ;env_esclavo.c: 153:     LCD_init();
  1266     002A  118A  258B  118A   	fcall	_LCD_init
  1267     002D                     l2148:
  1268                           
  1269                           ;env_esclavo.c: 156:     if (asciiMode) {
  1270     002D  1283               	bcf	3,5	;RP0=0, select bank0
  1271     002E  1303               	bcf	3,6	;RP1=0, select bank0
  1272     002F  084A               	movf	_asciiMode,w
  1273     0030  1903               	btfsc	3,2
  1274     0031  2833               	goto	u1921
  1275     0032  2834               	goto	u1920
  1276     0033                     u1921:
  1277     0033  28E6               	goto	l2196
  1278     0034                     u1920:
  1279     0034                     l2150:
  1280                           
  1281                           ;env_esclavo.c: 157:         if (key == '=') {
  1282     0034  303D               	movlw	61
  1283     0035  1683               	bsf	3,5	;RP0=1, select bank1
  1284     0036  1303               	bcf	3,6	;RP1=0, select bank1
  1285     0037  063B               	xorwf	Handle_Keypress@key^(0+128),w
  1286     0038  1D03               	btfss	3,2
  1287     0039  283B               	goto	u1931
  1288     003A  283C               	goto	u1930
  1289     003B                     u1931:
  1290     003B  28BE               	goto	l2184
  1291     003C                     u1930:
  1292     003C                     l2152:
  1293                           
  1294                           ;env_esclavo.c: 159:             int asciiCode = atoi(asciiValue);
  1295     003C  305B               	movlw	(low (_asciiValue| 0))& (0+255)
  1296     003D  118A  23D4  118A   	fcall	_atoi
  1297     0040  1683               	bsf	3,5	;RP0=1, select bank1
  1298     0041  1303               	bcf	3,6	;RP1=0, select bank1
  1299     0042  0823               	movf	(?_atoi+1)^(0+128),w
  1300     0043  00B6               	movwf	(Handle_Keypress@asciiCode+1)^(0+128)
  1301     0044  0822               	movf	?_atoi^(0+128),w
  1302     0045  00B5               	movwf	Handle_Keypress@asciiCode^(0+128)
  1303     0046                     l2154:
  1304                           
  1305                           ;env_esclavo.c: 160:             if (asciiCode >= 33 && asciiCode <= 254) {
  1306     0046  0836               	movf	(Handle_Keypress@asciiCode+1)^(0+128),w
  1307     0047  3A80               	xorlw	128
  1308     0048  00FF               	movwf	btemp+1
  1309     0049  3080               	movlw	128
  1310     004A  027F               	subwf	btemp+1,w
  1311     004B  1D03               	skipz
  1312     004C  284F               	goto	u1945
  1313     004D  3021               	movlw	33
  1314     004E  0235               	subwf	Handle_Keypress@asciiCode^(0+128),w
  1315     004F                     u1945:
  1316     004F  1C03               	skipc
  1317     0050  2852               	goto	u1941
  1318     0051  2853               	goto	u1940
  1319     0052                     u1941:
  1320     0052  28B8               	goto	l2178
  1321     0053                     u1940:
  1322     0053                     l2156:
  1323     0053  1683               	bsf	3,5	;RP0=1, select bank1
  1324     0054  1303               	bcf	3,6	;RP1=0, select bank1
  1325     0055  0836               	movf	(Handle_Keypress@asciiCode+1)^(0+128),w
  1326     0056  3A80               	xorlw	128
  1327     0057  00FF               	movwf	btemp+1
  1328     0058  3080               	movlw	128
  1329     0059  027F               	subwf	btemp+1,w
  1330     005A  1D03               	skipz
  1331     005B  285E               	goto	u1955
  1332     005C  30FF               	movlw	255
  1333     005D  0235               	subwf	Handle_Keypress@asciiCode^(0+128),w
  1334     005E                     u1955:
  1335     005E  1803               	skipnc
  1336     005F  2861               	goto	u1951
  1337     0060  2862               	goto	u1950
  1338     0061                     u1951:
  1339     0061  28B8               	goto	l2178
  1340     0062                     u1950:
  1341     0062                     l2158:
  1342                           
  1343                           ;env_esclavo.c: 161:                 if (charCount < 16) {
  1344     0062  1283               	bcf	3,5	;RP0=0, select bank0
  1345     0063  1303               	bcf	3,6	;RP1=0, select bank0
  1346     0064  0846               	movf	_charCount+1,w
  1347     0065  3A80               	xorlw	128
  1348     0066  00FF               	movwf	btemp+1
  1349     0067  3080               	movlw	128
  1350     0068  027F               	subwf	btemp+1,w
  1351     0069  1D03               	skipz
  1352     006A  286D               	goto	u1965
  1353     006B  3010               	movlw	16
  1354     006C  0245               	subwf	_charCount,w
  1355     006D                     u1965:
  1356     006D  1803               	skipnc
  1357     006E  2870               	goto	u1961
  1358     006F  2871               	goto	u1960
  1359     0070                     u1961:
  1360     0070  28B8               	goto	l2178
  1361     0071                     u1960:
  1362     0071                     l2160:
  1363                           
  1364                           ;env_esclavo.c: 162:                     for (unsigned char i = charCount; i > cursorPos
      +                          ition; i--) {
  1365     0071  1283               	bcf	3,5	;RP0=0, select bank0
  1366     0072  1303               	bcf	3,6	;RP1=0, select bank0
  1367     0073  0845               	movf	_charCount,w
  1368     0074  1683               	bsf	3,5	;RP0=1, select bank1
  1369     0075  1303               	bcf	3,6	;RP1=0, select bank1
  1370     0076  00B9               	movwf	Handle_Keypress@i^(0+128)
  1371     0077  2887               	goto	l2166
  1372     0078                     l2162:
  1373                           
  1374                           ;env_esclavo.c: 163:                         displayString[i] = displayString[i - 1];
  1375     0078  1683               	bsf	3,5	;RP0=1, select bank1
  1376     0079  1303               	bcf	3,6	;RP1=0, select bank1
  1377     007A  0839               	movf	Handle_Keypress@i^(0+128),w
  1378     007B  3E4A               	addlw	(low ((_displayString| 0+255)))& (0+255)
  1379     007C  0084               	movwf	4
  1380     007D  1383               	bcf	3,7	;select IRP bank0
  1381     007E  0800               	movf	0,w
  1382     007F  00FF               	movwf	btemp+1
  1383     0080  0839               	movf	Handle_Keypress@i^(0+128),w
  1384     0081  3E4B               	addlw	(low (_displayString| 0))& (0+255)
  1385     0082  0084               	movwf	4
  1386     0083  087F               	movf	btemp+1,w
  1387     0084  0080               	movwf	0
  1388     0085                     l2164:
  1389                           
  1390                           ;env_esclavo.c: 164:                     }
  1391     0085  3001               	movlw	1
  1392     0086  02B9               	subwf	Handle_Keypress@i^(0+128),f
  1393     0087                     l2166:
  1394     0087  0839               	movf	Handle_Keypress@i^(0+128),w
  1395     0088  1283               	bcf	3,5	;RP0=0, select bank0
  1396     0089  1303               	bcf	3,6	;RP1=0, select bank0
  1397     008A  0248               	subwf	_cursorPosition,w
  1398     008B  1C03               	skipc
  1399     008C  288E               	goto	u1971
  1400     008D  288F               	goto	u1970
  1401     008E                     u1971:
  1402     008E  2878               	goto	l2162
  1403     008F                     u1970:
  1404     008F                     l2168:
  1405                           
  1406                           ;env_esclavo.c: 165:                     displayString[cursorPosition] = (char)asciiCode
      +                          ;
  1407     008F  0848               	movf	_cursorPosition,w
  1408     0090  3E4B               	addlw	(low (_displayString| 0))& (0+255)
  1409     0091  0084               	movwf	4
  1410     0092  1683               	bsf	3,5	;RP0=1, select bank1
  1411     0093  1303               	bcf	3,6	;RP1=0, select bank1
  1412     0094  0835               	movf	Handle_Keypress@asciiCode^(0+128),w
  1413     0095  1383               	bcf	3,7	;select IRP bank0
  1414     0096  0080               	movwf	0
  1415     0097                     l2170:
  1416                           
  1417                           ;env_esclavo.c: 166:                     if (cursorPosition < 16) cursorPosition++;
  1418     0097  3010               	movlw	16
  1419     0098  1283               	bcf	3,5	;RP0=0, select bank0
  1420     0099  1303               	bcf	3,6	;RP1=0, select bank0
  1421     009A  0248               	subwf	_cursorPosition,w
  1422     009B  1803               	skipnc
  1423     009C  289E               	goto	u1981
  1424     009D  289F               	goto	u1980
  1425     009E                     u1981:
  1426     009E  28A3               	goto	l2174
  1427     009F                     u1980:
  1428     009F                     l2172:
  1429     009F  3001               	movlw	1
  1430     00A0  00FF               	movwf	btemp+1
  1431     00A1  087F               	movf	btemp+1,w
  1432     00A2  07C8               	addwf	_cursorPosition,f
  1433     00A3                     l2174:
  1434                           
  1435                           ;env_esclavo.c: 167:                     if (charCount < 16) charCount++;
  1436     00A3  0846               	movf	_charCount+1,w
  1437     00A4  3A80               	xorlw	128
  1438     00A5  00FF               	movwf	btemp+1
  1439     00A6  3080               	movlw	128
  1440     00A7  027F               	subwf	btemp+1,w
  1441     00A8  1D03               	skipz
  1442     00A9  28AC               	goto	u1995
  1443     00AA  3010               	movlw	16
  1444     00AB  0245               	subwf	_charCount,w
  1445     00AC                     u1995:
  1446     00AC  1803               	skipnc
  1447     00AD  28AF               	goto	u1991
  1448     00AE  28B0               	goto	u1990
  1449     00AF                     u1991:
  1450     00AF  28B8               	goto	l2178
  1451     00B0                     u1990:
  1452     00B0                     l2176:
  1453     00B0  3001               	movlw	1
  1454     00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1455     00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1456     00B3  07C5               	addwf	_charCount,f
  1457     00B4  1803               	skipnc
  1458     00B5  0AC6               	incf	_charCount+1,f
  1459     00B6  3000               	movlw	0
  1460     00B7  07C6               	addwf	_charCount+1,f
  1461     00B8                     l2178:
  1462                           
  1463                           ;env_esclavo.c: 170:             asciiMode = 0;
  1464     00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1465     00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1466     00BA  01CA               	clrf	_asciiMode
  1467     00BB                     l2180:
  1468                           
  1469                           ;env_esclavo.c: 171:             asciiDigits = 0;
  1470     00BB  01C9               	clrf	_asciiDigits
  1471     00BC                     l2182:
  1472                           
  1473                           ;env_esclavo.c: 172:             asciiValue[0] = '\0';
  1474     00BC  01DB               	clrf	_asciiValue
  1475                           
  1476                           ;env_esclavo.c: 173:         } else if (key >= '0' && key <= '9' && asciiDigits < 3) {
  1477     00BD  2A6D               	goto	l149
  1478     00BE                     l2184:
  1479     00BE  3030               	movlw	48
  1480     00BF  023B               	subwf	Handle_Keypress@key^(0+128),w
  1481     00C0  1C03               	skipc
  1482     00C1  28C3               	goto	u2001
  1483     00C2  28C4               	goto	u2000
  1484     00C3                     u2001:
  1485     00C3  2A6D               	goto	l149
  1486     00C4                     u2000:
  1487     00C4                     l2186:
  1488     00C4  303A               	movlw	58
  1489     00C5  023B               	subwf	Handle_Keypress@key^(0+128),w
  1490     00C6  1803               	skipnc
  1491     00C7  28C9               	goto	u2011
  1492     00C8  28CA               	goto	u2010
  1493     00C9                     u2011:
  1494     00C9  2A6D               	goto	l149
  1495     00CA                     u2010:
  1496     00CA                     l2188:
  1497     00CA  3003               	movlw	3
  1498     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1499     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1500     00CD  0249               	subwf	_asciiDigits,w
  1501     00CE  1803               	skipnc
  1502     00CF  28D1               	goto	u2021
  1503     00D0  28D2               	goto	u2020
  1504     00D1                     u2021:
  1505     00D1  2A6D               	goto	l149
  1506     00D2                     u2020:
  1507     00D2                     l2190:
  1508                           
  1509                           ;env_esclavo.c: 175:             asciiValue[asciiDigits++] = key;
  1510     00D2  0849               	movf	_asciiDigits,w
  1511     00D3  3E5B               	addlw	(low (_asciiValue| 0))& (0+255)
  1512     00D4  0084               	movwf	4
  1513     00D5  1683               	bsf	3,5	;RP0=1, select bank1
  1514     00D6  1303               	bcf	3,6	;RP1=0, select bank1
  1515     00D7  083B               	movf	Handle_Keypress@key^(0+128),w
  1516     00D8  1383               	bcf	3,7	;select IRP bank0
  1517     00D9  0080               	movwf	0
  1518     00DA                     l2192:
  1519     00DA  3001               	movlw	1
  1520     00DB  00FF               	movwf	btemp+1
  1521     00DC  087F               	movf	btemp+1,w
  1522     00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1523     00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1524     00DF  07C9               	addwf	_asciiDigits,f
  1525     00E0                     l2194:
  1526                           
  1527                           ;env_esclavo.c: 176:             asciiValue[asciiDigits] = '\0';
  1528     00E0  0849               	movf	_asciiDigits,w
  1529     00E1  3E5B               	addlw	(low (_asciiValue| 0))& (0+255)
  1530     00E2  0084               	movwf	4
  1531     00E3  0180               	clrf	0
  1532     00E4  2A6D               	goto	l149
  1533     00E5                     l124:
  1534                           
  1535                           ;env_esclavo.c: 178:     } else {
  1536     00E5  2A6D               	goto	l149
  1537     00E6                     l2196:
  1538                           
  1539                           ;env_esclavo.c: 180:         if (key == '+') {
  1540     00E6  302B               	movlw	43
  1541     00E7  1683               	bsf	3,5	;RP0=1, select bank1
  1542     00E8  1303               	bcf	3,6	;RP1=0, select bank1
  1543     00E9  063B               	xorwf	Handle_Keypress@key^(0+128),w
  1544     00EA  1D03               	btfss	3,2
  1545     00EB  28ED               	goto	u2031
  1546     00EC  28EE               	goto	u2030
  1547     00ED                     u2031:
  1548     00ED  28F5               	goto	l2202
  1549     00EE                     u2030:
  1550     00EE                     l2198:
  1551                           
  1552                           ;env_esclavo.c: 181:             asciiMode = 1;
  1553     00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1554     00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1555     00F0  01CA               	clrf	_asciiMode
  1556     00F1  0ACA               	incf	_asciiMode,f
  1557     00F2                     l2200:
  1558                           
  1559                           ;env_esclavo.c: 182:             asciiDigits = 0;
  1560     00F2  01C9               	clrf	_asciiDigits
  1561                           
  1562                           ;env_esclavo.c: 183:             asciiValue[0] = '\0';
  1563     00F3  01DB               	clrf	_asciiValue
  1564                           
  1565                           ;env_esclavo.c: 184:         }
  1566     00F4  2A6D               	goto	l149
  1567     00F5                     l2202:
  1568     00F5  302F               	movlw	47
  1569     00F6  063B               	xorwf	Handle_Keypress@key^(0+128),w
  1570     00F7  1D03               	btfss	3,2
  1571     00F8  28FA               	goto	u2041
  1572     00F9  28FB               	goto	u2040
  1573     00FA                     u2041:
  1574     00FA  2905               	goto	l2208
  1575     00FB                     u2040:
  1576     00FB                     l2204:
  1577                           
  1578                           ;env_esclavo.c: 187:             if (cursorPosition > 0) cursorPosition--;
  1579     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1580     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1581     00FD  0848               	movf	_cursorPosition,w
  1582     00FE  1903               	btfsc	3,2
  1583     00FF  2901               	goto	u2051
  1584     0100  2902               	goto	u2050
  1585     0101                     u2051:
  1586     0101  2A6D               	goto	l149
  1587     0102                     u2050:
  1588     0102                     l2206:
  1589     0102  3001               	movlw	1
  1590     0103  02C8               	subwf	_cursorPosition,f
  1591     0104  2A6D               	goto	l149
  1592     0105                     l2208:
  1593     0105  3058               	movlw	88
  1594     0106  063B               	xorwf	Handle_Keypress@key^(0+128),w
  1595     0107  1D03               	btfss	3,2
  1596     0108  290A               	goto	u2061
  1597     0109  290B               	goto	u2060
  1598     010A                     u2061:
  1599     010A  291F               	goto	l2214
  1600     010B                     u2060:
  1601     010B                     l2210:
  1602                           
  1603                           ;env_esclavo.c: 189:             if (cursorPosition < charCount) cursorPosition++;
  1604     010B  1283               	bcf	3,5	;RP0=0, select bank0
  1605     010C  1303               	bcf	3,6	;RP1=0, select bank0
  1606     010D  0846               	movf	_charCount+1,w
  1607     010E  3A80               	xorlw	128
  1608     010F  3C80               	sublw	128
  1609     0110  1D03               	skipz
  1610     0111  2914               	goto	u2075
  1611     0112  0845               	movf	_charCount,w
  1612     0113  0248               	subwf	_cursorPosition,w
  1613     0114                     u2075:
  1614     0114  1803               	skipnc
  1615     0115  2917               	goto	u2071
  1616     0116  2918               	goto	u2070
  1617     0117                     u2071:
  1618     0117  2A6D               	goto	l149
  1619     0118                     u2070:
  1620     0118                     l2212:
  1621     0118  3001               	movlw	1
  1622     0119  00FF               	movwf	btemp+1
  1623     011A  087F               	movf	btemp+1,w
  1624     011B  1283               	bcf	3,5	;RP0=0, select bank0
  1625     011C  1303               	bcf	3,6	;RP1=0, select bank0
  1626     011D  07C8               	addwf	_cursorPosition,f
  1627     011E  2A6D               	goto	l149
  1628     011F                     l2214:
  1629     011F  3043               	movlw	67
  1630     0120  063B               	xorwf	Handle_Keypress@key^(0+128),w
  1631     0121  1D03               	btfss	3,2
  1632     0122  2924               	goto	u2081
  1633     0123  2925               	goto	u2080
  1634     0124                     u2081:
  1635     0124  2985               	goto	l2232
  1636     0125                     u2080:
  1637     0125                     l2216:
  1638                           
  1639                           ;env_esclavo.c: 191:             for (unsigned char i = cursorPosition; i < charCount; i
      +                          ++) {
  1640     0125  1283               	bcf	3,5	;RP0=0, select bank0
  1641     0126  1303               	bcf	3,6	;RP1=0, select bank0
  1642     0127  0848               	movf	_cursorPosition,w
  1643     0128  1683               	bsf	3,5	;RP0=1, select bank1
  1644     0129  1303               	bcf	3,6	;RP1=0, select bank1
  1645     012A  00BA               	movwf	Handle_Keypress@i_298^(0+128)
  1646     012B  293D               	goto	l2222
  1647     012C                     l2218:
  1648                           
  1649                           ;env_esclavo.c: 192:                 displayString[i] = displayString[i + 1];
  1650     012C  1683               	bsf	3,5	;RP0=1, select bank1
  1651     012D  1303               	bcf	3,6	;RP1=0, select bank1
  1652     012E  083A               	movf	Handle_Keypress@i_298^(0+128),w
  1653     012F  3E4C               	addlw	(low ((_displayString| 0+1)))& (0+255)
  1654     0130  0084               	movwf	4
  1655     0131  1383               	bcf	3,7	;select IRP bank0
  1656     0132  0800               	movf	0,w
  1657     0133  00FF               	movwf	btemp+1
  1658     0134  083A               	movf	Handle_Keypress@i_298^(0+128),w
  1659     0135  3E4B               	addlw	(low (_displayString| 0))& (0+255)
  1660     0136  0084               	movwf	4
  1661     0137  087F               	movf	btemp+1,w
  1662     0138  0080               	movwf	0
  1663     0139                     l2220:
  1664                           
  1665                           ;env_esclavo.c: 193:             }
  1666     0139  3001               	movlw	1
  1667     013A  00FF               	movwf	btemp+1
  1668     013B  087F               	movf	btemp+1,w
  1669     013C  07BA               	addwf	Handle_Keypress@i_298^(0+128),f
  1670     013D                     l2222:
  1671     013D  1283               	bcf	3,5	;RP0=0, select bank0
  1672     013E  1303               	bcf	3,6	;RP1=0, select bank0
  1673     013F  0846               	movf	_charCount+1,w
  1674     0140  3A80               	xorlw	128
  1675     0141  3C80               	sublw	128
  1676     0142  1D03               	skipz
  1677     0143  2948               	goto	u2095
  1678     0144  0845               	movf	_charCount,w
  1679     0145  1683               	bsf	3,5	;RP0=1, select bank1
  1680     0146  1303               	bcf	3,6	;RP1=0, select bank1
  1681     0147  023A               	subwf	Handle_Keypress@i_298^(0+128),w
  1682     0148                     u2095:
  1683     0148  1C03               	skipc
  1684     0149  294B               	goto	u2091
  1685     014A  294C               	goto	u2090
  1686     014B                     u2091:
  1687     014B  292C               	goto	l2218
  1688     014C                     u2090:
  1689     014C                     l2224:
  1690                           
  1691                           ;env_esclavo.c: 194:             if (charCount > 0) charCount--;
  1692     014C  1283               	bcf	3,5	;RP0=0, select bank0
  1693     014D  1303               	bcf	3,6	;RP1=0, select bank0
  1694     014E  0846               	movf	_charCount+1,w
  1695     014F  3A80               	xorlw	128
  1696     0150  00FF               	movwf	btemp+1
  1697     0151  3080               	movlw	128
  1698     0152  027F               	subwf	btemp+1,w
  1699     0153  1D03               	skipz
  1700     0154  2957               	goto	u2105
  1701     0155  3001               	movlw	1
  1702     0156  0245               	subwf	_charCount,w
  1703     0157                     u2105:
  1704     0157  1C03               	skipc
  1705     0158  295A               	goto	u2101
  1706     0159  295B               	goto	u2100
  1707     015A                     u2101:
  1708     015A  2963               	goto	l139
  1709     015B                     u2100:
  1710     015B                     l2226:
  1711     015B  30FF               	movlw	255
  1712     015C  1283               	bcf	3,5	;RP0=0, select bank0
  1713     015D  1303               	bcf	3,6	;RP1=0, select bank0
  1714     015E  07C5               	addwf	_charCount,f
  1715     015F  1803               	skipnc
  1716     0160  0AC6               	incf	_charCount+1,f
  1717     0161  30FF               	movlw	255
  1718     0162  07C6               	addwf	_charCount+1,f
  1719     0163                     l139:
  1720                           
  1721                           ;env_esclavo.c: 196:             if (cursorPosition >= charCount && charCount > 0) curso
      +                          rPosition = charCount - 1;
  1722     0163  1283               	bcf	3,5	;RP0=0, select bank0
  1723     0164  1303               	bcf	3,6	;RP1=0, select bank0
  1724     0165  0846               	movf	_charCount+1,w
  1725     0166  3A80               	xorlw	128
  1726     0167  3C80               	sublw	128
  1727     0168  1D03               	skipz
  1728     0169  296C               	goto	u2115
  1729     016A  0845               	movf	_charCount,w
  1730     016B  0248               	subwf	_cursorPosition,w
  1731     016C                     u2115:
  1732     016C  1C03               	skipc
  1733     016D  296F               	goto	u2111
  1734     016E  2970               	goto	u2110
  1735     016F                     u2111:
  1736     016F  2A6D               	goto	l149
  1737     0170                     u2110:
  1738     0170                     l2228:
  1739     0170  1283               	bcf	3,5	;RP0=0, select bank0
  1740     0171  1303               	bcf	3,6	;RP1=0, select bank0
  1741     0172  0846               	movf	_charCount+1,w
  1742     0173  3A80               	xorlw	128
  1743     0174  00FF               	movwf	btemp+1
  1744     0175  3080               	movlw	128
  1745     0176  027F               	subwf	btemp+1,w
  1746     0177  1D03               	skipz
  1747     0178  297B               	goto	u2125
  1748     0179  3001               	movlw	1
  1749     017A  0245               	subwf	_charCount,w
  1750     017B                     u2125:
  1751     017B  1C03               	skipc
  1752     017C  297E               	goto	u2121
  1753     017D  297F               	goto	u2120
  1754     017E                     u2121:
  1755     017E  2A6D               	goto	l149
  1756     017F                     u2120:
  1757     017F                     l2230:
  1758     017F  1283               	bcf	3,5	;RP0=0, select bank0
  1759     0180  1303               	bcf	3,6	;RP1=0, select bank0
  1760     0181  0845               	movf	_charCount,w
  1761     0182  3EFF               	addlw	255
  1762     0183  00C8               	movwf	_cursorPosition
  1763     0184  2A6D               	goto	l149
  1764     0185                     l2232:
  1765     0185  302D               	movlw	45
  1766     0186  063B               	xorwf	Handle_Keypress@key^(0+128),w
  1767     0187  1D03               	btfss	3,2
  1768     0188  298A               	goto	u2131
  1769     0189  298B               	goto	u2130
  1770     018A                     u2131:
  1771     018A  29EE               	goto	l2262
  1772     018B                     u2130:
  1773     018B                     l2234:
  1774                           
  1775                           ;env_esclavo.c: 198:             if (charCount > 0) {
  1776     018B  1283               	bcf	3,5	;RP0=0, select bank0
  1777     018C  1303               	bcf	3,6	;RP1=0, select bank0
  1778     018D  0846               	movf	_charCount+1,w
  1779     018E  3A80               	xorlw	128
  1780     018F  00FF               	movwf	btemp+1
  1781     0190  3080               	movlw	128
  1782     0191  027F               	subwf	btemp+1,w
  1783     0192  1D03               	skipz
  1784     0193  2996               	goto	u2145
  1785     0194  3001               	movlw	1
  1786     0195  0245               	subwf	_charCount,w
  1787     0196                     u2145:
  1788     0196  1C03               	skipc
  1789     0197  2999               	goto	u2141
  1790     0198  299A               	goto	u2140
  1791     0199                     u2141:
  1792     0199  28E5               	goto	l124
  1793     019A                     u2140:
  1794     019A                     l2236:
  1795                           
  1796                           ;env_esclavo.c: 199:                 displayString[cursorPosition] = '\0';
  1797     019A  1283               	bcf	3,5	;RP0=0, select bank0
  1798     019B  1303               	bcf	3,6	;RP1=0, select bank0
  1799     019C  0848               	movf	_cursorPosition,w
  1800     019D  3E4B               	addlw	(low (_displayString| 0))& (0+255)
  1801     019E  0084               	movwf	4
  1802     019F  1383               	bcf	3,7	;select IRP bank0
  1803     01A0  0180               	clrf	0
  1804     01A1                     l2238:
  1805                           
  1806                           ;env_esclavo.c: 200:                 Send_Message_To_Master(displayString);
  1807     01A1  304B               	movlw	(low (_displayString| 0))& (0+255)
  1808     01A2  118A  25D8  118A   	fcall	_Send_Message_To_Master
  1809     01A5                     l2240:
  1810                           
  1811                           ;env_esclavo.c: 201:                 LCD_clear();
  1812     01A5  158A  27DC  118A   	fcall	_LCD_clear
  1813     01A8                     l2242:
  1814                           
  1815                           ;env_esclavo.c: 202:                 LCD_setCursor(1, 0);
  1816     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1817     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1818     01AA  01C1               	clrf	LCD_setCursor@column
  1819     01AB  3001               	movlw	1
  1820     01AC  118A  2760  118A   	fcall	_LCD_setCursor
  1821     01AF                     l2244:
  1822                           
  1823                           ;env_esclavo.c: 203:                 LCD_print("Mensaje enviado");
  1824     01AF  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1825     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1826     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1827     01B2  00C1               	movwf	LCD_print@string
  1828     01B3  3080               	movlw	128
  1829     01B4  00C2               	movwf	LCD_print@string+1
  1830     01B5  118A  271C  118A   	fcall	_LCD_print
  1831     01B8                     l2246:
  1832                           
  1833                           ;env_esclavo.c: 204:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
  1834     01B8  300B               	movlw	11
  1835     01B9  1683               	bsf	3,5	;RP0=1, select bank1
  1836     01BA  1303               	bcf	3,6	;RP1=0, select bank1
  1837     01BB  00B4               	movwf	(??_Handle_Keypress^(0+128)+2)
  1838     01BC  3026               	movlw	38
  1839     01BD  00B3               	movwf	(??_Handle_Keypress^(0+128)+1)
  1840     01BE  305D               	movlw	93
  1841     01BF  00B2               	movwf	??_Handle_Keypress^(0+128)
  1842     01C0                     u2237:
  1843     01C0  0BB2               	decfsz	??_Handle_Keypress^(0+128),f
  1844     01C1  29C0               	goto	u2237
  1845     01C2  0BB3               	decfsz	(??_Handle_Keypress^(0+128)+1),f
  1846     01C3  29C0               	goto	u2237
  1847     01C4  0BB4               	decfsz	(??_Handle_Keypress^(0+128)+2),f
  1848     01C5  29C0               	goto	u2237
  1849     01C6  0000               	nop
  1850     01C7                     l2248:
  1851                           
  1852                           ;env_esclavo.c: 205:                 LCD_clear();
  1853     01C7  158A  27DC  118A   	fcall	_LCD_clear
  1854     01CA                     l2250:
  1855                           
  1856                           ;env_esclavo.c: 206:                 LCD_setCursor(1, 0);
  1857     01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1858     01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1859     01CC  01C1               	clrf	LCD_setCursor@column
  1860     01CD  3001               	movlw	1
  1861     01CE  118A  2760  118A   	fcall	_LCD_setCursor
  1862     01D1                     l2252:
  1863                           
  1864                           ;env_esclavo.c: 207:                 LCD_print("Esperando resp");
  1865     01D1  3021               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1866     01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1867     01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1868     01D4  00C1               	movwf	LCD_print@string
  1869     01D5  3080               	movlw	128
  1870     01D6  00C2               	movwf	LCD_print@string+1
  1871     01D7  118A  271C  118A   	fcall	_LCD_print
  1872     01DA                     l2254:
  1873                           
  1874                           ;env_esclavo.c: 208:                 allow_input = 0;
  1875     01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1876     01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1877     01DC  01C7               	clrf	_allow_input	;volatile
  1878     01DD                     l2256:
  1879                           
  1880                           ;env_esclavo.c: 209:                 memset(displayString, 0, sizeof(displayString));
  1881     01DD  3000               	movlw	0
  1882     01DE  00BE               	movwf	memset@c
  1883     01DF  00BF               	movwf	memset@c+1
  1884     01E0  3010               	movlw	16
  1885     01E1  00C0               	movwf	memset@n
  1886     01E2  3000               	movlw	0
  1887     01E3  00C1               	movwf	memset@n+1
  1888     01E4  304B               	movlw	(low (_displayString| 0))& (0+255)
  1889     01E5  118A  26F6  118A   	fcall	_memset
  1890     01E8                     l2258:
  1891                           
  1892                           ;env_esclavo.c: 210:                 charCount = 0;
  1893     01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1894     01E9  1303               	bcf	3,6	;RP1=0, select bank0
  1895     01EA  01C5               	clrf	_charCount
  1896     01EB  01C6               	clrf	_charCount+1
  1897     01EC                     l2260:
  1898                           
  1899                           ;env_esclavo.c: 211:                 cursorPosition = 0;
  1900     01EC  01C8               	clrf	_cursorPosition
  1901     01ED  2A6D               	goto	l149
  1902     01EE                     l2262:
  1903     01EE  083B               	movf	Handle_Keypress@key^(0+128),w
  1904     01EF  1903               	btfsc	3,2
  1905     01F0  29F2               	goto	u2151
  1906     01F1  29F3               	goto	u2150
  1907     01F2                     u2151:
  1908     01F2  28E5               	goto	l124
  1909     01F3                     u2150:
  1910     01F3                     l2264:
  1911     01F3  303D               	movlw	61
  1912     01F4  063B               	xorwf	Handle_Keypress@key^(0+128),w
  1913     01F5  1903               	btfsc	3,2
  1914     01F6  29F8               	goto	u2161
  1915     01F7  29F9               	goto	u2160
  1916     01F8                     u2161:
  1917     01F8  28E5               	goto	l124
  1918     01F9                     u2160:
  1919     01F9                     l2266:
  1920     01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1921     01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1922     01FB  0846               	movf	_charCount+1,w
  1923     01FC  3A80               	xorlw	128
  1924     01FD  00FF               	movwf	btemp+1
  1925     01FE  3080               	movlw	128
  1926     01FF  027F               	subwf	btemp+1,w
  1927     0200  1D03               	skipz
  1928     0201  2A04               	goto	u2175
  1929     0202  300F               	movlw	15
  1930     0203  0245               	subwf	_charCount,w
  1931     0204                     u2175:
  1932     0204  1803               	skipnc
  1933     0205  2A07               	goto	u2171
  1934     0206  2A08               	goto	u2170
  1935     0207                     u2171:
  1936     0207  28E5               	goto	l124
  1937     0208                     u2170:
  1938     0208                     l2268:
  1939                           
  1940                           ;env_esclavo.c: 215:             for (int i = charCount; i > cursorPosition; i--) {
  1941     0208  1283               	bcf	3,5	;RP0=0, select bank0
  1942     0209  1303               	bcf	3,6	;RP1=0, select bank0
  1943     020A  0846               	movf	_charCount+1,w
  1944     020B  1683               	bsf	3,5	;RP0=1, select bank1
  1945     020C  1303               	bcf	3,6	;RP1=0, select bank1
  1946     020D  00B8               	movwf	(Handle_Keypress@i_301+1)^(0+128)
  1947     020E  1283               	bcf	3,5	;RP0=0, select bank0
  1948     020F  1303               	bcf	3,6	;RP1=0, select bank0
  1949     0210  0845               	movf	_charCount,w
  1950     0211  1683               	bsf	3,5	;RP0=1, select bank1
  1951     0212  1303               	bcf	3,6	;RP1=0, select bank1
  1952     0213  00B7               	movwf	Handle_Keypress@i_301^(0+128)
  1953     0214  2A28               	goto	l2274
  1954     0215                     l2270:
  1955                           
  1956                           ;env_esclavo.c: 216:                 displayString[i] = displayString[i - 1];
  1957     0215  1683               	bsf	3,5	;RP0=1, select bank1
  1958     0216  1303               	bcf	3,6	;RP1=0, select bank1
  1959     0217  0837               	movf	Handle_Keypress@i_301^(0+128),w
  1960     0218  3E4A               	addlw	(low ((_displayString| 0+255)))& (0+255)
  1961     0219  0084               	movwf	4
  1962     021A  1383               	bcf	3,7	;select IRP bank0
  1963     021B  0800               	movf	0,w
  1964     021C  00FF               	movwf	btemp+1
  1965     021D  0837               	movf	Handle_Keypress@i_301^(0+128),w
  1966     021E  3E4B               	addlw	(low (_displayString| 0))& (0+255)
  1967     021F  0084               	movwf	4
  1968     0220  087F               	movf	btemp+1,w
  1969     0221  0080               	movwf	0
  1970     0222                     l2272:
  1971                           
  1972                           ;env_esclavo.c: 217:             }
  1973     0222  30FF               	movlw	255
  1974     0223  07B7               	addwf	Handle_Keypress@i_301^(0+128),f
  1975     0224  1803               	skipnc
  1976     0225  0AB8               	incf	(Handle_Keypress@i_301+1)^(0+128),f
  1977     0226  30FF               	movlw	255
  1978     0227  07B8               	addwf	(Handle_Keypress@i_301+1)^(0+128),f
  1979     0228                     l2274:
  1980     0228  0838               	movf	(Handle_Keypress@i_301+1)^(0+128),w
  1981     0229  3A80               	xorlw	128
  1982     022A  3C80               	sublw	128
  1983     022B  1D03               	skipz
  1984     022C  2A31               	goto	u2185
  1985     022D  0837               	movf	Handle_Keypress@i_301^(0+128),w
  1986     022E  1283               	bcf	3,5	;RP0=0, select bank0
  1987     022F  1303               	bcf	3,6	;RP1=0, select bank0
  1988     0230  0248               	subwf	_cursorPosition,w
  1989     0231                     u2185:
  1990     0231  1C03               	skipc
  1991     0232  2A34               	goto	u2181
  1992     0233  2A35               	goto	u2180
  1993     0234                     u2181:
  1994     0234  2A15               	goto	l2270
  1995     0235                     u2180:
  1996     0235                     l2276:
  1997                           
  1998                           ;env_esclavo.c: 218:             displayString[cursorPosition] = key;
  1999     0235  1283               	bcf	3,5	;RP0=0, select bank0
  2000     0236  1303               	bcf	3,6	;RP1=0, select bank0
  2001     0237  0848               	movf	_cursorPosition,w
  2002     0238  3E4B               	addlw	(low (_displayString| 0))& (0+255)
  2003     0239  0084               	movwf	4
  2004     023A  1683               	bsf	3,5	;RP0=1, select bank1
  2005     023B  1303               	bcf	3,6	;RP1=0, select bank1
  2006     023C  083B               	movf	Handle_Keypress@key^(0+128),w
  2007     023D  1383               	bcf	3,7	;select IRP bank0
  2008     023E  0080               	movwf	0
  2009     023F                     l2278:
  2010                           
  2011                           ;env_esclavo.c: 219:             cursorPosition++;
  2012     023F  3001               	movlw	1
  2013     0240  00FF               	movwf	btemp+1
  2014     0241  087F               	movf	btemp+1,w
  2015     0242  1283               	bcf	3,5	;RP0=0, select bank0
  2016     0243  1303               	bcf	3,6	;RP1=0, select bank0
  2017     0244  07C8               	addwf	_cursorPosition,f
  2018     0245                     l2280:
  2019                           
  2020                           ;env_esclavo.c: 220:             charCount++;
  2021     0245  3001               	movlw	1
  2022     0246  07C5               	addwf	_charCount,f
  2023     0247  1803               	skipnc
  2024     0248  0AC6               	incf	_charCount+1,f
  2025     0249  3000               	movlw	0
  2026     024A  07C6               	addwf	_charCount+1,f
  2027     024B                     l2282:
  2028                           
  2029                           ;env_esclavo.c: 221:             displayString[charCount] = '\0';
  2030     024B  0845               	movf	_charCount,w
  2031     024C  3E4B               	addlw	(low (_displayString| 0))& (0+255)
  2032     024D  0084               	movwf	4
  2033     024E  0180               	clrf	0
  2034     024F                     l2284:
  2035                           
  2036                           ;env_esclavo.c: 223:             Prepare_LCD_Pins();
  2037     024F  158A  2799  118A   	fcall	_Prepare_LCD_Pins
  2038     0252                     l2286:
  2039                           
  2040                           ;env_esclavo.c: 224:             LCD_clear();
  2041     0252  158A  27DC  118A   	fcall	_LCD_clear
  2042     0255                     l2288:
  2043                           
  2044                           ;env_esclavo.c: 225:             LCD_setCursor(1, 0);
  2045     0255  1283               	bcf	3,5	;RP0=0, select bank0
  2046     0256  1303               	bcf	3,6	;RP1=0, select bank0
  2047     0257  01C1               	clrf	LCD_setCursor@column
  2048     0258  3001               	movlw	1
  2049     0259  118A  2760  118A   	fcall	_LCD_setCursor
  2050     025C                     l2290:
  2051                           
  2052                           ;env_esclavo.c: 226:             LCD_print(displayString);
  2053     025C  304B               	movlw	(low (_displayString| 0))& (0+255)
  2054     025D  1283               	bcf	3,5	;RP0=0, select bank0
  2055     025E  1303               	bcf	3,6	;RP1=0, select bank0
  2056     025F  00C1               	movwf	LCD_print@string
  2057     0260  3000               	movlw	0
  2058     0261  00C2               	movwf	LCD_print@string+1
  2059     0262  118A  271C  118A   	fcall	_LCD_print
  2060     0265                     l2292:
  2061                           
  2062                           ;env_esclavo.c: 227:             LCD_setCursor(1, cursorPosition);
  2063     0265  1283               	bcf	3,5	;RP0=0, select bank0
  2064     0266  1303               	bcf	3,6	;RP1=0, select bank0
  2065     0267  0848               	movf	_cursorPosition,w
  2066     0268  00C1               	movwf	LCD_setCursor@column
  2067     0269  3001               	movlw	1
  2068     026A  118A  2760  118A   	fcall	_LCD_setCursor
  2069     026D                     l149:
  2070     026D  0008               	return
  2071     026E                     __end_of_Handle_Keypress:
  2072                           
  2073                           	psect	text4
  2074     06F6                     __ptext4:	
  2075 ;; *************** function _memset *****************
  2076 ;; Defined at:
  2077 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  dest            1    wreg     PTR void 
  2080 ;;		 -> displayString(16), 
  2081 ;;  c               2   30[BANK0 ] int 
  2082 ;;  n               2   32[BANK0 ] unsigned int 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  dest            1    0[BANK1 ] PTR void 
  2085 ;;		 -> displayString(16), 
  2086 ;;  p               1    1[BANK1 ] PTR unsigned char 
  2087 ;;		 -> displayString(16), 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      PTR void 
  2090 ;; Registers used:
  2091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1
  2097 ;;      Params:         0       4       0
  2098 ;;      Locals:         0       0       2
  2099 ;;      Temps:          0       0       0
  2100 ;;      Totals:         0       4       2
  2101 ;;Total ram usage:        6 bytes
  2102 ;; Hardware stack levels used: 1
  2103 ;; Hardware stack levels required when called: 3
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_Handle_Keypress
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111     06F6                     _memset:	
  2112                           ;psect for function _memset
  2113                           
  2114                           
  2115                           ;incstack = 0
  2116                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0+btemp+1]
  2117                           ;memset@dest stored from wreg
  2118     06F6  1683               	bsf	3,5	;RP0=1, select bank1
  2119     06F7  1303               	bcf	3,6	;RP1=0, select bank1
  2120     06F8  00A0               	movwf	memset@dest^(0+128)
  2121     06F9                     l2090:
  2122     06F9  0820               	movf	memset@dest^(0+128),w
  2123     06FA  00A1               	movwf	memset@p^(0+128)
  2124     06FB  2F0B               	goto	l2096
  2125     06FC                     l2092:
  2126     06FC  1683               	bsf	3,5	;RP0=1, select bank1
  2127     06FD  1303               	bcf	3,6	;RP1=0, select bank1
  2128     06FE  0821               	movf	memset@p^(0+128),w
  2129     06FF  0084               	movwf	4
  2130     0700  1283               	bcf	3,5	;RP0=0, select bank0
  2131     0701  1303               	bcf	3,6	;RP1=0, select bank0
  2132     0702  083E               	movf	memset@c,w
  2133     0703  1383               	bcf	3,7	;select IRP bank0
  2134     0704  0080               	movwf	0
  2135     0705                     l2094:
  2136     0705  3001               	movlw	1
  2137     0706  00FF               	movwf	btemp+1
  2138     0707  087F               	movf	btemp+1,w
  2139     0708  1683               	bsf	3,5	;RP0=1, select bank1
  2140     0709  1303               	bcf	3,6	;RP1=0, select bank1
  2141     070A  07A1               	addwf	memset@p^(0+128),f
  2142     070B                     l2096:
  2143     070B  3001               	movlw	1
  2144     070C  1283               	bcf	3,5	;RP0=0, select bank0
  2145     070D  1303               	bcf	3,6	;RP1=0, select bank0
  2146     070E  02C0               	subwf	memset@n,f
  2147     070F  3000               	movlw	0
  2148     0710  1C03               	skipc
  2149     0711  03C1               	decf	memset@n+1,f
  2150     0712  02C1               	subwf	memset@n+1,f
  2151     0713  0A40               	incf	memset@n,w
  2152     0714  1D03               	skipz
  2153     0715  2F1A               	goto	u1831
  2154     0716  0A41               	incf	memset@n+1,w
  2155     0717  1D03               	btfss	3,2
  2156     0718  2F1A               	goto	u1831
  2157     0719  2F1B               	goto	u1830
  2158     071A                     u1831:
  2159     071A  2EFC               	goto	l2092
  2160     071B                     u1830:
  2161     071B                     l808:
  2162     071B  0008               	return
  2163     071C                     __end_of_memset:
  2164                           
  2165                           	psect	text5
  2166     03D4                     __ptext5:	
  2167 ;; *************** function _atoi *****************
  2168 ;; Defined at:
  2169 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\atoi.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  s               1    wreg     PTR const unsigned char 
  2172 ;;		 -> asciiValue(4), 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  s               1    9[BANK1 ] PTR const unsigned char 
  2175 ;;		 -> asciiValue(4), 
  2176 ;;  n               2    7[BANK1 ] int 
  2177 ;;  neg             1    6[BANK1 ] _Bool 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  2    2[BANK1 ] int 
  2180 ;; Registers used:
  2181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1
  2187 ;;      Params:         0       0       2
  2188 ;;      Locals:         0       0       4
  2189 ;;      Temps:          0       0       2
  2190 ;;      Totals:         0       0       8
  2191 ;;Total ram usage:        8 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; Hardware stack levels required when called: 4
  2194 ;; This function calls:
  2195 ;;		___wmul
  2196 ;; This function is called by:
  2197 ;;		_Handle_Keypress
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201     03D4                     _atoi:	
  2202                           ;psect for function _atoi
  2203                           
  2204                           
  2205                           ;incstack = 0
  2206                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2207                           ;atoi@s stored from wreg
  2208     03D4  1683               	bsf	3,5	;RP0=1, select bank1
  2209     03D5  1303               	bcf	3,6	;RP1=0, select bank1
  2210     03D6  00A9               	movwf	atoi@s^(0+128)
  2211     03D7                     l2038:
  2212     03D7  01A7               	clrf	atoi@n^(0+128)
  2213     03D8  01A8               	clrf	(atoi@n+1)^(0+128)
  2214     03D9  01A6               	clrf	atoi@neg^(0+128)
  2215     03DA  2BDF               	goto	l2042
  2216     03DB                     l2040:
  2217     03DB  3001               	movlw	1
  2218     03DC  00FF               	movwf	btemp+1
  2219     03DD  087F               	movf	btemp+1,w
  2220     03DE  07A9               	addwf	atoi@s^(0+128),f
  2221     03DF                     l2042:
  2222     03DF  0829               	movf	atoi@s^(0+128),w
  2223     03E0  0084               	movwf	4
  2224     03E1  3020               	movlw	32
  2225     03E2  1383               	bcf	3,7	;select IRP bank0
  2226     03E3  0600               	xorwf	0,w
  2227     03E4  1903               	btfsc	3,2
  2228     03E5  2BE7               	goto	u1761
  2229     03E6  2BE8               	goto	u1760
  2230     03E7                     u1761:
  2231     03E7  2BDB               	goto	l2040
  2232     03E8                     u1760:
  2233     03E8                     l2044:
  2234     03E8  0829               	movf	atoi@s^(0+128),w
  2235     03E9  0084               	movwf	4
  2236     03EA  30F7               	movlw	247
  2237     03EB  0700               	addwf	0,w
  2238     03EC  00A4               	movwf	??_atoi^(0+128)
  2239     03ED  3005               	movlw	5
  2240     03EE  0224               	subwf	??_atoi^(0+128),w
  2241     03EF  1C03               	skipc
  2242     03F0  2BF2               	goto	u1771
  2243     03F1  2BF3               	goto	u1770
  2244     03F2                     u1771:
  2245     03F2  2BDB               	goto	l2040
  2246     03F3                     u1770:
  2247     03F3                     l2046:
  2248     03F3  0829               	movf	atoi@s^(0+128),w
  2249     03F4  0084               	movwf	4
  2250     03F5  302D               	movlw	45
  2251     03F6  0600               	xorwf	0,w
  2252     03F7  1D03               	btfss	3,2
  2253     03F8  2BFA               	goto	u1781
  2254     03F9  2BFB               	goto	u1780
  2255     03FA                     u1781:
  2256     03FA  2C02               	goto	l2052
  2257     03FB                     u1780:
  2258     03FB                     l2048:
  2259     03FB  01A6               	clrf	atoi@neg^(0+128)
  2260     03FC  0AA6               	incf	atoi@neg^(0+128),f
  2261     03FD                     l2050:
  2262     03FD  3001               	movlw	1
  2263     03FE  00FF               	movwf	btemp+1
  2264     03FF  087F               	movf	btemp+1,w
  2265     0400  07A9               	addwf	atoi@s^(0+128),f
  2266     0401  2C37               	goto	l2060
  2267     0402                     l2052:
  2268     0402  0829               	movf	atoi@s^(0+128),w
  2269     0403  0084               	movwf	4
  2270     0404  302B               	movlw	43
  2271     0405  0600               	xorwf	0,w
  2272     0406  1D03               	btfss	3,2
  2273     0407  2C09               	goto	u1791
  2274     0408  2C0A               	goto	u1790
  2275     0409                     u1791:
  2276     0409  2C37               	goto	l2060
  2277     040A                     u1790:
  2278     040A  2BFD               	goto	l2050
  2279     040B                     l2056:
  2280     040B  0829               	movf	atoi@s^(0+128),w
  2281     040C  0084               	movwf	4
  2282     040D  0828               	movf	(atoi@n+1)^(0+128),w
  2283     040E  1283               	bcf	3,5	;RP0=0, select bank0
  2284     040F  1303               	bcf	3,6	;RP1=0, select bank0
  2285     0410  00BF               	movwf	___wmul@multiplier+1
  2286     0411  1683               	bsf	3,5	;RP0=1, select bank1
  2287     0412  1303               	bcf	3,6	;RP1=0, select bank1
  2288     0413  0827               	movf	atoi@n^(0+128),w
  2289     0414  1283               	bcf	3,5	;RP0=0, select bank0
  2290     0415  1303               	bcf	3,6	;RP1=0, select bank0
  2291     0416  00BE               	movwf	___wmul@multiplier
  2292     0417  300A               	movlw	10
  2293     0418  00C0               	movwf	___wmul@multiplicand
  2294     0419  3000               	movlw	0
  2295     041A  00C1               	movwf	___wmul@multiplicand+1
  2296     041B  118A  2656  118A   	fcall	___wmul
  2297     041E  1283               	bcf	3,5	;RP0=0, select bank0
  2298     041F  1303               	bcf	3,6	;RP1=0, select bank0
  2299     0420  083F               	movf	?___wmul+1,w
  2300     0421  1683               	bsf	3,5	;RP0=1, select bank1
  2301     0422  1303               	bcf	3,6	;RP1=0, select bank1
  2302     0423  00A5               	movwf	(??_atoi^(0+128)+1)
  2303     0424  1383               	bcf	3,7	;select IRP bank0
  2304     0425  0800               	movf	0,w
  2305     0426  1283               	bcf	3,5	;RP0=0, select bank0
  2306     0427  1303               	bcf	3,6	;RP1=0, select bank0
  2307     0428  023E               	subwf	?___wmul,w
  2308     0429  1683               	bsf	3,5	;RP0=1, select bank1
  2309     042A  1303               	bcf	3,6	;RP1=0, select bank1
  2310     042B  00A4               	movwf	??_atoi^(0+128)
  2311     042C  1C03               	skipc
  2312     042D  03A5               	decf	(??_atoi^(0+128)+1),f
  2313     042E  0824               	movf	??_atoi^(0+128),w
  2314     042F  3E30               	addlw	48
  2315     0430  00A7               	movwf	atoi@n^(0+128)
  2316     0431  0825               	movf	(??_atoi+1)^(0+128),w
  2317     0432  1803               	skipnc
  2318     0433  3E01               	addlw	1
  2319     0434  3E00               	addlw	0
  2320     0435  00A8               	movwf	(atoi@n+1)^(0+128)
  2321     0436  2BFD               	goto	l2050
  2322     0437                     l2060:
  2323     0437  0829               	movf	atoi@s^(0+128),w
  2324     0438  0084               	movwf	4
  2325     0439  30D0               	movlw	208
  2326     043A  0700               	addwf	0,w
  2327     043B  00A4               	movwf	??_atoi^(0+128)
  2328     043C  300A               	movlw	10
  2329     043D  0224               	subwf	??_atoi^(0+128),w
  2330     043E  1C03               	skipc
  2331     043F  2C41               	goto	u1801
  2332     0440  2C42               	goto	u1800
  2333     0441                     u1801:
  2334     0441  2C0B               	goto	l2056
  2335     0442                     u1800:
  2336     0442                     l2062:
  2337     0442  0826               	movf	atoi@neg^(0+128),w
  2338     0443  1D03               	btfss	3,2
  2339     0444  2C46               	goto	u1811
  2340     0445  2C47               	goto	u1810
  2341     0446                     u1811:
  2342     0446  2C53               	goto	l2066
  2343     0447                     u1810:
  2344     0447                     l2064:
  2345     0447  0927               	comf	atoi@n^(0+128),w
  2346     0448  00A4               	movwf	??_atoi^(0+128)
  2347     0449  0928               	comf	(atoi@n+1)^(0+128),w
  2348     044A  00A5               	movwf	(??_atoi^(0+128)+1)
  2349     044B  0AA4               	incf	??_atoi^(0+128),f
  2350     044C  1903               	skipnz
  2351     044D  0AA5               	incf	(??_atoi^(0+128)+1),f
  2352     044E  0824               	movf	??_atoi^(0+128),w
  2353     044F  00A2               	movwf	?_atoi^(0+128)
  2354     0450  0825               	movf	(??_atoi+1)^(0+128),w
  2355     0451  00A3               	movwf	(?_atoi+1)^(0+128)
  2356     0452  2C57               	goto	l802
  2357     0453                     l2066:
  2358     0453  0828               	movf	(atoi@n+1)^(0+128),w
  2359     0454  00A3               	movwf	(?_atoi+1)^(0+128)
  2360     0455  0827               	movf	atoi@n^(0+128),w
  2361     0456  00A2               	movwf	?_atoi^(0+128)
  2362     0457                     l802:
  2363     0457  0008               	return
  2364     0458                     __end_of_atoi:
  2365                           
  2366                           	psect	text6
  2367     0656                     __ptext6:	
  2368 ;; *************** function ___wmul *****************
  2369 ;; Defined at:
  2370 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  multiplier      2   30[BANK0 ] unsigned int 
  2373 ;;  multiplicand    2   32[BANK0 ] unsigned int 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  product         2    0[BANK1 ] unsigned int 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  2   30[BANK0 ] unsigned int 
  2378 ;; Registers used:
  2379 ;;		wreg, status,2, status,0
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMMON   BANK0   BANK1
  2385 ;;      Params:         0       4       0
  2386 ;;      Locals:         0       0       2
  2387 ;;      Temps:          0       0       0
  2388 ;;      Totals:         0       4       2
  2389 ;;Total ram usage:        6 bytes
  2390 ;; Hardware stack levels used: 1
  2391 ;; Hardware stack levels required when called: 3
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_atoi
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399     0656                     ___wmul:	
  2400                           ;psect for function ___wmul
  2401                           
  2402     0656                     l1984:	
  2403                           ;incstack = 0
  2404                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2405                           
  2406     0656  1683               	bsf	3,5	;RP0=1, select bank1
  2407     0657  1303               	bcf	3,6	;RP1=0, select bank1
  2408     0658  01A0               	clrf	___wmul@product^(0+128)
  2409     0659  01A1               	clrf	(___wmul@product+1)^(0+128)
  2410     065A                     l1986:
  2411     065A  1283               	bcf	3,5	;RP0=0, select bank0
  2412     065B  1C3E               	btfss	___wmul@multiplier,0
  2413     065C  2E5E               	goto	u1701
  2414     065D  2E5F               	goto	u1700
  2415     065E                     u1701:
  2416     065E  2E6B               	goto	l330
  2417     065F                     u1700:
  2418     065F                     l1988:
  2419     065F  0840               	movf	___wmul@multiplicand,w
  2420     0660  1683               	bsf	3,5	;RP0=1, select bank1
  2421     0661  1303               	bcf	3,6	;RP1=0, select bank1
  2422     0662  07A0               	addwf	___wmul@product^(0+128),f
  2423     0663  1803               	skipnc
  2424     0664  0AA1               	incf	(___wmul@product+1)^(0+128),f
  2425     0665  1283               	bcf	3,5	;RP0=0, select bank0
  2426     0666  1303               	bcf	3,6	;RP1=0, select bank0
  2427     0667  0841               	movf	___wmul@multiplicand+1,w
  2428     0668  1683               	bsf	3,5	;RP0=1, select bank1
  2429     0669  1303               	bcf	3,6	;RP1=0, select bank1
  2430     066A  07A1               	addwf	(___wmul@product+1)^(0+128),f
  2431     066B                     l330:
  2432     066B  3001               	movlw	1
  2433     066C  1283               	bcf	3,5	;RP0=0, select bank0
  2434     066D                     u1715:
  2435     066D  1003               	clrc
  2436     066E  0DC0               	rlf	___wmul@multiplicand,f
  2437     066F  0DC1               	rlf	___wmul@multiplicand+1,f
  2438     0670  3EFF               	addlw	-1
  2439     0671  1D03               	skipz
  2440     0672  2E6D               	goto	u1715
  2441     0673                     l1990:
  2442     0673  3001               	movlw	1
  2443     0674                     u1725:
  2444     0674  1003               	clrc
  2445     0675  0CBF               	rrf	___wmul@multiplier+1,f
  2446     0676  0CBE               	rrf	___wmul@multiplier,f
  2447     0677  3EFF               	addlw	-1
  2448     0678  1D03               	skipz
  2449     0679  2E74               	goto	u1725
  2450     067A                     l1992:
  2451     067A  083E               	movf	___wmul@multiplier,w
  2452     067B  043F               	iorwf	___wmul@multiplier+1,w
  2453     067C  1D03               	btfss	3,2
  2454     067D  2E7F               	goto	u1731
  2455     067E  2E80               	goto	u1730
  2456     067F                     u1731:
  2457     067F  2E5A               	goto	l1986
  2458     0680                     u1730:
  2459     0680                     l1994:
  2460     0680  1683               	bsf	3,5	;RP0=1, select bank1
  2461     0681  1303               	bcf	3,6	;RP1=0, select bank1
  2462     0682  0821               	movf	(___wmul@product+1)^(0+128),w
  2463     0683  1283               	bcf	3,5	;RP0=0, select bank0
  2464     0684  1303               	bcf	3,6	;RP1=0, select bank0
  2465     0685  00BF               	movwf	?___wmul+1
  2466     0686  1683               	bsf	3,5	;RP0=1, select bank1
  2467     0687  1303               	bcf	3,6	;RP1=0, select bank1
  2468     0688  0820               	movf	___wmul@product^(0+128),w
  2469     0689  1283               	bcf	3,5	;RP0=0, select bank0
  2470     068A  1303               	bcf	3,6	;RP1=0, select bank0
  2471     068B  00BE               	movwf	?___wmul
  2472     068C                     l332:
  2473     068C  0008               	return
  2474     068D                     __end_of___wmul:
  2475                           
  2476                           	psect	text7
  2477     05D8                     __ptext7:	
  2478 ;; *************** function _Send_Message_To_Master *****************
  2479 ;; Defined at:
  2480 ;;		line 405 in file "env_esclavo.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  message         1    wreg     PTR unsigned char 
  2483 ;;		 -> displayString(16), 
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  message         1   17[BANK1 ] PTR unsigned char 
  2486 ;;		 -> displayString(16), 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1
  2496 ;;      Params:         0       0       0
  2497 ;;      Locals:         0       0       1
  2498 ;;      Temps:          0       0       0
  2499 ;;      Totals:         0       0       1
  2500 ;;Total ram usage:        1 bytes
  2501 ;; Hardware stack levels used: 1
  2502 ;; Hardware stack levels required when called: 5
  2503 ;; This function calls:
  2504 ;;		_I2C_Master_Init
  2505 ;;		_I2C_Master_Start
  2506 ;;		_I2C_Master_Stop
  2507 ;;		_I2C_Master_Write
  2508 ;;		_I2C_Slave_Init
  2509 ;; This function is called by:
  2510 ;;		_Handle_Keypress
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514     05D8                     _Send_Message_To_Master:	
  2515                           ;psect for function _Send_Message_To_Master
  2516                           
  2517                           
  2518                           ;incstack = 0
  2519                           ; Regs used in _Send_Message_To_Master: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2520                           ;Send_Message_To_Master@message stored from wreg
  2521     05D8  1683               	bsf	3,5	;RP0=1, select bank1
  2522     05D9  1303               	bcf	3,6	;RP1=0, select bank1
  2523     05DA  00B1               	movwf	Send_Message_To_Master@message^(0+128)
  2524     05DB                     l2070:
  2525                           
  2526                           ;env_esclavo.c: 407:     i2c_role = 0;
  2527     05DB  1283               	bcf	3,5	;RP0=0, select bank0
  2528     05DC  1303               	bcf	3,6	;RP1=0, select bank0
  2529     05DD  01DF               	clrf	_i2c_role	;volatile
  2530     05DE                     l2072:
  2531                           
  2532                           ;env_esclavo.c: 408:     I2C_Master_Init(100000);
  2533     05DE  3000               	movlw	0
  2534     05DF  00C2               	movwf	I2C_Master_Init@c+3
  2535     05E0  3001               	movlw	1
  2536     05E1  00C1               	movwf	I2C_Master_Init@c+2
  2537     05E2  3086               	movlw	134
  2538     05E3  00C0               	movwf	I2C_Master_Init@c+1
  2539     05E4  30A0               	movlw	160
  2540     05E5  00BF               	movwf	I2C_Master_Init@c
  2541     05E6  118A  2617  118A   	fcall	_I2C_Master_Init
  2542     05E9                     l2074:
  2543                           
  2544                           ;env_esclavo.c: 410:     I2C_Master_Start();
  2545     05E9  158A  279D  118A   	fcall	_I2C_Master_Start
  2546     05EC                     l2076:
  2547                           
  2548                           ;env_esclavo.c: 411:     I2C_Master_Write(0x20);
  2549     05EC  3020               	movlw	32
  2550     05ED  158A  27B4  118A   	fcall	_I2C_Master_Write
  2551                           
  2552                           ;env_esclavo.c: 412:     while (*message) {
  2553     05F0  2DFD               	goto	l2082
  2554     05F1                     l2078:
  2555                           
  2556                           ;env_esclavo.c: 413:         I2C_Master_Write(*message++);
  2557     05F1  0831               	movf	Send_Message_To_Master@message^(0+128),w
  2558     05F2  0084               	movwf	4
  2559     05F3  0800               	movf	0,w
  2560     05F4  158A  27B4  118A   	fcall	_I2C_Master_Write
  2561     05F7                     l2080:
  2562     05F7  3001               	movlw	1
  2563     05F8  00FF               	movwf	btemp+1
  2564     05F9  087F               	movf	btemp+1,w
  2565     05FA  1683               	bsf	3,5	;RP0=1, select bank1
  2566     05FB  1303               	bcf	3,6	;RP1=0, select bank1
  2567     05FC  07B1               	addwf	Send_Message_To_Master@message^(0+128),f
  2568     05FD                     l2082:
  2569                           
  2570                           ;env_esclavo.c: 412:     while (*message) {
  2571     05FD  1683               	bsf	3,5	;RP0=1, select bank1
  2572     05FE  1303               	bcf	3,6	;RP1=0, select bank1
  2573     05FF  0831               	movf	Send_Message_To_Master@message^(0+128),w
  2574     0600  0084               	movwf	4
  2575     0601  1383               	bcf	3,7	;select IRP bank0
  2576     0602  0800               	movf	0,w
  2577     0603  1D03               	btfss	3,2
  2578     0604  2E06               	goto	u1821
  2579     0605  2E07               	goto	u1820
  2580     0606                     u1821:
  2581     0606  2DF1               	goto	l2078
  2582     0607                     u1820:
  2583     0607                     l2084:
  2584                           
  2585                           ;env_esclavo.c: 415:     I2C_Master_Write('\0');
  2586     0607  3000               	movlw	0
  2587     0608  158A  27B4  118A   	fcall	_I2C_Master_Write
  2588                           
  2589                           ;env_esclavo.c: 416:     I2C_Master_Stop();
  2590     060B  158A  27A4  118A   	fcall	_I2C_Master_Stop
  2591     060E                     l2086:
  2592                           
  2593                           ;env_esclavo.c: 419:     i2c_role = 1;
  2594     060E  3001               	movlw	1
  2595     060F  1283               	bcf	3,5	;RP0=0, select bank0
  2596     0610  1303               	bcf	3,6	;RP1=0, select bank0
  2597     0611  00DF               	movwf	_i2c_role	;volatile
  2598     0612                     l2088:
  2599                           
  2600                           ;env_esclavo.c: 420:     I2C_Slave_Init(0x10);
  2601     0612  3010               	movlw	16
  2602     0613  158A  27EC  118A   	fcall	_I2C_Slave_Init
  2603     0616                     l226:
  2604     0616  0008               	return
  2605     0617                     __end_of_Send_Message_To_Master:
  2606                           
  2607                           	psect	text8
  2608     0FEC                     __ptext8:	
  2609 ;; *************** function _I2C_Slave_Init *****************
  2610 ;; Defined at:
  2611 ;;		line 234 in file "env_esclavo.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  address         1    wreg     unsigned char 
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;  address         1   30[BANK0 ] unsigned char 
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  1    wreg      void 
  2618 ;; Registers used:
  2619 ;;		wreg, status,2
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMMON   BANK0   BANK1
  2625 ;;      Params:         0       0       0
  2626 ;;      Locals:         0       1       0
  2627 ;;      Temps:          0       0       0
  2628 ;;      Totals:         0       1       0
  2629 ;;Total ram usage:        1 bytes
  2630 ;; Hardware stack levels used: 1
  2631 ;; Hardware stack levels required when called: 3
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_main
  2636 ;;		_Send_Message_To_Master
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640     0FEC                     _I2C_Slave_Init:	
  2641                           ;psect for function _I2C_Slave_Init
  2642                           
  2643                           
  2644                           ;incstack = 0
  2645                           ; Regs used in _I2C_Slave_Init: [wreg+status,2]
  2646                           ;I2C_Slave_Init@address stored from wreg
  2647     0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  2648     0FED  1303               	bcf	3,6	;RP1=0, select bank0
  2649     0FEE  00BE               	movwf	I2C_Slave_Init@address
  2650     0FEF                     l1932:
  2651                           
  2652                           ;env_esclavo.c: 235:     SSPADD = address;
  2653     0FEF  083E               	movf	I2C_Slave_Init@address,w
  2654     0FF0  1683               	bsf	3,5	;RP0=1, select bank1
  2655     0FF1  1303               	bcf	3,6	;RP1=0, select bank1
  2656     0FF2  0093               	movwf	19	;volatile
  2657                           
  2658                           ;env_esclavo.c: 236:     SSPCON = 0x36;
  2659     0FF3  3036               	movlw	54
  2660     0FF4  1283               	bcf	3,5	;RP0=0, select bank0
  2661     0FF5  1303               	bcf	3,6	;RP1=0, select bank0
  2662     0FF6  0094               	movwf	20	;volatile
  2663     0FF7                     l1934:
  2664                           
  2665                           ;env_esclavo.c: 237:     SSPSTAT = 0x00;
  2666     0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  2667     0FF8  1303               	bcf	3,6	;RP1=0, select bank1
  2668     0FF9  0194               	clrf	20	;volatile
  2669     0FFA                     l1936:
  2670                           
  2671                           ;env_esclavo.c: 238:     TRISC3 = 1;
  2672     0FFA  1587               	bsf	7,3	;volatile
  2673     0FFB                     l1938:
  2674                           
  2675                           ;env_esclavo.c: 239:     TRISC4 = 1;
  2676     0FFB  1607               	bsf	7,4	;volatile
  2677     0FFC                     l1940:
  2678                           
  2679                           ;env_esclavo.c: 240:     PEIE = 1;
  2680     0FFC  170B               	bsf	11,6	;volatile
  2681     0FFD                     l1942:
  2682                           
  2683                           ;env_esclavo.c: 241:     SSPIE = 1;
  2684     0FFD  158C               	bsf	12,3	;volatile
  2685     0FFE                     l1944:
  2686                           
  2687                           ;env_esclavo.c: 242:     GIE = 1;
  2688     0FFE  178B               	bsf	11,7	;volatile
  2689     0FFF                     l152:
  2690     0FFF  0008               	return
  2691     1000                     __end_of_I2C_Slave_Init:
  2692                           
  2693                           	psect	text9
  2694     0FB4                     __ptext9:	
  2695 ;; *************** function _I2C_Master_Write *****************
  2696 ;; Defined at:
  2697 ;;		line 444 in file "env_esclavo.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  data            1    wreg     unsigned char 
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;  data            1   30[BANK0 ] unsigned char 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0, pclath, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1
  2711 ;;      Params:         0       0       0
  2712 ;;      Locals:         0       1       0
  2713 ;;      Temps:          0       0       0
  2714 ;;      Totals:         0       1       0
  2715 ;;Total ram usage:        1 bytes
  2716 ;; Hardware stack levels used: 1
  2717 ;; Hardware stack levels required when called: 4
  2718 ;; This function calls:
  2719 ;;		_I2C_Master_Wait
  2720 ;; This function is called by:
  2721 ;;		_Send_Message_To_Master
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725     0FB4                     _I2C_Master_Write:	
  2726                           ;psect for function _I2C_Master_Write
  2727                           
  2728                           
  2729                           ;incstack = 0
  2730                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2731                           ;I2C_Master_Write@data stored from wreg
  2732     0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  2733     0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  2734     0FB6  00BE               	movwf	I2C_Master_Write@data
  2735     0FB7                     l1976:
  2736                           
  2737                           ;env_esclavo.c: 445:     I2C_Master_Wait();
  2738     0FB7  158A  27BF  158A   	fcall	_I2C_Master_Wait
  2739     0FBA                     l1978:
  2740                           
  2741                           ;env_esclavo.c: 446:     SSPBUF = data;
  2742     0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  2743     0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  2744     0FBC  083E               	movf	I2C_Master_Write@data,w
  2745     0FBD  0093               	movwf	19	;volatile
  2746     0FBE                     l238:
  2747     0FBE  0008               	return
  2748     0FBF                     __end_of_I2C_Master_Write:
  2749                           
  2750                           	psect	text10
  2751     0FA4                     __ptext10:	
  2752 ;; *************** function _I2C_Master_Stop *****************
  2753 ;; Defined at:
  2754 ;;		line 439 in file "env_esclavo.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;		None
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;		None
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      void 
  2761 ;; Registers used:
  2762 ;;		wreg, status,2, status,0, pclath, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMMON   BANK0   BANK1
  2768 ;;      Params:         0       0       0
  2769 ;;      Locals:         0       0       0
  2770 ;;      Temps:          0       0       0
  2771 ;;      Totals:         0       0       0
  2772 ;;Total ram usage:        0 bytes
  2773 ;; Hardware stack levels used: 1
  2774 ;; Hardware stack levels required when called: 4
  2775 ;; This function calls:
  2776 ;;		_I2C_Master_Wait
  2777 ;; This function is called by:
  2778 ;;		_Send_Message_To_Master
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782     0FA4                     _I2C_Master_Stop:	
  2783                           ;psect for function _I2C_Master_Stop
  2784                           
  2785     0FA4                     l1980:	
  2786                           ;incstack = 0
  2787                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2788                           
  2789                           
  2790                           ;env_esclavo.c: 440:     I2C_Master_Wait();
  2791     0FA4  158A  27BF  158A   	fcall	_I2C_Master_Wait
  2792     0FA7                     l1982:
  2793                           
  2794                           ;env_esclavo.c: 441:     PEN = 1;
  2795     0FA7  1683               	bsf	3,5	;RP0=1, select bank1
  2796     0FA8  1303               	bcf	3,6	;RP1=0, select bank1
  2797     0FA9  1511               	bsf	17,2	;volatile
  2798     0FAA                     l235:
  2799     0FAA  0008               	return
  2800     0FAB                     __end_of_I2C_Master_Stop:
  2801                           
  2802                           	psect	text11
  2803     0F9D                     __ptext11:	
  2804 ;; *************** function _I2C_Master_Start *****************
  2805 ;; Defined at:
  2806 ;;		line 434 in file "env_esclavo.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;		None
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;		None
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0, pclath, cstack
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMMON   BANK0   BANK1
  2820 ;;      Params:         0       0       0
  2821 ;;      Locals:         0       0       0
  2822 ;;      Temps:          0       0       0
  2823 ;;      Totals:         0       0       0
  2824 ;;Total ram usage:        0 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 4
  2827 ;; This function calls:
  2828 ;;		_I2C_Master_Wait
  2829 ;; This function is called by:
  2830 ;;		_Send_Message_To_Master
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834     0F9D                     _I2C_Master_Start:	
  2835                           ;psect for function _I2C_Master_Start
  2836                           
  2837     0F9D                     l1972:	
  2838                           ;incstack = 0
  2839                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2840                           
  2841                           
  2842                           ;env_esclavo.c: 435:     I2C_Master_Wait();
  2843     0F9D  158A  27BF  158A   	fcall	_I2C_Master_Wait
  2844     0FA0                     l1974:
  2845                           
  2846                           ;env_esclavo.c: 436:     SEN = 1;
  2847     0FA0  1683               	bsf	3,5	;RP0=1, select bank1
  2848     0FA1  1303               	bcf	3,6	;RP1=0, select bank1
  2849     0FA2  1411               	bsf	17,0	;volatile
  2850     0FA3                     l232:
  2851     0FA3  0008               	return
  2852     0FA4                     __end_of_I2C_Master_Start:
  2853                           
  2854                           	psect	text12
  2855     0FBF                     __ptext12:	
  2856 ;; *************** function _I2C_Master_Wait *****************
  2857 ;; Defined at:
  2858 ;;		line 449 in file "env_esclavo.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;		None
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMMON   BANK0   BANK1
  2872 ;;      Params:         0       0       0
  2873 ;;      Locals:         0       0       0
  2874 ;;      Temps:          0       0       0
  2875 ;;      Totals:         0       0       0
  2876 ;;Total ram usage:        0 bytes
  2877 ;; Hardware stack levels used: 1
  2878 ;; Hardware stack levels required when called: 3
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_I2C_Master_Start
  2883 ;;		_I2C_Master_Stop
  2884 ;;		_I2C_Master_Write
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888     0FBF                     _I2C_Master_Wait:	
  2889                           ;psect for function _I2C_Master_Wait
  2890                           
  2891     0FBF                     l1900:	
  2892                           ;incstack = 0
  2893                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2894                           
  2895     0FBF                     l1902:	
  2896                           ;env_esclavo.c: 450:     while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  2897                           
  2898     0FBF  1683               	bsf	3,5	;RP0=1, select bank1
  2899     0FC0  1303               	bcf	3,6	;RP1=0, select bank1
  2900     0FC1  0811               	movf	17,w	;volatile
  2901     0FC2  391F               	andlw	31
  2902     0FC3  1D03               	btfss	3,2
  2903     0FC4  2FC6               	goto	u1601
  2904     0FC5  2FC7               	goto	u1600
  2905     0FC6                     u1601:
  2906     0FC6  2FBF               	goto	l1902
  2907     0FC7                     u1600:
  2908     0FC7                     l1904:
  2909     0FC7  1914               	btfsc	20,2	;volatile
  2910     0FC8  2FCA               	goto	u1611
  2911     0FC9  2FCB               	goto	u1610
  2912     0FCA                     u1611:
  2913     0FCA  2FBF               	goto	l1902
  2914     0FCB                     u1610:
  2915     0FCB                     l244:
  2916     0FCB  0008               	return
  2917     0FCC                     __end_of_I2C_Master_Wait:
  2918                           
  2919                           	psect	text13
  2920     0617                     __ptext13:	
  2921 ;; *************** function _I2C_Master_Init *****************
  2922 ;; Defined at:
  2923 ;;		line 424 in file "env_esclavo.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  c               4   31[BANK0 ] const unsigned long 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;		None
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1
  2937 ;;      Params:         0       4       0
  2938 ;;      Locals:         0       0       0
  2939 ;;      Temps:          0       0       4
  2940 ;;      Totals:         0       4       4
  2941 ;;Total ram usage:        8 bytes
  2942 ;; Hardware stack levels used: 1
  2943 ;; Hardware stack levels required when called: 4
  2944 ;; This function calls:
  2945 ;;		___lldiv
  2946 ;; This function is called by:
  2947 ;;		_Send_Message_To_Master
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951     0617                     _I2C_Master_Init:	
  2952                           ;psect for function _I2C_Master_Init
  2953                           
  2954     0617                     l1946:	
  2955                           ;incstack = 0
  2956                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2957                           
  2958                           
  2959                           ;env_esclavo.c: 425:     SSPCON = 0b00101000;
  2960     0617  3028               	movlw	40
  2961     0618  1283               	bcf	3,5	;RP0=0, select bank0
  2962     0619  1303               	bcf	3,6	;RP1=0, select bank0
  2963     061A  0094               	movwf	20	;volatile
  2964     061B                     l1948:
  2965                           
  2966                           ;env_esclavo.c: 426:    SSPADD = (unsigned char)((4000000 / (4 * c)) - 1);
  2967     061B  083F               	movf	I2C_Master_Init@c,w
  2968     061C  1683               	bsf	3,5	;RP0=1, select bank1
  2969     061D  1303               	bcf	3,6	;RP1=0, select bank1
  2970     061E  00AD               	movwf	??_I2C_Master_Init^(0+128)
  2971     061F  1283               	bcf	3,5	;RP0=0, select bank0
  2972     0620  1303               	bcf	3,6	;RP1=0, select bank0
  2973     0621  0840               	movf	I2C_Master_Init@c+1,w
  2974     0622  1683               	bsf	3,5	;RP0=1, select bank1
  2975     0623  1303               	bcf	3,6	;RP1=0, select bank1
  2976     0624  00AE               	movwf	(??_I2C_Master_Init^(0+128)+1)
  2977     0625  1283               	bcf	3,5	;RP0=0, select bank0
  2978     0626  1303               	bcf	3,6	;RP1=0, select bank0
  2979     0627  0841               	movf	I2C_Master_Init@c+2,w
  2980     0628  1683               	bsf	3,5	;RP0=1, select bank1
  2981     0629  1303               	bcf	3,6	;RP1=0, select bank1
  2982     062A  00AF               	movwf	(??_I2C_Master_Init^(0+128)+2)
  2983     062B  1283               	bcf	3,5	;RP0=0, select bank0
  2984     062C  1303               	bcf	3,6	;RP1=0, select bank0
  2985     062D  0842               	movf	I2C_Master_Init@c+3,w
  2986     062E  1683               	bsf	3,5	;RP0=1, select bank1
  2987     062F  1303               	bcf	3,6	;RP1=0, select bank1
  2988     0630  00B0               	movwf	(??_I2C_Master_Init^(0+128)+3)
  2989     0631  3002               	movlw	2
  2990     0632                     u1695:
  2991     0632  1003               	clrc
  2992     0633  0DAD               	rlf	??_I2C_Master_Init^(0+128),f
  2993     0634  0DAE               	rlf	(??_I2C_Master_Init^(0+128)+1),f
  2994     0635  0DAF               	rlf	(??_I2C_Master_Init^(0+128)+2),f
  2995     0636  0DB0               	rlf	(??_I2C_Master_Init^(0+128)+3),f
  2996     0637                     u1690:
  2997     0637  3EFF               	addlw	-1
  2998     0638  1D03               	skipz
  2999     0639  2E32               	goto	u1695
  3000     063A  0830               	movf	(??_I2C_Master_Init+3)^(0+128),w
  3001     063B  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  3002     063C  082F               	movf	(??_I2C_Master_Init+2)^(0+128),w
  3003     063D  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  3004     063E  082E               	movf	(??_I2C_Master_Init+1)^(0+128),w
  3005     063F  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  3006     0640  082D               	movf	??_I2C_Master_Init^(0+128),w
  3007     0641  00A0               	movwf	___lldiv@divisor^(0+128)
  3008     0642  3000               	movlw	0
  3009     0643  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  3010     0644  303D               	movlw	61
  3011     0645  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  3012     0646  3009               	movlw	9
  3013     0647  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  3014     0648  3000               	movlw	0
  3015     0649  00A4               	movwf	___lldiv@dividend^(0+128)
  3016     064A  118A  2458  118A   	fcall	___lldiv
  3017     064D  1683               	bsf	3,5	;RP0=1, select bank1
  3018     064E  1303               	bcf	3,6	;RP1=0, select bank1
  3019     064F  0820               	movf	?___lldiv^(0+128),w
  3020     0650  3EFF               	addlw	255
  3021     0651  0093               	movwf	19	;volatile
  3022     0652                     l1950:
  3023                           
  3024                           ;env_esclavo.c: 428:     SSPSTAT = 0x00;
  3025     0652  0194               	clrf	20	;volatile
  3026     0653                     l1952:
  3027                           
  3028                           ;env_esclavo.c: 429:     TRISC3 = 1;
  3029     0653  1587               	bsf	7,3	;volatile
  3030     0654                     l1954:
  3031                           
  3032                           ;env_esclavo.c: 430:     TRISC4 = 1;
  3033     0654  1607               	bsf	7,4	;volatile
  3034     0655                     l229:
  3035     0655  0008               	return
  3036     0656                     __end_of_I2C_Master_Init:
  3037                           
  3038                           	psect	text14
  3039     0458                     __ptext14:	
  3040 ;; *************** function ___lldiv *****************
  3041 ;; Defined at:
  3042 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  divisor         4    0[BANK1 ] unsigned long 
  3045 ;;  dividend        4    4[BANK1 ] unsigned long 
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  quotient        4    8[BANK1 ] unsigned long 
  3048 ;;  counter         1   12[BANK1 ] unsigned char 
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  4    0[BANK1 ] unsigned long 
  3051 ;; Registers used:
  3052 ;;		wreg, status,2, status,0, btemp+1
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMMON   BANK0   BANK1
  3058 ;;      Params:         0       0       8
  3059 ;;      Locals:         0       0       5
  3060 ;;      Temps:          0       1       0
  3061 ;;      Totals:         0       1      13
  3062 ;;Total ram usage:       14 bytes
  3063 ;; Hardware stack levels used: 1
  3064 ;; Hardware stack levels required when called: 3
  3065 ;; This function calls:
  3066 ;;		Nothing
  3067 ;; This function is called by:
  3068 ;;		_I2C_Master_Init
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072     0458                     ___lldiv:	
  3073                           ;psect for function ___lldiv
  3074                           
  3075     0458                     l1906:	
  3076                           ;incstack = 0
  3077                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  3078                           
  3079     0458  3000               	movlw	0
  3080     0459  1683               	bsf	3,5	;RP0=1, select bank1
  3081     045A  1303               	bcf	3,6	;RP1=0, select bank1
  3082     045B  00AB               	movwf	(___lldiv@quotient+3)^(0+128)
  3083     045C  3000               	movlw	0
  3084     045D  00AA               	movwf	(___lldiv@quotient+2)^(0+128)
  3085     045E  3000               	movlw	0
  3086     045F  00A9               	movwf	(___lldiv@quotient+1)^(0+128)
  3087     0460  3000               	movlw	0
  3088     0461  00A8               	movwf	___lldiv@quotient^(0+128)
  3089     0462  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  3090     0463  0422               	iorwf	(___lldiv@divisor+2)^(0+128),w
  3091     0464  0421               	iorwf	(___lldiv@divisor+1)^(0+128),w
  3092     0465  0420               	iorwf	___lldiv@divisor^(0+128),w
  3093     0466  1903               	skipnz
  3094     0467  2C69               	goto	u1621
  3095     0468  2C6A               	goto	u1620
  3096     0469                     u1621:
  3097     0469  2CC7               	goto	l1928
  3098     046A                     u1620:
  3099     046A                     l1908:
  3100     046A  01AC               	clrf	___lldiv@counter^(0+128)
  3101     046B  0AAC               	incf	___lldiv@counter^(0+128),f
  3102     046C  2C82               	goto	l1914
  3103     046D                     l1910:
  3104     046D  3001               	movlw	1
  3105     046E  1283               	bcf	3,5	;RP0=0, select bank0
  3106     046F  1303               	bcf	3,6	;RP1=0, select bank0
  3107     0470  00BE               	movwf	??___lldiv
  3108     0471                     u1635:
  3109     0471  1003               	clrc
  3110     0472  1683               	bsf	3,5	;RP0=1, select bank1
  3111     0473  1303               	bcf	3,6	;RP1=0, select bank1
  3112     0474  0DA0               	rlf	___lldiv@divisor^(0+128),f
  3113     0475  0DA1               	rlf	(___lldiv@divisor+1)^(0+128),f
  3114     0476  0DA2               	rlf	(___lldiv@divisor+2)^(0+128),f
  3115     0477  0DA3               	rlf	(___lldiv@divisor+3)^(0+128),f
  3116     0478  1283               	bcf	3,5	;RP0=0, select bank0
  3117     0479  1303               	bcf	3,6	;RP1=0, select bank0
  3118     047A  0BBE               	decfsz	??___lldiv,f
  3119     047B  2C71               	goto	u1635
  3120     047C                     l1912:
  3121     047C  3001               	movlw	1
  3122     047D  00FF               	movwf	btemp+1
  3123     047E  087F               	movf	btemp+1,w
  3124     047F  1683               	bsf	3,5	;RP0=1, select bank1
  3125     0480  1303               	bcf	3,6	;RP1=0, select bank1
  3126     0481  07AC               	addwf	___lldiv@counter^(0+128),f
  3127     0482                     l1914:
  3128     0482  1FA3               	btfss	(___lldiv@divisor+3)^(0+128),7
  3129     0483  2C85               	goto	u1641
  3130     0484  2C86               	goto	u1640
  3131     0485                     u1641:
  3132     0485  2C6D               	goto	l1910
  3133     0486                     u1640:
  3134     0486                     l1916:
  3135     0486  3001               	movlw	1
  3136     0487  1283               	bcf	3,5	;RP0=0, select bank0
  3137     0488  1303               	bcf	3,6	;RP1=0, select bank0
  3138     0489  00BE               	movwf	??___lldiv
  3139     048A                     u1655:
  3140     048A  1003               	clrc
  3141     048B  1683               	bsf	3,5	;RP0=1, select bank1
  3142     048C  1303               	bcf	3,6	;RP1=0, select bank1
  3143     048D  0DA8               	rlf	___lldiv@quotient^(0+128),f
  3144     048E  0DA9               	rlf	(___lldiv@quotient+1)^(0+128),f
  3145     048F  0DAA               	rlf	(___lldiv@quotient+2)^(0+128),f
  3146     0490  0DAB               	rlf	(___lldiv@quotient+3)^(0+128),f
  3147     0491  1283               	bcf	3,5	;RP0=0, select bank0
  3148     0492  1303               	bcf	3,6	;RP1=0, select bank0
  3149     0493  0BBE               	decfsz	??___lldiv,f
  3150     0494  2C8A               	goto	u1655
  3151     0495                     l1918:
  3152     0495  1683               	bsf	3,5	;RP0=1, select bank1
  3153     0496  1303               	bcf	3,6	;RP1=0, select bank1
  3154     0497  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  3155     0498  0227               	subwf	(___lldiv@dividend+3)^(0+128),w
  3156     0499  1D03               	skipz
  3157     049A  2CA5               	goto	u1665
  3158     049B  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  3159     049C  0226               	subwf	(___lldiv@dividend+2)^(0+128),w
  3160     049D  1D03               	skipz
  3161     049E  2CA5               	goto	u1665
  3162     049F  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  3163     04A0  0225               	subwf	(___lldiv@dividend+1)^(0+128),w
  3164     04A1  1D03               	skipz
  3165     04A2  2CA5               	goto	u1665
  3166     04A3  0820               	movf	___lldiv@divisor^(0+128),w
  3167     04A4  0224               	subwf	___lldiv@dividend^(0+128),w
  3168     04A5                     u1665:
  3169     04A5  1C03               	skipc
  3170     04A6  2CA8               	goto	u1661
  3171     04A7  2CA9               	goto	u1660
  3172     04A8                     u1661:
  3173     04A8  2CB8               	goto	l1924
  3174     04A9                     u1660:
  3175     04A9                     l1920:
  3176     04A9  0820               	movf	___lldiv@divisor^(0+128),w
  3177     04AA  02A4               	subwf	___lldiv@dividend^(0+128),f
  3178     04AB  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  3179     04AC  1C03               	skipc
  3180     04AD  0F21               	incfsz	(___lldiv@divisor+1)^(0+128),w
  3181     04AE  02A5               	subwf	(___lldiv@dividend+1)^(0+128),f
  3182     04AF  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  3183     04B0  1C03               	skipc
  3184     04B1  0F22               	incfsz	(___lldiv@divisor+2)^(0+128),w
  3185     04B2  02A6               	subwf	(___lldiv@dividend+2)^(0+128),f
  3186     04B3  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  3187     04B4  1C03               	skipc
  3188     04B5  0F23               	incfsz	(___lldiv@divisor+3)^(0+128),w
  3189     04B6  02A7               	subwf	(___lldiv@dividend+3)^(0+128),f
  3190     04B7                     l1922:
  3191     04B7  1428               	bsf	___lldiv@quotient^(0+128),0
  3192     04B8                     l1924:
  3193     04B8  3001               	movlw	1
  3194     04B9                     u1675:
  3195     04B9  1003               	clrc
  3196     04BA  0CA3               	rrf	(___lldiv@divisor+3)^(0+128),f
  3197     04BB  0CA2               	rrf	(___lldiv@divisor+2)^(0+128),f
  3198     04BC  0CA1               	rrf	(___lldiv@divisor+1)^(0+128),f
  3199     04BD  0CA0               	rrf	___lldiv@divisor^(0+128),f
  3200     04BE  3EFF               	addlw	-1
  3201     04BF  1D03               	skipz
  3202     04C0  2CB9               	goto	u1675
  3203     04C1                     l1926:
  3204     04C1  3001               	movlw	1
  3205     04C2  02AC               	subwf	___lldiv@counter^(0+128),f
  3206     04C3  1D03               	btfss	3,2
  3207     04C4  2CC6               	goto	u1681
  3208     04C5  2CC7               	goto	u1680
  3209     04C6                     u1681:
  3210     04C6  2C86               	goto	l1916
  3211     04C7                     u1680:
  3212     04C7                     l1928:
  3213     04C7  082B               	movf	(___lldiv@quotient+3)^(0+128),w
  3214     04C8  00A3               	movwf	(?___lldiv+3)^(0+128)
  3215     04C9  082A               	movf	(___lldiv@quotient+2)^(0+128),w
  3216     04CA  00A2               	movwf	(?___lldiv+2)^(0+128)
  3217     04CB  0829               	movf	(___lldiv@quotient+1)^(0+128),w
  3218     04CC  00A1               	movwf	(?___lldiv+1)^(0+128)
  3219     04CD  0828               	movf	___lldiv@quotient^(0+128),w
  3220     04CE  00A0               	movwf	?___lldiv^(0+128)
  3221     04CF                     l366:
  3222     04CF  0008               	return
  3223     04D0                     __end_of___lldiv:
  3224                           
  3225                           	psect	text15
  3226     0F99                     __ptext15:	
  3227 ;; *************** function _Prepare_LCD_Pins *****************
  3228 ;; Defined at:
  3229 ;;		line 353 in file "env_esclavo.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1    wreg      void 
  3236 ;; Registers used:
  3237 ;;		status,2
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1
  3243 ;;      Params:         0       0       0
  3244 ;;      Locals:         0       0       0
  3245 ;;      Temps:          0       0       0
  3246 ;;      Totals:         0       0       0
  3247 ;;Total ram usage:        0 bytes
  3248 ;; Hardware stack levels used: 1
  3249 ;; Hardware stack levels required when called: 3
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		_Handle_Keypress
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257     0F99                     _Prepare_LCD_Pins:	
  3258                           ;psect for function _Prepare_LCD_Pins
  3259                           
  3260     0F99                     l2098:	
  3261                           ;incstack = 0
  3262                           ; Regs used in _Prepare_LCD_Pins: [status,2]
  3263                           
  3264                           
  3265                           ;env_esclavo.c: 355:     TRISB = 0x00;
  3266     0F99  1683               	bsf	3,5	;RP0=1, select bank1
  3267     0F9A  1303               	bcf	3,6	;RP1=0, select bank1
  3268     0F9B  0186               	clrf	6	;volatile
  3269     0F9C                     l203:
  3270     0F9C  0008               	return
  3271     0F9D                     __end_of_Prepare_LCD_Pins:
  3272                           
  3273                           	psect	text16
  3274     0760                     __ptext16:	
  3275 ;; *************** function _LCD_setCursor *****************
  3276 ;; Defined at:
  3277 ;;		line 340 in file "env_esclavo.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  row             1    wreg     unsigned char 
  3280 ;;  column          1   33[BANK0 ] unsigned char 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  row             1    0[BANK1 ] unsigned char 
  3283 ;;  position        1    3[BANK1 ] unsigned char 
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  1    wreg      void 
  3286 ;; Registers used:
  3287 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMMON   BANK0   BANK1
  3293 ;;      Params:         0       1       0
  3294 ;;      Locals:         0       0       4
  3295 ;;      Temps:          0       0       0
  3296 ;;      Totals:         0       1       4
  3297 ;;Total ram usage:        5 bytes
  3298 ;; Hardware stack levels used: 1
  3299 ;; Hardware stack levels required when called: 4
  3300 ;; This function calls:
  3301 ;;		_LCD_command
  3302 ;; This function is called by:
  3303 ;;		_main
  3304 ;;		_Handle_Keypress
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308     0760                     _LCD_setCursor:	
  3309                           ;psect for function _LCD_setCursor
  3310                           
  3311                           
  3312                           ;incstack = 0
  3313                           ; Regs used in _LCD_setCursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3314                           ;LCD_setCursor@row stored from wreg
  3315     0760  1683               	bsf	3,5	;RP0=1, select bank1
  3316     0761  1303               	bcf	3,6	;RP1=0, select bank1
  3317     0762  00A0               	movwf	LCD_setCursor@row^(0+128)
  3318     0763                     l2020:
  3319                           
  3320                           ;env_esclavo.c: 341:     unsigned char position = (row == 1) ? 0x80 : 0xC0;
  3321     0763  0320               	decf	LCD_setCursor@row^(0+128),w
  3322     0764  1903               	btfsc	3,2
  3323     0765  2F67               	goto	u1741
  3324     0766  2F68               	goto	u1740
  3325     0767                     u1741:
  3326     0767  2F6D               	goto	l2024
  3327     0768                     u1740:
  3328     0768                     l2022:
  3329     0768  30C0               	movlw	192
  3330     0769  00A1               	movwf	_LCD_setCursor$339^(0+128)
  3331     076A  3000               	movlw	0
  3332     076B  00A2               	movwf	(_LCD_setCursor$339^(0+128)+1)
  3333     076C  2F71               	goto	l193
  3334     076D                     l2024:
  3335     076D  3080               	movlw	128
  3336     076E  00A1               	movwf	_LCD_setCursor$339^(0+128)
  3337     076F  3000               	movlw	0
  3338     0770  00A2               	movwf	(_LCD_setCursor$339^(0+128)+1)
  3339     0771                     l193:
  3340     0771  0821               	movf	_LCD_setCursor$339^(0+128),w
  3341     0772  00A3               	movwf	LCD_setCursor@position^(0+128)
  3342     0773                     l2026:
  3343                           
  3344                           ;env_esclavo.c: 342:     position += column;
  3345     0773  1283               	bcf	3,5	;RP0=0, select bank0
  3346     0774  1303               	bcf	3,6	;RP1=0, select bank0
  3347     0775  0841               	movf	LCD_setCursor@column,w
  3348     0776  00FF               	movwf	btemp+1
  3349     0777  087F               	movf	btemp+1,w
  3350     0778  1683               	bsf	3,5	;RP0=1, select bank1
  3351     0779  1303               	bcf	3,6	;RP1=0, select bank1
  3352     077A  07A3               	addwf	LCD_setCursor@position^(0+128),f
  3353     077B                     l2028:
  3354                           
  3355                           ;env_esclavo.c: 343:     LCD_command(position);
  3356     077B  0823               	movf	LCD_setCursor@position^(0+128),w
  3357     077C  118A  27B3  118A   	fcall	_LCD_command
  3358     077F                     l194:
  3359     077F  0008               	return
  3360     0780                     __end_of_LCD_setCursor:
  3361                           
  3362                           	psect	text17
  3363     071C                     __ptext17:	
  3364 ;; *************** function _LCD_print *****************
  3365 ;; Defined at:
  3366 ;;		line 346 in file "env_esclavo.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  string          2   33[BANK0 ] PTR const unsigned char 
  3369 ;;		 -> STR_4(13), ISR@receiveBuffer(16), STR_3(15), STR_2(16), 
  3370 ;;		 -> displayString(16), STR_1(7), 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMMON   BANK0   BANK1
  3382 ;;      Params:         0       2       0
  3383 ;;      Locals:         0       0       0
  3384 ;;      Temps:          0       0       0
  3385 ;;      Totals:         0       2       0
  3386 ;;Total ram usage:        2 bytes
  3387 ;; Hardware stack levels used: 1
  3388 ;; Hardware stack levels required when called: 4
  3389 ;; This function calls:
  3390 ;;		_LCD_data
  3391 ;; This function is called by:
  3392 ;;		_main
  3393 ;;		_Handle_Keypress
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397     071C                     _LCD_print:	
  3398                           ;psect for function _LCD_print
  3399                           
  3400     071C                     l2030:	
  3401                           ;incstack = 0
  3402                           ; Regs used in _LCD_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3403                           
  3404                           
  3405                           ;env_esclavo.c: 347:     while(*string) {
  3406     071C  2F2F               	goto	l2036
  3407     071D                     l2032:
  3408                           
  3409                           ;env_esclavo.c: 348:         LCD_data(*string++);
  3410     071D  0842               	movf	LCD_print@string+1,w
  3411     071E  00FF               	movwf	btemp+1
  3412     071F  0841               	movf	LCD_print@string,w
  3413     0720  0084               	movwf	4
  3414     0721  118A  2538  118A   	fcall	stringtab
  3415     0724  118A  279C  118A   	fcall	_LCD_data
  3416     0727                     l2034:
  3417     0727  3001               	movlw	1
  3418     0728  1283               	bcf	3,5	;RP0=0, select bank0
  3419     0729  1303               	bcf	3,6	;RP1=0, select bank0
  3420     072A  07C1               	addwf	LCD_print@string,f
  3421     072B  1803               	skipnc
  3422     072C  0AC2               	incf	LCD_print@string+1,f
  3423     072D  3000               	movlw	0
  3424     072E  07C2               	addwf	LCD_print@string+1,f
  3425     072F                     l2036:
  3426                           
  3427                           ;env_esclavo.c: 347:     while(*string) {
  3428     072F  1283               	bcf	3,5	;RP0=0, select bank0
  3429     0730  1303               	bcf	3,6	;RP1=0, select bank0
  3430     0731  0842               	movf	LCD_print@string+1,w
  3431     0732  00FF               	movwf	btemp+1
  3432     0733  0841               	movf	LCD_print@string,w
  3433     0734  0084               	movwf	4
  3434     0735  118A  2538  118A   	fcall	stringtab
  3435     0738  3A00               	xorlw	0
  3436     0739  1D03               	skipz
  3437     073A  2F3C               	goto	u1751
  3438     073B  2F3D               	goto	u1750
  3439     073C                     u1751:
  3440     073C  2F1D               	goto	l2032
  3441     073D                     u1750:
  3442     073D                     l200:
  3443     073D  0008               	return
  3444     073E                     __end_of_LCD_print:
  3445                           
  3446                           	psect	text18
  3447     079C                     __ptext18:	
  3448 ;; *************** function _LCD_data *****************
  3449 ;; Defined at:
  3450 ;;		line 302 in file "env_esclavo.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;  data            1    wreg     unsigned char 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  data            1   32[BANK0 ] unsigned char 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  1    wreg      void 
  3457 ;; Registers used:
  3458 ;;		wreg
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMMON   BANK0   BANK1
  3464 ;;      Params:         0       0       0
  3465 ;;      Locals:         0       1       0
  3466 ;;      Temps:          0       2       0
  3467 ;;      Totals:         0       3       0
  3468 ;;Total ram usage:        3 bytes
  3469 ;; Hardware stack levels used: 1
  3470 ;; Hardware stack levels required when called: 3
  3471 ;; This function calls:
  3472 ;;		Nothing
  3473 ;; This function is called by:
  3474 ;;		_LCD_print
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478     079C                     _LCD_data:	
  3479                           ;psect for function _LCD_data
  3480                           
  3481                           
  3482                           ;incstack = 0
  3483                           ; Regs used in _LCD_data: [wreg]
  3484                           ;LCD_data@data stored from wreg
  3485     079C  1283               	bcf	3,5	;RP0=0, select bank0
  3486     079D  1303               	bcf	3,6	;RP1=0, select bank0
  3487     079E  00C0               	movwf	LCD_data@data
  3488     079F                     l1964:
  3489                           
  3490                           ;env_esclavo.c: 303:     RA0 = 1;
  3491     079F  1405               	bsf	5,0	;volatile
  3492                           
  3493                           ;env_esclavo.c: 304:     RA1 = 0;
  3494     07A0  1085               	bcf	5,1	;volatile
  3495     07A1                     l1966:
  3496                           
  3497                           ;env_esclavo.c: 305:     PORTB = data;
  3498     07A1  0840               	movf	LCD_data@data,w
  3499     07A2  0086               	movwf	6	;volatile
  3500     07A3                     l1968:
  3501                           
  3502                           ;env_esclavo.c: 306:     RA2 = 1;
  3503     07A3  1505               	bsf	5,2	;volatile
  3504                           
  3505                           ;env_esclavo.c: 307:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3506     07A4  3003               	movlw	3
  3507     07A5  1283               	bcf	3,5	;RP0=0, select bank0
  3508     07A6  1303               	bcf	3,6	;RP1=0, select bank0
  3509     07A7  00BF               	movwf	??_LCD_data+1
  3510     07A8  3097               	movlw	151
  3511     07A9  00BE               	movwf	??_LCD_data
  3512     07AA                     u2247:
  3513     07AA  0BBE               	decfsz	??_LCD_data,f
  3514     07AB  2FAA               	goto	u2247
  3515     07AC  0BBF               	decfsz	??_LCD_data+1,f
  3516     07AD  2FAA               	goto	u2247
  3517     07AE  0000               	nop
  3518     07AF                     l1970:
  3519                           
  3520                           ;env_esclavo.c: 308:     RA2 = 0;
  3521     07AF  1283               	bcf	3,5	;RP0=0, select bank0
  3522     07B0  1303               	bcf	3,6	;RP1=0, select bank0
  3523     07B1  1105               	bcf	5,2	;volatile
  3524     07B2                     l181:
  3525     07B2  0008               	return
  3526     07B3                     __end_of_LCD_data:
  3527                           
  3528                           	psect	text19
  3529     058B                     __ptext19:	
  3530 ;; *************** function _LCD_init *****************
  3531 ;; Defined at:
  3532 ;;		line 311 in file "env_esclavo.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0, pclath, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMMON   BANK0   BANK1
  3546 ;;      Params:         0       0       0
  3547 ;;      Locals:         0       0       0
  3548 ;;      Temps:          0       2       0
  3549 ;;      Totals:         0       2       0
  3550 ;;Total ram usage:        2 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; Hardware stack levels required when called: 4
  3553 ;; This function calls:
  3554 ;;		_LCD_command
  3555 ;; This function is called by:
  3556 ;;		_main
  3557 ;;		_Handle_Keypress
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561     058B                     _LCD_init:	
  3562                           ;psect for function _LCD_init
  3563                           
  3564     058B                     l1998:	
  3565                           ;incstack = 0
  3566                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  3567                           
  3568                           
  3569                           ;env_esclavo.c: 313:     ADCON1 = 0x07;
  3570     058B  3007               	movlw	7
  3571     058C  1683               	bsf	3,5	;RP0=1, select bank1
  3572     058D  1303               	bcf	3,6	;RP1=0, select bank1
  3573     058E  009F               	movwf	31	;volatile
  3574     058F                     l2000:
  3575                           
  3576                           ;env_esclavo.c: 314:     TRISA = 0x00;
  3577     058F  0185               	clrf	5	;volatile
  3578     0590                     l2002:
  3579                           
  3580                           ;env_esclavo.c: 315:     TRISB = 0x00;
  3581     0590  0186               	clrf	6	;volatile
  3582                           
  3583                           ;env_esclavo.c: 318:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3584     0591  301A               	movlw	26
  3585     0592  1283               	bcf	3,5	;RP0=0, select bank0
  3586     0593  1303               	bcf	3,6	;RP1=0, select bank0
  3587     0594  00C2               	movwf	??_LCD_init+1
  3588     0595  30F8               	movlw	248
  3589     0596  00C1               	movwf	??_LCD_init
  3590     0597                     u2257:
  3591     0597  0BC1               	decfsz	??_LCD_init,f
  3592     0598  2D97               	goto	u2257
  3593     0599  0BC2               	decfsz	??_LCD_init+1,f
  3594     059A  2D97               	goto	u2257
  3595     059B                     l2004:
  3596                           
  3597                           ;env_esclavo.c: 321:     LCD_command(0x38);
  3598     059B  3038               	movlw	56
  3599     059C  118A  27B3  118A   	fcall	_LCD_command
  3600     059F                     l2006:
  3601                           
  3602                           ;env_esclavo.c: 322:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3603     059F  3007               	movlw	7
  3604     05A0  1283               	bcf	3,5	;RP0=0, select bank0
  3605     05A1  1303               	bcf	3,6	;RP1=0, select bank0
  3606     05A2  00C2               	movwf	??_LCD_init+1
  3607     05A3  307C               	movlw	124
  3608     05A4  00C1               	movwf	??_LCD_init
  3609     05A5                     u2267:
  3610     05A5  0BC1               	decfsz	??_LCD_init,f
  3611     05A6  2DA5               	goto	u2267
  3612     05A7  0BC2               	decfsz	??_LCD_init+1,f
  3613     05A8  2DA5               	goto	u2267
  3614     05A9  2DAA               	nop2
  3615                           
  3616                           ;env_esclavo.c: 324:     LCD_command(0x0F);
  3617     05AA  300F               	movlw	15
  3618     05AB  118A  27B3  118A   	fcall	_LCD_command
  3619     05AE                     l2008:
  3620                           
  3621                           ;env_esclavo.c: 325:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3622     05AE  3007               	movlw	7
  3623     05AF  1283               	bcf	3,5	;RP0=0, select bank0
  3624     05B0  1303               	bcf	3,6	;RP1=0, select bank0
  3625     05B1  00C2               	movwf	??_LCD_init+1
  3626     05B2  307C               	movlw	124
  3627     05B3  00C1               	movwf	??_LCD_init
  3628     05B4                     u2277:
  3629     05B4  0BC1               	decfsz	??_LCD_init,f
  3630     05B5  2DB4               	goto	u2277
  3631     05B6  0BC2               	decfsz	??_LCD_init+1,f
  3632     05B7  2DB4               	goto	u2277
  3633     05B8  2DB9               	nop2
  3634     05B9                     l2010:
  3635                           
  3636                           ;env_esclavo.c: 327:     LCD_command(0x01);
  3637     05B9  3001               	movlw	1
  3638     05BA  118A  27B3  118A   	fcall	_LCD_command
  3639                           
  3640                           ;env_esclavo.c: 328:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3641     05BD  3003               	movlw	3
  3642     05BE  1283               	bcf	3,5	;RP0=0, select bank0
  3643     05BF  1303               	bcf	3,6	;RP1=0, select bank0
  3644     05C0  00C2               	movwf	??_LCD_init+1
  3645     05C1  3097               	movlw	151
  3646     05C2  00C1               	movwf	??_LCD_init
  3647     05C3                     u2287:
  3648     05C3  0BC1               	decfsz	??_LCD_init,f
  3649     05C4  2DC3               	goto	u2287
  3650     05C5  0BC2               	decfsz	??_LCD_init+1,f
  3651     05C6  2DC3               	goto	u2287
  3652     05C7  0000               	nop
  3653     05C8                     l2012:
  3654                           
  3655                           ;env_esclavo.c: 330:     LCD_command(0x02);
  3656     05C8  3002               	movlw	2
  3657     05C9  118A  27B3  118A   	fcall	_LCD_command
  3658     05CC                     l2014:
  3659                           
  3660                           ;env_esclavo.c: 331:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3661     05CC  3003               	movlw	3
  3662     05CD  1283               	bcf	3,5	;RP0=0, select bank0
  3663     05CE  1303               	bcf	3,6	;RP1=0, select bank0
  3664     05CF  00C2               	movwf	??_LCD_init+1
  3665     05D0  3097               	movlw	151
  3666     05D1  00C1               	movwf	??_LCD_init
  3667     05D2                     u2297:
  3668     05D2  0BC1               	decfsz	??_LCD_init,f
  3669     05D3  2DD2               	goto	u2297
  3670     05D4  0BC2               	decfsz	??_LCD_init+1,f
  3671     05D5  2DD2               	goto	u2297
  3672     05D6  0000               	nop
  3673     05D7                     l184:
  3674     05D7  0008               	return
  3675     05D8                     __end_of_LCD_init:
  3676                           
  3677                           	psect	text20
  3678     0FDC                     __ptext20:	
  3679 ;; *************** function _LCD_clear *****************
  3680 ;; Defined at:
  3681 ;;		line 335 in file "env_esclavo.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;		None
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;		None
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  1    wreg      void 
  3688 ;; Registers used:
  3689 ;;		wreg, status,2, status,0, pclath, cstack
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMMON   BANK0   BANK1
  3695 ;;      Params:         0       0       0
  3696 ;;      Locals:         0       0       0
  3697 ;;      Temps:          0       2       0
  3698 ;;      Totals:         0       2       0
  3699 ;;Total ram usage:        2 bytes
  3700 ;; Hardware stack levels used: 1
  3701 ;; Hardware stack levels required when called: 4
  3702 ;; This function calls:
  3703 ;;		_LCD_command
  3704 ;; This function is called by:
  3705 ;;		_main
  3706 ;;		_Handle_Keypress
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710     0FDC                     _LCD_clear:	
  3711                           ;psect for function _LCD_clear
  3712                           
  3713     0FDC                     l2016:	
  3714                           ;incstack = 0
  3715                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  3716                           
  3717                           
  3718                           ;env_esclavo.c: 336:     LCD_command(0x01);
  3719     0FDC  3001               	movlw	1
  3720     0FDD  118A  27B3  158A   	fcall	_LCD_command
  3721     0FE0                     l2018:
  3722                           
  3723                           ;env_esclavo.c: 337:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3724     0FE0  3003               	movlw	3
  3725     0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  3726     0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  3727     0FE3  00C2               	movwf	??_LCD_clear+1
  3728     0FE4  3097               	movlw	151
  3729     0FE5  00C1               	movwf	??_LCD_clear
  3730     0FE6                     u2307:
  3731     0FE6  0BC1               	decfsz	??_LCD_clear,f
  3732     0FE7  2FE6               	goto	u2307
  3733     0FE8  0BC2               	decfsz	??_LCD_clear+1,f
  3734     0FE9  2FE6               	goto	u2307
  3735     0FEA  0000               	nop
  3736     0FEB                     l187:
  3737     0FEB  0008               	return
  3738     0FEC                     __end_of_LCD_clear:
  3739                           
  3740                           	psect	text21
  3741     07B3                     __ptext21:	
  3742 ;; *************** function _LCD_command *****************
  3743 ;; Defined at:
  3744 ;;		line 293 in file "env_esclavo.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;  command         1    wreg     unsigned char 
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  command         1   32[BANK0 ] unsigned char 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      void 
  3751 ;; Registers used:
  3752 ;;		wreg
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1
  3758 ;;      Params:         0       0       0
  3759 ;;      Locals:         0       1       0
  3760 ;;      Temps:          0       2       0
  3761 ;;      Totals:         0       3       0
  3762 ;;Total ram usage:        3 bytes
  3763 ;; Hardware stack levels used: 1
  3764 ;; Hardware stack levels required when called: 3
  3765 ;; This function calls:
  3766 ;;		Nothing
  3767 ;; This function is called by:
  3768 ;;		_LCD_init
  3769 ;;		_LCD_clear
  3770 ;;		_LCD_setCursor
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774     07B3                     _LCD_command:	
  3775                           ;psect for function _LCD_command
  3776                           
  3777                           
  3778                           ;incstack = 0
  3779                           ; Regs used in _LCD_command: [wreg]
  3780                           ;LCD_command@command stored from wreg
  3781     07B3  1283               	bcf	3,5	;RP0=0, select bank0
  3782     07B4  1303               	bcf	3,6	;RP1=0, select bank0
  3783     07B5  00C0               	movwf	LCD_command@command
  3784     07B6                     l1956:
  3785                           
  3786                           ;env_esclavo.c: 294:     RA0 = 0;
  3787     07B6  1005               	bcf	5,0	;volatile
  3788                           
  3789                           ;env_esclavo.c: 295:     RA1 = 0;
  3790     07B7  1085               	bcf	5,1	;volatile
  3791     07B8                     l1958:
  3792                           
  3793                           ;env_esclavo.c: 296:     PORTB = command;
  3794     07B8  0840               	movf	LCD_command@command,w
  3795     07B9  0086               	movwf	6	;volatile
  3796     07BA                     l1960:
  3797                           
  3798                           ;env_esclavo.c: 297:     RA2 = 1;
  3799     07BA  1505               	bsf	5,2	;volatile
  3800                           
  3801                           ;env_esclavo.c: 298:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3802     07BB  3003               	movlw	3
  3803     07BC  1283               	bcf	3,5	;RP0=0, select bank0
  3804     07BD  1303               	bcf	3,6	;RP1=0, select bank0
  3805     07BE  00BF               	movwf	??_LCD_command+1
  3806     07BF  3097               	movlw	151
  3807     07C0  00BE               	movwf	??_LCD_command
  3808     07C1                     u2317:
  3809     07C1  0BBE               	decfsz	??_LCD_command,f
  3810     07C2  2FC1               	goto	u2317
  3811     07C3  0BBF               	decfsz	??_LCD_command+1,f
  3812     07C4  2FC1               	goto	u2317
  3813     07C5  0000               	nop
  3814     07C6                     l1962:
  3815                           
  3816                           ;env_esclavo.c: 299:     RA2 = 0;
  3817     07C6  1283               	bcf	3,5	;RP0=0, select bank0
  3818     07C7  1303               	bcf	3,6	;RP1=0, select bank0
  3819     07C8  1105               	bcf	5,2	;volatile
  3820     07C9                     l178:
  3821     07C9  0008               	return
  3822     07CA                     __end_of_LCD_command:
  3823                           
  3824                           	psect	text22
  3825     026E                     __ptext22:	
  3826 ;; *************** function _ISR *****************
  3827 ;; Defined at:
  3828 ;;		line 251 in file "env_esclavo.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;		None
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  temp            1   29[BANK0 ] unsigned char 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMMON   BANK0   BANK1
  3842 ;;      Params:         0       0       0
  3843 ;;      Locals:         0       1       0
  3844 ;;      Temps:          0       7       0
  3845 ;;      Totals:         0       8       0
  3846 ;;Total ram usage:        8 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; Hardware stack levels required when called: 2
  3849 ;; This function calls:
  3850 ;;		i1_I2C_Master_Init
  3851 ;;		i1_LCD_clear
  3852 ;;		i1_LCD_print
  3853 ;;		i1_LCD_setCursor
  3854 ;; This function is called by:
  3855 ;;		Interrupt level 1
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859     026E                     _ISR:	
  3860                           ;psect for function _ISR
  3861                           
  3862     026E                     i1l1844:
  3863                           
  3864                           ;env_esclavo.c: 252:     static char receiveBuffer[15 + 1];;env_esclavo.c: 253:     stat
      +                          ic int index = 0;;env_esclavo.c: 255:     if (SSPIF) {
  3865     026E  1D8C               	btfss	12,3	;volatile
  3866     026F  2A71               	goto	u152_21
  3867     0270  2A72               	goto	u152_20
  3868     0271                     u152_21:
  3869     0271  2B1F               	goto	i1l175
  3870     0272                     u152_20:
  3871     0272                     i1l1846:
  3872                           
  3873                           ;env_esclavo.c: 256:         char temp = SSPBUF;
  3874     0272  0813               	movf	19,w	;volatile
  3875     0273  00BD               	movwf	ISR@temp
  3876     0274                     i1l1848:
  3877                           
  3878                           ;env_esclavo.c: 257:         SSPCONbits.CKP = 1;
  3879     0274  1614               	bsf	20,4	;volatile
  3880     0275                     i1l1850:
  3881                           
  3882                           ;env_esclavo.c: 259:         if (!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  3883     0275  1683               	bsf	3,5	;RP0=1, select bank1
  3884     0276  1303               	bcf	3,6	;RP1=0, select bank1
  3885     0277  1A94               	btfsc	20,5	;volatile
  3886     0278  2A7A               	goto	u153_21
  3887     0279  2A7B               	goto	u153_20
  3888     027A                     u153_21:
  3889     027A  2A84               	goto	i1l168
  3890     027B                     u153_20:
  3891     027B                     i1l1852:
  3892     027B  1914               	btfsc	20,2	;volatile
  3893     027C  2A7E               	goto	u154_21
  3894     027D  2A7F               	goto	u154_20
  3895     027E                     u154_21:
  3896     027E  2A84               	goto	i1l168
  3897     027F                     u154_20:
  3898     027F                     i1l1854:
  3899                           
  3900                           ;env_esclavo.c: 260:             index = 0;
  3901     027F  1283               	bcf	3,5	;RP0=0, select bank0
  3902     0280  1303               	bcf	3,6	;RP1=0, select bank0
  3903     0281  01C3               	clrf	ISR@index
  3904     0282  01C4               	clrf	ISR@index+1
  3905                           
  3906                           ;env_esclavo.c: 261:         } else if (SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  3907     0283  2B1C               	goto	i1l1898
  3908     0284                     i1l168:
  3909     0284  1E94               	btfss	20,5	;volatile
  3910     0285  2A87               	goto	u155_21
  3911     0286  2A88               	goto	u155_20
  3912     0287                     u155_21:
  3913     0287  2B1C               	goto	i1l1898
  3914     0288                     u155_20:
  3915     0288                     i1l1856:
  3916     0288  1914               	btfsc	20,2	;volatile
  3917     0289  2A8B               	goto	u156_21
  3918     028A  2A8C               	goto	u156_20
  3919     028B                     u156_21:
  3920     028B  2B1C               	goto	i1l1898
  3921     028C                     u156_20:
  3922     028C                     i1l1858:
  3923                           
  3924                           ;env_esclavo.c: 262:             if (index < 15) {
  3925     028C  1283               	bcf	3,5	;RP0=0, select bank0
  3926     028D  1303               	bcf	3,6	;RP1=0, select bank0
  3927     028E  0844               	movf	ISR@index+1,w
  3928     028F  3A80               	xorlw	128
  3929     0290  00FF               	movwf	btemp+1
  3930     0291  3080               	movlw	128
  3931     0292  027F               	subwf	btemp+1,w
  3932     0293  1D03               	skipz
  3933     0294  2A97               	goto	u157_25
  3934     0295  300F               	movlw	15
  3935     0296  0243               	subwf	ISR@index,w
  3936     0297                     u157_25:
  3937     0297  1803               	skipnc
  3938     0298  2A9A               	goto	u157_21
  3939     0299  2A9B               	goto	u157_20
  3940     029A                     u157_21:
  3941     029A  2B1C               	goto	i1l1898
  3942     029B                     u157_20:
  3943     029B                     i1l1860:
  3944                           
  3945                           ;env_esclavo.c: 263:                 receiveBuffer[index++] = temp;
  3946     029B  1283               	bcf	3,5	;RP0=0, select bank0
  3947     029C  1303               	bcf	3,6	;RP1=0, select bank0
  3948     029D  0843               	movf	ISR@index,w
  3949     029E  3EBD               	addlw	(low (ISR@receiveBuffer| 0))& (0+255)
  3950     029F  0084               	movwf	4
  3951     02A0  083D               	movf	ISR@temp,w
  3952     02A1  1383               	bcf	3,7	;select IRP bank1
  3953     02A2  0080               	movwf	0
  3954     02A3                     i1l1862:
  3955     02A3  3001               	movlw	1
  3956     02A4  07C3               	addwf	ISR@index,f
  3957     02A5  1803               	skipnc
  3958     02A6  0AC4               	incf	ISR@index+1,f
  3959     02A7  3000               	movlw	0
  3960     02A8  07C4               	addwf	ISR@index+1,f
  3961     02A9                     i1l1864:
  3962                           
  3963                           ;env_esclavo.c: 264:                 if (temp == '\0' || index == 15) {
  3964     02A9  083D               	movf	ISR@temp,w
  3965     02AA  1903               	btfsc	3,2
  3966     02AB  2AAD               	goto	u158_21
  3967     02AC  2AAE               	goto	u158_20
  3968     02AD                     u158_21:
  3969     02AD  2AB5               	goto	i1l1868
  3970     02AE                     u158_20:
  3971     02AE                     i1l1866:
  3972     02AE  300F               	movlw	15
  3973     02AF  0643               	xorwf	ISR@index,w
  3974     02B0  0444               	iorwf	ISR@index+1,w
  3975     02B1  1D03               	btfss	3,2
  3976     02B2  2AB4               	goto	u159_21
  3977     02B3  2AB5               	goto	u159_20
  3978     02B4                     u159_21:
  3979     02B4  2B1C               	goto	i1l170
  3980     02B5                     u159_20:
  3981     02B5                     i1l1868:
  3982                           
  3983                           ;env_esclavo.c: 265:                     receiveBuffer[index] = '\0';
  3984     02B5  0843               	movf	ISR@index,w
  3985     02B6  3EBD               	addlw	(low (ISR@receiveBuffer| 0))& (0+255)
  3986     02B7  0084               	movwf	4
  3987     02B8  0180               	clrf	0
  3988     02B9                     i1l1870:
  3989                           
  3990                           ;env_esclavo.c: 266:                     LCD_clear();
  3991     02B9  158A  27CC  118A   	fcall	i1_LCD_clear
  3992     02BC                     i1l1872:
  3993                           
  3994                           ;env_esclavo.c: 267:                     LCD_setCursor(1, 0);
  3995     02BC  1283               	bcf	3,5	;RP0=0, select bank0
  3996     02BD  1303               	bcf	3,6	;RP1=0, select bank0
  3997     02BE  01A3               	clrf	i1LCD_setCursor@column
  3998     02BF  3001               	movlw	1
  3999     02C0  118A  2780  118A   	fcall	i1_LCD_setCursor
  4000     02C3                     i1l1874:
  4001                           
  4002                           ;env_esclavo.c: 268:                     LCD_print(receiveBuffer);
  4003     02C3  30BD               	movlw	(low (ISR@receiveBuffer| 0))& (0+255)
  4004     02C4  1283               	bcf	3,5	;RP0=0, select bank0
  4005     02C5  1303               	bcf	3,6	;RP1=0, select bank0
  4006     02C6  00A3               	movwf	i1LCD_print@string
  4007     02C7  3000               	movlw	0
  4008     02C8  00A4               	movwf	i1LCD_print@string+1
  4009     02C9  118A  273E  118A   	fcall	i1_LCD_print
  4010     02CC                     i1l1876:
  4011                           
  4012                           ;env_esclavo.c: 269:                     index = 0;
  4013     02CC  1283               	bcf	3,5	;RP0=0, select bank0
  4014     02CD  1303               	bcf	3,6	;RP1=0, select bank0
  4015     02CE  01C3               	clrf	ISR@index
  4016     02CF  01C4               	clrf	ISR@index+1
  4017     02D0                     i1l1878:
  4018                           
  4019                           ;env_esclavo.c: 270:                     allow_input = 1;
  4020     02D0  3001               	movlw	1
  4021     02D1  00C7               	movwf	_allow_input	;volatile
  4022     02D2                     i1l1880:
  4023                           
  4024                           ;env_esclavo.c: 271:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
  4025     02D2  300B               	movlw	11
  4026     02D3  1283               	bcf	3,5	;RP0=0, select bank0
  4027     02D4  1303               	bcf	3,6	;RP1=0, select bank0
  4028     02D5  00B8               	movwf	??_ISR+2
  4029     02D6  3026               	movlw	38
  4030     02D7  00B7               	movwf	??_ISR+1
  4031     02D8  305D               	movlw	93
  4032     02D9  00B6               	movwf	??_ISR
  4033     02DA                     u232_27:
  4034     02DA  0BB6               	decfsz	??_ISR,f
  4035     02DB  2ADA               	goto	u232_27
  4036     02DC  0BB7               	decfsz	??_ISR+1,f
  4037     02DD  2ADA               	goto	u232_27
  4038     02DE  0BB8               	decfsz	??_ISR+2,f
  4039     02DF  2ADA               	goto	u232_27
  4040     02E0  0000               	nop
  4041     02E1                     i1l1882:
  4042                           
  4043                           ;env_esclavo.c: 272:                 LCD_clear();
  4044     02E1  158A  27CC  118A   	fcall	i1_LCD_clear
  4045     02E4                     i1l1884:
  4046                           
  4047                           ;env_esclavo.c: 273:                 LCD_setCursor(1,0);
  4048     02E4  1283               	bcf	3,5	;RP0=0, select bank0
  4049     02E5  1303               	bcf	3,6	;RP1=0, select bank0
  4050     02E6  01A3               	clrf	i1LCD_setCursor@column
  4051     02E7  3001               	movlw	1
  4052     02E8  118A  2780  118A   	fcall	i1_LCD_setCursor
  4053     02EB                     i1l1886:
  4054                           
  4055                           ;env_esclavo.c: 274:                 LCD_print("Escriba Resp");
  4056     02EB  3030               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  4057     02EC  1283               	bcf	3,5	;RP0=0, select bank0
  4058     02ED  1303               	bcf	3,6	;RP1=0, select bank0
  4059     02EE  00A3               	movwf	i1LCD_print@string
  4060     02EF  3080               	movlw	128
  4061     02F0  00A4               	movwf	i1LCD_print@string+1
  4062     02F1  118A  273E  118A   	fcall	i1_LCD_print
  4063     02F4                     i1l1888:
  4064                           
  4065                           ;env_esclavo.c: 275:                 _delay((unsigned long)((1000)*(4000000/4000.0)));
  4066     02F4  3006               	movlw	6
  4067     02F5  1283               	bcf	3,5	;RP0=0, select bank0
  4068     02F6  1303               	bcf	3,6	;RP1=0, select bank0
  4069     02F7  00B8               	movwf	??_ISR+2
  4070     02F8  3013               	movlw	19
  4071     02F9  00B7               	movwf	??_ISR+1
  4072     02FA  30AD               	movlw	173
  4073     02FB  00B6               	movwf	??_ISR
  4074     02FC                     u233_27:
  4075     02FC  0BB6               	decfsz	??_ISR,f
  4076     02FD  2AFC               	goto	u233_27
  4077     02FE  0BB7               	decfsz	??_ISR+1,f
  4078     02FF  2AFC               	goto	u233_27
  4079     0300  0BB8               	decfsz	??_ISR+2,f
  4080     0301  2AFC               	goto	u233_27
  4081     0302  0000               	nop
  4082     0303                     i1l1890:
  4083                           
  4084                           ;env_esclavo.c: 276:                 LCD_clear();
  4085     0303  158A  27CC  118A   	fcall	i1_LCD_clear
  4086     0306                     i1l1892:
  4087                           
  4088                           ;env_esclavo.c: 277:                 LCD_setCursor(1,0);
  4089     0306  1283               	bcf	3,5	;RP0=0, select bank0
  4090     0307  1303               	bcf	3,6	;RP1=0, select bank0
  4091     0308  01A3               	clrf	i1LCD_setCursor@column
  4092     0309  3001               	movlw	1
  4093     030A  118A  2780  118A   	fcall	i1_LCD_setCursor
  4094     030D                     i1l1894:
  4095                           
  4096                           ;env_esclavo.c: 280:                     i2c_role = 0;
  4097     030D  1283               	bcf	3,5	;RP0=0, select bank0
  4098     030E  1303               	bcf	3,6	;RP1=0, select bank0
  4099     030F  01DF               	clrf	_i2c_role	;volatile
  4100     0310                     i1l1896:
  4101                           
  4102                           ;env_esclavo.c: 281:                     I2C_Master_Init(100000);
  4103     0310  3000               	movlw	0
  4104     0311  00B1               	movwf	i1I2C_Master_Init@c+3
  4105     0312  3001               	movlw	1
  4106     0313  00B0               	movwf	i1I2C_Master_Init@c+2
  4107     0314  3086               	movlw	134
  4108     0315  00AF               	movwf	i1I2C_Master_Init@c+1
  4109     0316  30A0               	movlw	160
  4110     0317  00AE               	movwf	i1I2C_Master_Init@c
  4111     0318  118A  26C3  118A   	fcall	i1_I2C_Master_Init
  4112     031B  2B1C               	goto	i1l1898
  4113     031C                     i1l170:	
  4114                           ;env_esclavo.c: 285:         }
  4115                           
  4116     031C                     i1l1898:
  4117                           
  4118                           ;env_esclavo.c: 286:         SSPIF = 0;
  4119     031C  1283               	bcf	3,5	;RP0=0, select bank0
  4120     031D  1303               	bcf	3,6	;RP1=0, select bank0
  4121     031E  118C               	bcf	12,3	;volatile
  4122     031F                     i1l175:
  4123     031F  083C               	movf	??_ISR+6,w
  4124     0320  083B               	movf	??_ISR+5,w
  4125     0321  008A               	movwf	10
  4126     0322  083A               	movf	??_ISR+4,w
  4127     0323  0084               	movwf	4
  4128     0324  0E39               	swapf	??_ISR+3,w
  4129     0325  0083               	movwf	3
  4130     0326  0EFE               	swapf	btemp,f
  4131     0327  0E7E               	swapf	btemp,w
  4132     0328  0009               	retfie
  4133     0329                     __end_of_ISR:
  4134                           
  4135                           	psect	intentry
  4136     0004                     __pintentry:	
  4137                           ;incstack = 0
  4138                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4139                           
  4140     0004                     interrupt_function:
  4141     007E                     saved_w	set	btemp
  4142     0004  00FE               	movwf	btemp
  4143     0005  0E03               	swapf	3,w
  4144     0006  1283               	bcf	3,5	;RP0=0, select bank0
  4145     0007  1303               	bcf	3,6	;RP1=0, select bank0
  4146     0008  00B9               	movwf	??_ISR+3
  4147     0009  0804               	movf	4,w
  4148     000A  00BA               	movwf	??_ISR+4
  4149     000B  080A               	movf	10,w
  4150     000C  00BB               	movwf	??_ISR+5
  4151     000D  087F               	movf	btemp+1,w
  4152     000E  00BC               	movwf	??_ISR+6
  4153     000F  118A  2A6E         	ljmp	_ISR
  4154                           
  4155                           	psect	text23
  4156     0780                     __ptext23:	
  4157 ;; *************** function i1_LCD_setCursor *****************
  4158 ;; Defined at:
  4159 ;;		line 340 in file "env_esclavo.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  row             1    wreg     unsigned char 
  4162 ;;  column          1    3[BANK0 ] unsigned char 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  row             1    4[BANK0 ] unsigned char 
  4165 ;;  position        1    7[BANK0 ] unsigned char 
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  1    wreg      void 
  4168 ;; Registers used:
  4169 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMMON   BANK0   BANK1
  4175 ;;      Params:         0       1       0
  4176 ;;      Locals:         0       4       0
  4177 ;;      Temps:          0       0       0
  4178 ;;      Totals:         0       5       0
  4179 ;;Total ram usage:        5 bytes
  4180 ;; Hardware stack levels used: 1
  4181 ;; Hardware stack levels required when called: 1
  4182 ;; This function calls:
  4183 ;;		i1_LCD_command
  4184 ;; This function is called by:
  4185 ;;		_ISR
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189     0780                     i1_LCD_setCursor:	
  4190                           ;psect for function i1_LCD_setCursor
  4191                           
  4192                           
  4193                           ;incstack = 0
  4194                           ; Regs used in i1_LCD_setCursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4195                           ;i1LCD_setCursor@row stored from wreg
  4196     0780  1283               	bcf	3,5	;RP0=0, select bank0
  4197     0781  1303               	bcf	3,6	;RP1=0, select bank0
  4198     0782  00A4               	movwf	i1LCD_setCursor@row
  4199     0783                     i1l1800:
  4200                           
  4201                           ;env_esclavo.c: 341:     unsigned char position = (row == 1) ? 0x80 : 0xC0;
  4202     0783  0324               	decf	i1LCD_setCursor@row,w
  4203     0784  1903               	btfsc	3,2
  4204     0785  2F87               	goto	u147_21
  4205     0786  2F88               	goto	u147_20
  4206     0787                     u147_21:
  4207     0787  2F8D               	goto	i1l1804
  4208     0788                     u147_20:
  4209     0788                     i1l1802:
  4210     0788  30C0               	movlw	192
  4211     0789  00A5               	movwf	i1_LCD_setCursor$339
  4212     078A  3000               	movlw	0
  4213     078B  00A6               	movwf	i1_LCD_setCursor$339+1
  4214     078C  2F91               	goto	i1l193
  4215     078D                     i1l1804:
  4216     078D  3080               	movlw	128
  4217     078E  00A5               	movwf	i1_LCD_setCursor$339
  4218     078F  3000               	movlw	0
  4219     0790  00A6               	movwf	i1_LCD_setCursor$339+1
  4220     0791                     i1l193:
  4221     0791  0825               	movf	i1_LCD_setCursor$339,w
  4222     0792  00A7               	movwf	i1LCD_setCursor@position
  4223     0793                     i1l1806:
  4224                           
  4225                           ;env_esclavo.c: 342:     position += column;
  4226     0793  0823               	movf	i1LCD_setCursor@column,w
  4227     0794  00FF               	movwf	btemp+1
  4228     0795  087F               	movf	btemp+1,w
  4229     0796  07A7               	addwf	i1LCD_setCursor@position,f
  4230     0797                     i1l1808:
  4231                           
  4232                           ;env_esclavo.c: 343:     LCD_command(position);
  4233     0797  0827               	movf	i1LCD_setCursor@position,w
  4234     0798  118A  27E1  118A   	fcall	i1_LCD_command
  4235     079B                     i1l194:
  4236     079B  0008               	return
  4237     079C                     __end_ofi1_LCD_setCursor:
  4238                           
  4239                           	psect	text24
  4240     073E                     __ptext24:	
  4241 ;; *************** function i1_LCD_print *****************
  4242 ;; Defined at:
  4243 ;;		line 346 in file "env_esclavo.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;  string          2    3[BANK0 ] PTR const unsigned char 
  4246 ;;		 -> STR_4(13), ISR@receiveBuffer(16), STR_3(15), STR_2(16), 
  4247 ;;		 -> displayString(16), STR_1(7), 
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;		None
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      void 
  4252 ;; Registers used:
  4253 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMMON   BANK0   BANK1
  4259 ;;      Params:         0       2       0
  4260 ;;      Locals:         0       0       0
  4261 ;;      Temps:          0       0       0
  4262 ;;      Totals:         0       2       0
  4263 ;;Total ram usage:        2 bytes
  4264 ;; Hardware stack levels used: 1
  4265 ;; Hardware stack levels required when called: 1
  4266 ;; This function calls:
  4267 ;;		i1_LCD_data
  4268 ;; This function is called by:
  4269 ;;		_ISR
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273     073E                     i1_LCD_print:	
  4274                           ;psect for function i1_LCD_print
  4275                           
  4276     073E                     i1l1810:	
  4277                           ;incstack = 0
  4278                           ; Regs used in i1_LCD_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4279                           
  4280                           
  4281                           ;env_esclavo.c: 347:     while(*string) {
  4282     073E  2F51               	goto	i1l1816
  4283     073F                     i1l1812:
  4284                           
  4285                           ;env_esclavo.c: 348:         LCD_data(*string++);
  4286     073F  0824               	movf	i1LCD_print@string+1,w
  4287     0740  00FF               	movwf	btemp+1
  4288     0741  0823               	movf	i1LCD_print@string,w
  4289     0742  0084               	movwf	4
  4290     0743  118A  2538  118A   	fcall	stringtab
  4291     0746  118A  27CA  118A   	fcall	i1_LCD_data
  4292     0749                     i1l1814:
  4293     0749  3001               	movlw	1
  4294     074A  1283               	bcf	3,5	;RP0=0, select bank0
  4295     074B  1303               	bcf	3,6	;RP1=0, select bank0
  4296     074C  07A3               	addwf	i1LCD_print@string,f
  4297     074D  1803               	skipnc
  4298     074E  0AA4               	incf	i1LCD_print@string+1,f
  4299     074F  3000               	movlw	0
  4300     0750  07A4               	addwf	i1LCD_print@string+1,f
  4301     0751                     i1l1816:
  4302                           
  4303                           ;env_esclavo.c: 347:     while(*string) {
  4304     0751  1283               	bcf	3,5	;RP0=0, select bank0
  4305     0752  1303               	bcf	3,6	;RP1=0, select bank0
  4306     0753  0824               	movf	i1LCD_print@string+1,w
  4307     0754  00FF               	movwf	btemp+1
  4308     0755  0823               	movf	i1LCD_print@string,w
  4309     0756  0084               	movwf	4
  4310     0757  118A  2538  118A   	fcall	stringtab
  4311     075A  3A00               	xorlw	0
  4312     075B  1D03               	skipz
  4313     075C  2F5E               	goto	u148_21
  4314     075D  2F5F               	goto	u148_20
  4315     075E                     u148_21:
  4316     075E  2F3F               	goto	i1l1812
  4317     075F                     u148_20:
  4318     075F                     i1l200:
  4319     075F  0008               	return
  4320     0760                     __end_ofi1_LCD_print:
  4321                           
  4322                           	psect	text25
  4323     07CA                     __ptext25:	
  4324 ;; *************** function i1_LCD_data *****************
  4325 ;; Defined at:
  4326 ;;		line 302 in file "env_esclavo.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;  data            1    wreg     unsigned char 
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;  data            1    2[BANK0 ] unsigned char 
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  1    wreg      void 
  4333 ;; Registers used:
  4334 ;;		wreg
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMMON   BANK0   BANK1
  4340 ;;      Params:         0       0       0
  4341 ;;      Locals:         0       1       0
  4342 ;;      Temps:          0       2       0
  4343 ;;      Totals:         0       3       0
  4344 ;;Total ram usage:        3 bytes
  4345 ;; Hardware stack levels used: 1
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		i1_LCD_print
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353     07CA                     i1_LCD_data:	
  4354                           ;psect for function i1_LCD_data
  4355                           
  4356                           
  4357                           ;incstack = 0
  4358                           ; Regs used in i1_LCD_data: [wreg]
  4359                           ;i1LCD_data@data stored from wreg
  4360     07CA  1283               	bcf	3,5	;RP0=0, select bank0
  4361     07CB  1303               	bcf	3,6	;RP1=0, select bank0
  4362     07CC  00A2               	movwf	i1LCD_data@data
  4363     07CD                     i1l1568:
  4364                           
  4365                           ;env_esclavo.c: 303:     RA0 = 1;
  4366     07CD  1405               	bsf	5,0	;volatile
  4367                           
  4368                           ;env_esclavo.c: 304:     RA1 = 0;
  4369     07CE  1085               	bcf	5,1	;volatile
  4370     07CF                     i1l1570:
  4371                           
  4372                           ;env_esclavo.c: 305:     PORTB = data;
  4373     07CF  0822               	movf	i1LCD_data@data,w
  4374     07D0  0086               	movwf	6	;volatile
  4375     07D1                     i1l1572:
  4376                           
  4377                           ;env_esclavo.c: 306:     RA2 = 1;
  4378     07D1  1505               	bsf	5,2	;volatile
  4379                           
  4380                           ;env_esclavo.c: 307:     _delay((unsigned long)((2)*(4000000/4000.0)));
  4381     07D2  3003               	movlw	3
  4382     07D3  1283               	bcf	3,5	;RP0=0, select bank0
  4383     07D4  1303               	bcf	3,6	;RP1=0, select bank0
  4384     07D5  00A1               	movwf	??i1_LCD_data+1
  4385     07D6  3097               	movlw	151
  4386     07D7  00A0               	movwf	??i1_LCD_data
  4387     07D8                     u234_27:
  4388     07D8  0BA0               	decfsz	??i1_LCD_data,f
  4389     07D9  2FD8               	goto	u234_27
  4390     07DA  0BA1               	decfsz	??i1_LCD_data+1,f
  4391     07DB  2FD8               	goto	u234_27
  4392     07DC  0000               	nop
  4393     07DD                     i1l1574:
  4394                           
  4395                           ;env_esclavo.c: 308:     RA2 = 0;
  4396     07DD  1283               	bcf	3,5	;RP0=0, select bank0
  4397     07DE  1303               	bcf	3,6	;RP1=0, select bank0
  4398     07DF  1105               	bcf	5,2	;volatile
  4399     07E0                     i1l181:
  4400     07E0  0008               	return
  4401     07E1                     __end_ofi1_LCD_data:
  4402                           
  4403                           	psect	text26
  4404     0FCC                     __ptext26:	
  4405 ;; *************** function i1_LCD_clear *****************
  4406 ;; Defined at:
  4407 ;;		line 335 in file "env_esclavo.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;		None
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;		None
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      void 
  4414 ;; Registers used:
  4415 ;;		wreg, status,2, status,0, pclath, cstack
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMMON   BANK0   BANK1
  4421 ;;      Params:         0       0       0
  4422 ;;      Locals:         0       0       0
  4423 ;;      Temps:          0       2       0
  4424 ;;      Totals:         0       2       0
  4425 ;;Total ram usage:        2 bytes
  4426 ;; Hardware stack levels used: 1
  4427 ;; Hardware stack levels required when called: 1
  4428 ;; This function calls:
  4429 ;;		i1_LCD_command
  4430 ;; This function is called by:
  4431 ;;		_ISR
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435     0FCC                     i1_LCD_clear:	
  4436                           ;psect for function i1_LCD_clear
  4437                           
  4438     0FCC                     i1l1796:	
  4439                           ;incstack = 0
  4440                           ; Regs used in i1_LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  4441                           
  4442                           
  4443                           ;env_esclavo.c: 336:     LCD_command(0x01);
  4444     0FCC  3001               	movlw	1
  4445     0FCD  118A  27E1  158A   	fcall	i1_LCD_command
  4446     0FD0                     i1l1798:
  4447                           
  4448                           ;env_esclavo.c: 337:     _delay((unsigned long)((2)*(4000000/4000.0)));
  4449     0FD0  3003               	movlw	3
  4450     0FD1  1283               	bcf	3,5	;RP0=0, select bank0
  4451     0FD2  1303               	bcf	3,6	;RP1=0, select bank0
  4452     0FD3  00A4               	movwf	??i1_LCD_clear+1
  4453     0FD4  3097               	movlw	151
  4454     0FD5  00A3               	movwf	??i1_LCD_clear
  4455     0FD6                     u235_27:
  4456     0FD6  0BA3               	decfsz	??i1_LCD_clear,f
  4457     0FD7  2FD6               	goto	u235_27
  4458     0FD8  0BA4               	decfsz	??i1_LCD_clear+1,f
  4459     0FD9  2FD6               	goto	u235_27
  4460     0FDA  0000               	nop
  4461     0FDB                     i1l187:
  4462     0FDB  0008               	return
  4463     0FDC                     __end_ofi1_LCD_clear:
  4464                           
  4465                           	psect	text27
  4466     07E1                     __ptext27:	
  4467 ;; *************** function i1_LCD_command *****************
  4468 ;; Defined at:
  4469 ;;		line 293 in file "env_esclavo.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;  command         1    wreg     unsigned char 
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;  command         1    2[BANK0 ] unsigned char 
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  1    wreg      void 
  4476 ;; Registers used:
  4477 ;;		wreg
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMMON   BANK0   BANK1
  4483 ;;      Params:         0       0       0
  4484 ;;      Locals:         0       1       0
  4485 ;;      Temps:          0       2       0
  4486 ;;      Totals:         0       3       0
  4487 ;;Total ram usage:        3 bytes
  4488 ;; Hardware stack levels used: 1
  4489 ;; This function calls:
  4490 ;;		Nothing
  4491 ;; This function is called by:
  4492 ;;		i1_LCD_clear
  4493 ;;		i1_LCD_setCursor
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           
  4497     07E1                     i1_LCD_command:	
  4498                           ;psect for function i1_LCD_command
  4499                           
  4500                           
  4501                           ;incstack = 0
  4502                           ; Regs used in i1_LCD_command: [wreg]
  4503                           ;i1LCD_command@command stored from wreg
  4504     07E1  1283               	bcf	3,5	;RP0=0, select bank0
  4505     07E2  1303               	bcf	3,6	;RP1=0, select bank0
  4506     07E3  00A2               	movwf	i1LCD_command@command
  4507     07E4                     i1l1560:
  4508                           
  4509                           ;env_esclavo.c: 294:     RA0 = 0;
  4510     07E4  1005               	bcf	5,0	;volatile
  4511                           
  4512                           ;env_esclavo.c: 295:     RA1 = 0;
  4513     07E5  1085               	bcf	5,1	;volatile
  4514     07E6                     i1l1562:
  4515                           
  4516                           ;env_esclavo.c: 296:     PORTB = command;
  4517     07E6  0822               	movf	i1LCD_command@command,w
  4518     07E7  0086               	movwf	6	;volatile
  4519     07E8                     i1l1564:
  4520                           
  4521                           ;env_esclavo.c: 297:     RA2 = 1;
  4522     07E8  1505               	bsf	5,2	;volatile
  4523                           
  4524                           ;env_esclavo.c: 298:     _delay((unsigned long)((2)*(4000000/4000.0)));
  4525     07E9  3003               	movlw	3
  4526     07EA  1283               	bcf	3,5	;RP0=0, select bank0
  4527     07EB  1303               	bcf	3,6	;RP1=0, select bank0
  4528     07EC  00A1               	movwf	??i1_LCD_command+1
  4529     07ED  3097               	movlw	151
  4530     07EE  00A0               	movwf	??i1_LCD_command
  4531     07EF                     u236_27:
  4532     07EF  0BA0               	decfsz	??i1_LCD_command,f
  4533     07F0  2FEF               	goto	u236_27
  4534     07F1  0BA1               	decfsz	??i1_LCD_command+1,f
  4535     07F2  2FEF               	goto	u236_27
  4536     07F3  0000               	nop
  4537     07F4                     i1l1566:
  4538                           
  4539                           ;env_esclavo.c: 299:     RA2 = 0;
  4540     07F4  1283               	bcf	3,5	;RP0=0, select bank0
  4541     07F5  1303               	bcf	3,6	;RP1=0, select bank0
  4542     07F6  1105               	bcf	5,2	;volatile
  4543     07F7                     i1l178:
  4544     07F7  0008               	return
  4545     07F8                     __end_ofi1_LCD_command:
  4546                           
  4547                           	psect	text28
  4548     06C3                     __ptext28:	
  4549 ;; *************** function i1_I2C_Master_Init *****************
  4550 ;; Defined at:
  4551 ;;		line 424 in file "env_esclavo.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;  c               4   14[BANK0 ] const unsigned long 
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;		None
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      void 
  4558 ;; Registers used:
  4559 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1
  4565 ;;      Params:         0       4       0
  4566 ;;      Locals:         0       0       0
  4567 ;;      Temps:          0       4       0
  4568 ;;      Totals:         0       8       0
  4569 ;;Total ram usage:        8 bytes
  4570 ;; Hardware stack levels used: 1
  4571 ;; Hardware stack levels required when called: 1
  4572 ;; This function calls:
  4573 ;;		i1___lldiv
  4574 ;; This function is called by:
  4575 ;;		_ISR
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579     06C3                     i1_I2C_Master_Init:	
  4580                           ;psect for function i1_I2C_Master_Init
  4581                           
  4582     06C3                     i1l1818:	
  4583                           ;incstack = 0
  4584                           ; Regs used in i1_I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4585                           
  4586                           
  4587                           ;env_esclavo.c: 425:     SSPCON = 0b00101000;
  4588     06C3  3028               	movlw	40
  4589     06C4  1283               	bcf	3,5	;RP0=0, select bank0
  4590     06C5  1303               	bcf	3,6	;RP1=0, select bank0
  4591     06C6  0094               	movwf	20	;volatile
  4592     06C7                     i1l1820:
  4593                           
  4594                           ;env_esclavo.c: 426:    SSPADD = (unsigned char)((4000000 / (4 * c)) - 1);
  4595     06C7  082E               	movf	i1I2C_Master_Init@c,w
  4596     06C8  00B2               	movwf	??i1_I2C_Master_Init
  4597     06C9  082F               	movf	i1I2C_Master_Init@c+1,w
  4598     06CA  00B3               	movwf	??i1_I2C_Master_Init+1
  4599     06CB  0830               	movf	i1I2C_Master_Init@c+2,w
  4600     06CC  00B4               	movwf	??i1_I2C_Master_Init+2
  4601     06CD  0831               	movf	i1I2C_Master_Init@c+3,w
  4602     06CE  00B5               	movwf	??i1_I2C_Master_Init+3
  4603     06CF  3002               	movlw	2
  4604     06D0                     u149_25:
  4605     06D0  1003               	clrc
  4606     06D1  0DB2               	rlf	??i1_I2C_Master_Init,f
  4607     06D2  0DB3               	rlf	??i1_I2C_Master_Init+1,f
  4608     06D3  0DB4               	rlf	??i1_I2C_Master_Init+2,f
  4609     06D4  0DB5               	rlf	??i1_I2C_Master_Init+3,f
  4610     06D5                     u149_20:
  4611     06D5  3EFF               	addlw	-1
  4612     06D6  1D03               	skipz
  4613     06D7  2ED0               	goto	u149_25
  4614     06D8  0835               	movf	??i1_I2C_Master_Init+3,w
  4615     06D9  00A3               	movwf	i1___lldiv@divisor+3
  4616     06DA  0834               	movf	??i1_I2C_Master_Init+2,w
  4617     06DB  00A2               	movwf	i1___lldiv@divisor+2
  4618     06DC  0833               	movf	??i1_I2C_Master_Init+1,w
  4619     06DD  00A1               	movwf	i1___lldiv@divisor+1
  4620     06DE  0832               	movf	??i1_I2C_Master_Init,w
  4621     06DF  00A0               	movwf	i1___lldiv@divisor
  4622     06E0  3000               	movlw	0
  4623     06E1  00A7               	movwf	i1___lldiv@dividend+3
  4624     06E2  303D               	movlw	61
  4625     06E3  00A6               	movwf	i1___lldiv@dividend+2
  4626     06E4  3009               	movlw	9
  4627     06E5  00A5               	movwf	i1___lldiv@dividend+1
  4628     06E6  3000               	movlw	0
  4629     06E7  00A4               	movwf	i1___lldiv@dividend
  4630     06E8  118A  24D0  118A   	fcall	i1___lldiv
  4631     06EB  1283               	bcf	3,5	;RP0=0, select bank0
  4632     06EC  1303               	bcf	3,6	;RP1=0, select bank0
  4633     06ED  0820               	movf	?i1___lldiv,w
  4634     06EE  3EFF               	addlw	255
  4635     06EF  1683               	bsf	3,5	;RP0=1, select bank1
  4636     06F0  1303               	bcf	3,6	;RP1=0, select bank1
  4637     06F1  0093               	movwf	19	;volatile
  4638     06F2                     i1l1822:
  4639                           
  4640                           ;env_esclavo.c: 428:     SSPSTAT = 0x00;
  4641     06F2  0194               	clrf	20	;volatile
  4642     06F3                     i1l1824:
  4643                           
  4644                           ;env_esclavo.c: 429:     TRISC3 = 1;
  4645     06F3  1587               	bsf	7,3	;volatile
  4646     06F4                     i1l1826:
  4647                           
  4648                           ;env_esclavo.c: 430:     TRISC4 = 1;
  4649     06F4  1607               	bsf	7,4	;volatile
  4650     06F5                     i1l229:
  4651     06F5  0008               	return
  4652     06F6                     __end_ofi1_I2C_Master_Init:
  4653                           
  4654                           	psect	text29
  4655     04D0                     __ptext29:	
  4656 ;; *************** function i1___lldiv *****************
  4657 ;; Defined at:
  4658 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  divisor         4    0[BANK0 ] unsigned long 
  4661 ;;  dividend        4    4[BANK0 ] unsigned long 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  quotient        4    9[BANK0 ] unsigned long 
  4664 ;;  counter         1   13[BANK0 ] unsigned char 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  4    0[BANK0 ] unsigned long 
  4667 ;; Registers used:
  4668 ;;		wreg, status,2, status,0, btemp+1
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMMON   BANK0   BANK1
  4674 ;;      Params:         0       8       0
  4675 ;;      Locals:         0       5       0
  4676 ;;      Temps:          0       1       0
  4677 ;;      Totals:         0      14       0
  4678 ;;Total ram usage:       14 bytes
  4679 ;; Hardware stack levels used: 1
  4680 ;; This function calls:
  4681 ;;		Nothing
  4682 ;; This function is called by:
  4683 ;;		i1_I2C_Master_Init
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687     04D0                     i1___lldiv:	
  4688                           ;psect for function i1___lldiv
  4689                           
  4690     04D0                     i1l1576:	
  4691                           ;incstack = 0
  4692                           ; Regs used in i1___lldiv: [wreg+status,2+status,0+btemp+1]
  4693                           
  4694     04D0  3000               	movlw	0
  4695     04D1  1283               	bcf	3,5	;RP0=0, select bank0
  4696     04D2  1303               	bcf	3,6	;RP1=0, select bank0
  4697     04D3  00AC               	movwf	i1___lldiv@quotient+3
  4698     04D4  3000               	movlw	0
  4699     04D5  00AB               	movwf	i1___lldiv@quotient+2
  4700     04D6  3000               	movlw	0
  4701     04D7  00AA               	movwf	i1___lldiv@quotient+1
  4702     04D8  3000               	movlw	0
  4703     04D9  00A9               	movwf	i1___lldiv@quotient
  4704     04DA  0823               	movf	i1___lldiv@divisor+3,w
  4705     04DB  0422               	iorwf	i1___lldiv@divisor+2,w
  4706     04DC  0421               	iorwf	i1___lldiv@divisor+1,w
  4707     04DD  0420               	iorwf	i1___lldiv@divisor,w
  4708     04DE  1903               	skipnz
  4709     04DF  2CE1               	goto	u105_21
  4710     04E0  2CE2               	goto	u105_20
  4711     04E1                     u105_21:
  4712     04E1  2D2F               	goto	i1l1598
  4713     04E2                     u105_20:
  4714     04E2                     i1l1578:
  4715     04E2  01AD               	clrf	i1___lldiv@counter
  4716     04E3  0AAD               	incf	i1___lldiv@counter,f
  4717     04E4  2CF2               	goto	i1l1584
  4718     04E5                     i1l1580:
  4719     04E5  3001               	movlw	1
  4720     04E6  00A8               	movwf	??i1___lldiv
  4721     04E7                     u106_25:
  4722     04E7  1003               	clrc
  4723     04E8  0DA0               	rlf	i1___lldiv@divisor,f
  4724     04E9  0DA1               	rlf	i1___lldiv@divisor+1,f
  4725     04EA  0DA2               	rlf	i1___lldiv@divisor+2,f
  4726     04EB  0DA3               	rlf	i1___lldiv@divisor+3,f
  4727     04EC  0BA8               	decfsz	??i1___lldiv,f
  4728     04ED  2CE7               	goto	u106_25
  4729     04EE                     i1l1582:
  4730     04EE  3001               	movlw	1
  4731     04EF  00FF               	movwf	btemp+1
  4732     04F0  087F               	movf	btemp+1,w
  4733     04F1  07AD               	addwf	i1___lldiv@counter,f
  4734     04F2                     i1l1584:
  4735     04F2  1FA3               	btfss	i1___lldiv@divisor+3,7
  4736     04F3  2CF5               	goto	u107_21
  4737     04F4  2CF6               	goto	u107_20
  4738     04F5                     u107_21:
  4739     04F5  2CE5               	goto	i1l1580
  4740     04F6                     u107_20:
  4741     04F6                     i1l1586:
  4742     04F6  3001               	movlw	1
  4743     04F7  00A8               	movwf	??i1___lldiv
  4744     04F8                     u108_25:
  4745     04F8  1003               	clrc
  4746     04F9  0DA9               	rlf	i1___lldiv@quotient,f
  4747     04FA  0DAA               	rlf	i1___lldiv@quotient+1,f
  4748     04FB  0DAB               	rlf	i1___lldiv@quotient+2,f
  4749     04FC  0DAC               	rlf	i1___lldiv@quotient+3,f
  4750     04FD  0BA8               	decfsz	??i1___lldiv,f
  4751     04FE  2CF8               	goto	u108_25
  4752     04FF                     i1l1588:
  4753     04FF  0823               	movf	i1___lldiv@divisor+3,w
  4754     0500  0227               	subwf	i1___lldiv@dividend+3,w
  4755     0501  1D03               	skipz
  4756     0502  2D0D               	goto	u109_25
  4757     0503  0822               	movf	i1___lldiv@divisor+2,w
  4758     0504  0226               	subwf	i1___lldiv@dividend+2,w
  4759     0505  1D03               	skipz
  4760     0506  2D0D               	goto	u109_25
  4761     0507  0821               	movf	i1___lldiv@divisor+1,w
  4762     0508  0225               	subwf	i1___lldiv@dividend+1,w
  4763     0509  1D03               	skipz
  4764     050A  2D0D               	goto	u109_25
  4765     050B  0820               	movf	i1___lldiv@divisor,w
  4766     050C  0224               	subwf	i1___lldiv@dividend,w
  4767     050D                     u109_25:
  4768     050D  1C03               	skipc
  4769     050E  2D10               	goto	u109_21
  4770     050F  2D11               	goto	u109_20
  4771     0510                     u109_21:
  4772     0510  2D20               	goto	i1l1594
  4773     0511                     u109_20:
  4774     0511                     i1l1590:
  4775     0511  0820               	movf	i1___lldiv@divisor,w
  4776     0512  02A4               	subwf	i1___lldiv@dividend,f
  4777     0513  0821               	movf	i1___lldiv@divisor+1,w
  4778     0514  1C03               	skipc
  4779     0515  0F21               	incfsz	i1___lldiv@divisor+1,w
  4780     0516  02A5               	subwf	i1___lldiv@dividend+1,f
  4781     0517  0822               	movf	i1___lldiv@divisor+2,w
  4782     0518  1C03               	skipc
  4783     0519  0F22               	incfsz	i1___lldiv@divisor+2,w
  4784     051A  02A6               	subwf	i1___lldiv@dividend+2,f
  4785     051B  0823               	movf	i1___lldiv@divisor+3,w
  4786     051C  1C03               	skipc
  4787     051D  0F23               	incfsz	i1___lldiv@divisor+3,w
  4788     051E  02A7               	subwf	i1___lldiv@dividend+3,f
  4789     051F                     i1l1592:
  4790     051F  1429               	bsf	i1___lldiv@quotient,0
  4791     0520                     i1l1594:
  4792     0520  3001               	movlw	1
  4793     0521                     u110_25:
  4794     0521  1003               	clrc
  4795     0522  0CA3               	rrf	i1___lldiv@divisor+3,f
  4796     0523  0CA2               	rrf	i1___lldiv@divisor+2,f
  4797     0524  0CA1               	rrf	i1___lldiv@divisor+1,f
  4798     0525  0CA0               	rrf	i1___lldiv@divisor,f
  4799     0526  3EFF               	addlw	-1
  4800     0527  1D03               	skipz
  4801     0528  2D21               	goto	u110_25
  4802     0529                     i1l1596:
  4803     0529  3001               	movlw	1
  4804     052A  02AD               	subwf	i1___lldiv@counter,f
  4805     052B  1D03               	btfss	3,2
  4806     052C  2D2E               	goto	u111_21
  4807     052D  2D2F               	goto	u111_20
  4808     052E                     u111_21:
  4809     052E  2CF6               	goto	i1l1586
  4810     052F                     u111_20:
  4811     052F                     i1l1598:
  4812     052F  082C               	movf	i1___lldiv@quotient+3,w
  4813     0530  00A3               	movwf	?i1___lldiv+3
  4814     0531  082B               	movf	i1___lldiv@quotient+2,w
  4815     0532  00A2               	movwf	?i1___lldiv+2
  4816     0533  082A               	movf	i1___lldiv@quotient+1,w
  4817     0534  00A1               	movwf	?i1___lldiv+1
  4818     0535  0829               	movf	i1___lldiv@quotient,w
  4819     0536  00A0               	movwf	?i1___lldiv
  4820     0537                     i1l366:
  4821     0537  0008               	return
  4822     0538                     __end_ofi1___lldiv:
  4823     007E                     btemp	set	126	;btemp
  4824     007E                     wtemp0	set	126
  4825                           
  4826                           	psect	config
  4827                           
  4828                           ;Config register CONFIG @ 0x2007
  4829                           ;	Oscillator Selection bits
  4830                           ;	FOSC = XT, XT oscillator
  4831                           ;	Watchdog Timer Enable bit
  4832                           ;	WDTE = OFF, WDT disabled
  4833                           ;	Power-up Timer Enable bit
  4834                           ;	PWRTE = OFF, PWRT disabled
  4835                           ;	Brown-out Reset Enable bit
  4836                           ;	BOREN = ON, BOR enabled
  4837                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4838                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4839                           ;	Data EEPROM Memory Code Protection bit
  4840                           ;	CPD = OFF, Data EEPROM code protection off
  4841                           ;	Flash Program Memory Write Enable bits
  4842                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4843                           ;	In-Circuit Debugger Mode bit
  4844                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6 and RB7 are general purpose I/O pins
  4845                           ;	Flash Program Memory Code Protection bit
  4846                           ;	CP = OFF, Code protection off
  4847     2007                     	org	8199
  4848     2007  3F79               	dw	16249

Data Sizes:
    Strings     51
    Constant    16
    Data        1
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     35      64
    BANK1            94     29      45

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(1) Largest target is 4
		 -> asciiValue(BANK0[4]), 

    LCD_print@string	PTR const unsigned char  size(2) Largest target is 16
		 -> displayString(BANK0[16]), ISR@receiveBuffer(BANK1[16]), STR_1(CODE[7]), STR_2(CODE[16]), 
		 -> STR_3(CODE[15]), STR_4(CODE[13]), 

    memset@dest	PTR void  size(1) Largest target is 16
		 -> displayString(BANK0[16]), 

    memset@p	PTR unsigned char  size(1) Largest target is 16
		 -> displayString(BANK0[16]), 

    Send_Message_To_Master@message	PTR unsigned char  size(1) Largest target is 16
		 -> displayString(BANK0[16]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> displayString(BANK0[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_clear
    _main->_LCD_init
    _main->_LCD_print
    _Handle_Keypress->_LCD_clear
    _Handle_Keypress->_LCD_init
    _Handle_Keypress->_LCD_print
    _atoi->___wmul
    _Send_Message_To_Master->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _LCD_setCursor->_LCD_command
    _LCD_print->_LCD_data
    _LCD_init->_LCD_command
    _LCD_clear->_LCD_command

Critical Paths under _ISR in BANK0

    _ISR->i1_I2C_Master_Init
    i1_LCD_setCursor->i1_LCD_command
    i1_LCD_print->i1_LCD_data
    i1_LCD_clear->i1_LCD_command
    i1_I2C_Master_Init->i1___lldiv

Critical Paths under _main in BANK1

    _main->_Handle_Keypress
    _Handle_Keypress->_Send_Message_To_Master
    _atoi->___wmul
    _Send_Message_To_Master->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    5771
                                             28 BANK1      1     1      0
                    _Handle_Keypress
                     _I2C_Slave_Init
                          _LCD_clear
                           _LCD_init
                          _LCD_print
                      _LCD_setCursor
                _Prepare_Keypad_Pins
                        _Read_Keypad
 ---------------------------------------------------------------------------------
 (1) _Read_Keypad                                          6     6      0     291
                                             30 BANK0      2     2      0
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Prepare_Keypad_Pins                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Handle_Keypress                                     10    10      0    3974
                                             18 BANK1     10    10      0
                          _LCD_clear
                           _LCD_init
                          _LCD_print
                      _LCD_setCursor
                   _Prepare_LCD_Pins
             _Send_Message_To_Master
                               _atoi
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     2      4     353
                                             30 BANK0      4     0      4
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2     686
                                              2 BANK1      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                             30 BANK0      4     0      4
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Send_Message_To_Master                               1     1      0     760
                                             17 BANK1      1     1      0
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       1     1      0      31
                                             30 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      31
                                             30 BANK0      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Init                                      8     4      4     597
                                             31 BANK0      4     0      4
                                             13 BANK1      4     4      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     421
                                             30 BANK0      1     1      0
                                              0 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (2) _Prepare_LCD_Pins                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_setCursor                                        5     4      1     782
                                             33 BANK0      1     0      1
                                              0 BANK1      4     4      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (1) _LCD_print                                            2     0      2     566
                                             33 BANK0      2     0      2
                           _LCD_data
 ---------------------------------------------------------------------------------
 (2) _LCD_data                                             3     3      0      31
                                             30 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      31
                                             33 BANK0      2     2      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            2     2      0      31
                                             33 BANK0      2     2      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (2) _LCD_command                                          3     3      0      31
                                             30 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  8     8      0     640
                                             22 BANK0      8     8      0
                  i1_I2C_Master_Init
                        i1_LCD_clear
                        i1_LCD_print
                    i1_LCD_setCursor
 ---------------------------------------------------------------------------------
 (6) i1_LCD_setCursor                                      5     4      1     192
                                              3 BANK0      5     4      1
                      i1_LCD_command
 ---------------------------------------------------------------------------------
 (6) i1_LCD_print                                          2     0      2     119
                                              3 BANK0      2     0      2
                         i1_LCD_data
 ---------------------------------------------------------------------------------
 (7) i1_LCD_data                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) i1_LCD_clear                                          2     2      0      22
                                              3 BANK0      2     2      0
                      i1_LCD_command
 ---------------------------------------------------------------------------------
 (7) i1_LCD_command                                        3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) i1_I2C_Master_Init                                    8     4      4     262
                                             14 BANK0      8     4      4
                          i1___lldiv
 ---------------------------------------------------------------------------------
 (7) i1___lldiv                                           14     6      8     214
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Handle_Keypress
     _LCD_clear
       _LCD_command
     _LCD_init
       _LCD_command
     _LCD_print
       _LCD_data
     _LCD_setCursor
       _LCD_command
     _Prepare_LCD_Pins
     _Send_Message_To_Master
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _I2C_Slave_Init
     _atoi
       ___wmul
     _memset
   _I2C_Slave_Init
   _LCD_clear
   _LCD_init
   _LCD_print
   _LCD_setCursor
   _Prepare_Keypad_Pins
   _Read_Keypad

 _ISR (ROOT)
   i1_I2C_Master_Init
     i1___lldiv
   i1_LCD_clear
     i1_LCD_command
   i1_LCD_print
     i1_LCD_data
   i1_LCD_setCursor
     i1_LCD_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               5E     1D      2D       6       47.9%
BITBANK1            5E      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               5E     23      40       4       68.1%
BITBANK0            5E      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6D       8        0.0%
ABS                  0      0      6D       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon May 06 21:03:30 2024

          ?_Prepare_Keypad_Pins 0020                               pc 0002                     _SSPSTATbits 0094  
                            fsr 0004             ___wmul@multiplicand 0040                             l200 073D  
                           l203 0F9C                             l124 00E5                             l220 0FB3  
                           l232 0FA3                             l152 0FFF                             l216 0387  
                           l217 03D3                             l226 0616                             l330 066B  
                           l235 0FAA                             l139 0163                             l244 0FCB  
                           l332 068C                             l181 07B2                             l229 0655  
                           l149 026D                             l238 0FBE                             l184 05D7  
                           l193 0771                             l178 07C9                             l194 077F  
                           l187 0FEB                             l366 04CF                             l802 0457  
                           l808 071B                             _GIE 005F                             _RA0 0028  
                           _RA1 0029                             _RA2 002A                             _PEN 048A  
                           _ISR 026E                             _SEN 0488                             fsr0 0004  
                           indf 0000                            ?_ISR 0020                            l2000 058F  
                          l2010 05B9                            l2002 0590                            l2012 05C8  
                          l2004 059B                            l2020 0763                            l2100 0FAB  
                          l2014 05CC                            l2006 059F                            l2030 071C  
                          l2022 0768                            l2110 034D                            l2102 0329  
                          l2016 0FDC                            l2008 05AE                            l2032 071D  
                          l2024 076D                            l2040 03DB                            l2200 00F2  
                          l2120 035F                            l2112 0351                            l2104 032D  
                          l2018 0FE0                            l2034 0727                            l2026 0773  
                          l2050 03FD                            l2042 03DF                            l2210 010B  
                          l2202 00F5                            l2130 039A                            l2114 035B  
                          l2036 072F                            l2028 077B                            l2060 0437  
                          l2052 0402                            l2044 03E8                            l2220 0139  
                          l2212 0118                            l2204 00FB                            l2124 0374  
                          l2108 033B                            l2300 06A7                            l2070 05DB  
                          l2062 0442                            l2046 03F3                            l2038 03D7  
                          l2230 017F                            l2222 013D                            l2214 011F  
                          l2206 0102                            l2150 0034                            l2126 0388  
                          l2134 03B2                            l2142 03D2                            l2302 06AE  
                          l2080 05F7                            l2072 05DE                            l2064 0447  
                          l2056 040B                            l2048 03FB                            l2240 01A5  
                          l2224 014C                            l2216 0125                            l2232 0185  
                          l2208 0105                            l2160 0071                            l2152 003C  
                          l2136 03BA                            l2128 0393                            l2304 06B1  
                          l2082 05FD                            l2074 05E9                            l2066 0453  
                          l2090 06F9                            l2250 01CA                            l2242 01A8  
                          l2234 018B                            l2226 015B                            l2218 012C  
                          l2170 0097                            l2162 0078                            l2154 0046  
                          l2146 002A                            l2138 03C7                            l2306 06B7  
                          l2084 0607                            l2076 05EC                            l2092 06FC  
                          l2260 01EC                            l2252 01D1                            l2244 01AF  
                          l2236 019A                            l2228 0170                            l2180 00BB  
                          l2172 009F                            l2164 0085                            l2156 0053  
                          l2148 002D                            l2308 06BC                            l2086 060E  
                          l2078 05F1                            l2094 0705                            l2270 0215  
                          l2254 01DA                            l2246 01B8                            l2238 01A1  
                          l2262 01EE                            l2190 00D2                            l2182 00BC  
                          l2174 00A3                            l2166 0087                            l2158 0062  
                          l2088 0612                            l2096 070B                            l2280 0245  
                          l2272 0222                            l2264 01F3                            l2256 01DD  
                          l2248 01C7                            l2192 00DA                            l2176 00B0  
                          l2168 008F                            l2184 00BE                            l2098 0F99  
                          l2290 025C                            l2282 024B                            l2274 0228  
                          l2266 01F9                            l2258 01E8                            l2194 00E0  
                          l2186 00C4                            l2178 00B8                            l1900 0FBF  
                          l2292 0265                            l2284 024F                            l2276 0235  
                          l2268 0208                            l2188 00CA                            l2196 00E6  
                          l1910 046D                            l1902 0FBF                            l2286 0252  
                          l2278 023F                            l2198 00EE                            l2294 068D  
                          l1920 04A9                            l1912 047C                            l1904 0FC7  
                          l2288 0255                            l2296 0697                            l1922 04B7  
                          l1914 0482                            l1906 0458                            l2298 069E  
                          l1924 04B8                            l1916 0486                            l1908 046A  
                          l1940 0FFC                            l1932 0FEF                            l1926 04C1  
                          l1918 0495                            l1950 0652                            l1942 0FFD  
                          l1934 0FF7                            l1960 07BA                            l1928 04C7  
                          l1952 0653                            l1944 0FFE                            l1936 0FFA  
                          l1962 07C6                            l1970 07AF                            l1954 0654  
                          l1946 0617                            l1938 0FFB                            l1956 07B6  
                          l1964 079F                            l1948 061B                            l1972 0F9D  
                          l1980 0FA4                            l1958 07B8                            l1966 07A1  
                          l1974 0FA0                            l1982 0FA7                            l1990 0673  
                          l1968 07A3                            l1976 0FB7                            l1992 067A  
                          l1984 0656                            l1978 0FBA                            l1994 0680  
                          l1986 065A                            l1988 065F                            l1998 058B  
                          STR_1 0584                            STR_2 0558                            STR_3 0568  
                          STR_4 0577                    ?_LCD_command 0020                            u2000 00C4  
                          u2001 00C3                            u2010 00CA                            u2011 00C9  
                          u2100 015B                            u2020 00D2                            u2101 015A  
                          u2021 00D1                            u2110 0170                            u2030 00EE  
                          u2111 016F                            u2031 00ED                            u2120 017F  
                          u2040 00FB                            u2200 06BC                            u2121 017E  
                          u2105 0157                            u2041 00FA                            u2201 06BB  
                          u2130 018B                            u2050 0102                            u2131 018A  
                          u2115 016C                            u2051 0101                            u2140 019A  
                          u2060 010B                            u2141 0199                            u2125 017B  
                          u2061 010A                            u2150 01F3                            u2070 0118  
                          u2151 01F2                            u2071 0117                            u1600 0FC7  
                          u2160 01F9                            u2080 0125                            u1601 0FC6  
                          u2161 01F8                            u2145 0196                            u2081 0124  
                          u2217 0357                            u1610 0FCB                            u2170 0208  
                          u2090 014C                            u2307 0FE6                            u1611 0FCA  
                          u2171 0207                            u2091 014B                            u2075 0114  
                          u2227 038E                            u1620 046A                            u1700 065F  
                          u2180 0235                            u2317 07C1                            u1621 0469  
                          u1701 065E                            u2181 0234                            u2237 01C0  
                          u2190 06AE                            u2247 07AA                            u2175 0204  
                          u2095 0148                            u2191 06AD                            u1640 0486  
                          u1800 0442                            u2257 0597                            u1641 0485  
                          u1801 0441                            u2185 0231                            u1730 0680  
                          u1810 0447                            u2267 05A5                            u1635 0471  
                          u1731 067F                            u1715 066D                            u1811 0446  
                          u1740 0768                            u1660 04A9                            u1820 0607  
                          u2277 05B4                            u1741 0767                            u1661 04A8  
                          u1821 0606                            u1725 0674                            u1750 073D  
                          u1830 071B                            u1910 03C7                            u2287 05C3  
                          u1751 073C                            u1655 048A                            u1831 071A  
                          u1911 03C6                            u1680 04C7                            u1760 03E8  
                          u1920 0034                            u1840 033A                            u2297 05D2  
                          u1681 04C6                            u1665 04A5                            u1761 03E7  
                          u1921 0033                            u1905 039F                            u1841 0339  
                          u1690 0637                            u1770 03F3                            u1930 003C  
                          u1675 04B9                            u1771 03F2                            u1931 003B  
                          u1915 03C3                            u1780 03FB                            u1940 0053  
                          u1781 03FA                            u1941 0052                            u1845 0336  
                          u1790 040A                            u1950 0062                            u1870 0374  
                          u1854 0347                            u1695 0632                            u1791 0409  
                          u1951 0061                            u1871 0373                            u1855 0345  
                          u1960 0071                            u1864 036B                            u1961 0070  
                          u1945 004F                            u1865 0369                            u1970 008F  
                          u1890 0387                            u1971 008E                            u1955 005E  
                          u1891 0386                            _PEIE 005E                            u1980 009F  
                          u1884 037E                            u1981 009E                            u1965 006D  
                          u1885 037C                            u1990 00B0                            u1991 00AF  
                          u1995 00AC                     ?i1_LCD_data 0020                            _atoi 03D4  
             i1___lldiv@divisor 0020                            _main 068D                            btemp 007E  
             i1___lldiv@counter 002D               i1LCD_print@string 0023               ??i1_LCD_setCursor 0000  
                          start 0011  __end_of_Send_Message_To_Master 0617           ??_Prepare_Keypad_Pins 0000  
                         ??_ISR 0036                   ??_Read_Keypad 003E                ?_I2C_Master_Init 003F  
              ?_I2C_Master_Wait 0020                ?_I2C_Master_Stop 0020                __end_of_LCD_data 07B3  
              __end_of_LCD_init 05D8                           ?_atoi 00A2                           ?_main 0020  
               __end_of___lldiv 04D0              Handle_Keypress@key 00BB                           i1l200 075F  
                         i1l170 031C                           i1l229 06F5                           i1l181 07E0  
                         i1l175 031F                           i1l168 0284                           i1l193 0791  
                         i1l178 07F7                           i1l194 079B                           i1l187 0FDB  
                         i1l366 0537                           _PORTB 0006                    ?i1_LCD_clear 0020  
                         _TRISA 0085                           _TRISB 0086                           _SSPIE 0463  
                         _SSPIF 0063                    ?i1_LCD_print 0023              i1___lldiv@dividend 0024  
                         atoi@n 00A7                           atoi@s 00A9                           pclath 000A  
                         status 0003                           wtemp0 007E                 __initialization 0013  
                  __end_of_atoi 0458                    __end_of_main 06C3              i1___lldiv@quotient 0029  
                        ??_atoi 00A4                          ??_main 0000                   _LCD_setCursor 0760  
             ??_Handle_Keypress 00B2             __end_of_Read_Keypad 03D4               ?_I2C_Master_Start 0020  
             ?_I2C_Master_Write 0020               __end_of_LCD_clear 0FEC               __end_of_LCD_print 073E  
            ??_I2C_Master_Start 0000                          _ADCON1 009F              ??_I2C_Master_Write 0000  
              _Prepare_LCD_Pins 0F99                          u110_25 0521                          u111_20 052F  
                        u111_21 052E                          u105_20 04E2                          i1l1560 07E4  
                        i1l1800 0783                          u105_21 04E1                          i1l1562 07E6  
                        i1l1570 07CF                          i1l1810 073E                          i1l1802 0788  
                        i1l1580 04E5                          i1l1820 06C7                          i1l1564 07E8  
                        i1l1572 07D1                          i1l1812 073F                          i1l1804 078D  
                        i1l1590 0511                          i1l1582 04EE                          i1l1822 06F2  
                        i1l1566 07F4                          i1l1574 07DD                          i1l1814 0749  
                        i1l1806 0793                          i1l1592 051F                          i1l1584 04F2  
                        i1l1576 04D0                          i1l1824 06F3                          i1l1568 07CD  
                        i1l1816 0751                          i1l1808 0797                          i1l1594 0520  
                        i1l1586 04F6                          i1l1578 04E2                          i1l1826 06F4  
                        i1l1818 06C3                          i1l1850 0275                          i1l1596 0529  
                        i1l1588 04FF                          i1l1860 029B                          i1l1852 027B  
                        i1l1844 026E                          u106_25 04E7                          i1l1598 052F  
                        i1l1870 02B9                          i1l1862 02A3                          i1l1854 027F  
                        i1l1846 0272                          u107_20 04F6                          i1l1880 02D2  
                        i1l1872 02BC                          i1l1864 02A9                          i1l1856 0288  
                        i1l1848 0274                          u107_21 04F5                          i1l1890 0303  
                        i1l1882 02E1                          i1l1874 02C3                          i1l1866 02AE  
                        i1l1858 028C                          i1l1796 0FCC                          i1l1892 0306  
                        i1l1884 02E4                          i1l1876 02CC                          i1l1868 02B5  
                        i1l1798 0FD0                          i1l1894 030D                          i1l1886 02EB  
                        i1l1878 02D0                          i1l1896 0310                          i1l1888 02F4  
                        i1l1898 031C                          u108_25 04F8                          u109_20 0511  
                        u109_21 0510                          u109_25 050D                          u152_20 0272  
                        u152_21 0271                          u232_27 02DA                          u153_20 027B  
                        u153_21 027A                          u233_27 02FC                          u154_20 027F  
                        u154_21 027E                          u234_27 07D8                          u147_20 0788  
                        u155_20 0288                          u147_21 0787                          u155_21 0287  
                        u235_27 0FD6                          u148_20 075F                          u156_20 028C  
                        u148_21 075E                          u156_21 028B                          u236_27 07EF  
                        u149_20 06D5                          u157_20 029B                          u157_21 029A  
                        u149_25 06D0                          u157_25 0297                          u158_20 02AE  
                        u158_21 02AD                          u159_20 02B5                          u159_21 02B4  
                        _SSPADD 0093                          _TRISC3 043B                          _TRISC4 043C  
                        _SSPCON 0014                          _SSPBUF 0013                          ___wmul 0656  
                     ??___lldiv 003E                          _memset 06F6                    LCD_data@data 0040  
                        _teclas 0548                  ?_LCD_setCursor 0041               __end_ofi1___lldiv 0538  
                        saved_w 007E         __end_of__initialization 0024                       ?_LCD_data 0020  
                     ?_LCD_init 0020                  __pcstackCOMMON 0000                    __pidataBANK0 0003  
                   _Read_Keypad 0329                  i1LCD_data@data 0022                 i1_LCD_setCursor 0780  
         I2C_Slave_Init@address 003E                      __pbssBANK0 0043                      __pbssBANK1 00BD  
                  ??i1_LCD_data 0020                   i1_LCD_command 07E1                      ??_LCD_data 003E  
                    ??_LCD_init 0041                         ISR@temp 003D                      __pmaintext 068D  
                       ?___wmul 003E                      _asciiValue 005B                      __pintentry 0004  
               ??_LCD_setCursor 0000                         ?_memset 003E            Handle_Keypress@i_301 00B7  
          Handle_Keypress@i_298 00BA              __end_ofi1_LCD_data 07E1                         _SSPCON2 0091  
                       _SSPSTAT 0094                      __stringtab 0538                  ?i1_LCD_command 0020  
   __end_of_Prepare_Keypad_Pins 0FB4           i1LCD_setCursor@column 0023                 _Handle_Keypress 0027  
                       ___lldiv 0458        __end_of_Prepare_LCD_Pins 0F9D         __end_ofi1_LCD_setCursor 079C  
                       __ptext1 0329                         __ptext2 0FAB                         __ptext3 0027  
                       __ptext4 06F6                         __ptext5 03D4                         __ptext6 0656  
                       __ptext7 05D8                         __ptext8 0FEC                         __ptext9 0FB4  
             i1_I2C_Master_Init 06C3              ?i1_I2C_Master_Init 002E                         atoi@neg 00A6  
                       main@key 00BC                         clrloop0 07F9             ??i1_I2C_Master_Init 0032  
                     _LCD_clear 0FDC            end_of_initialization 0024               _LCD_setCursor$339 00A1  
                     _LCD_print 071C                         memset@c 003E                         memset@n 0040  
                       memset@p 00A1                 ___lldiv@divisor 00A0                 ___lldiv@counter 00AC  
               LCD_print@string 0041                  _I2C_Slave_Init 0FEC                I2C_Master_Init@c 003F  
     __end_ofi1_I2C_Master_Init 06F6                ISR@receiveBuffer 00BD                       _PORTAbits 0005  
                     _TRISAbits 0085                       i1___lldiv 04D0                 ??i1_LCD_command 0020  
                    ?_LCD_clear 0020        ??_Send_Message_To_Master 0000                      ?_LCD_print 0041  
       __end_of_Handle_Keypress 026E          __end_of_I2C_Slave_Init 1000   Send_Message_To_Master@message 00B1  
                  ?_Read_Keypad 0020                  __end_of___wmul 068D                ?i1_LCD_setCursor 0023  
                __end_of_memset 071C                  __end_of_teclas 0558             start_initialization 0013  
                   __end_of_ISR 0329                      ?i1___lldiv 0020                   ??_LCD_command 003E  
             ??_I2C_Master_Init 00AD               ??_I2C_Master_Wait 0000               ??_I2C_Master_Stop 0000  
               ?_I2C_Slave_Init 0020                        ??___wmul 0000                     __pdataBANK0 005F  
                      ??_memset 0000                      memset@dest 00A0                LCD_setCursor@row 00A0  
       i1LCD_setCursor@position 0027                   ??i1_LCD_clear 0023                   ??i1_LCD_print 0000  
                     ___latbits 0001                   __pcstackBANK0 0020                   __pcstackBANK1 00A0  
          i1LCD_command@command 0022                     ??_LCD_clear 0041                     ??_LCD_print 0000  
                     _charCount 0045              i1I2C_Master_Init@c 002E                ?_Handle_Keypress 0020  
              _I2C_Master_Start 0F9D                _I2C_Master_Write 0FB4             __end_of_LCD_command 07CA  
                      ISR@index 0043                       _asciiMode 004A                        ?___lldiv 00A0  
                   _asciiDigits 0049            I2C_Master_Write@data 003E           __end_of_LCD_setCursor 0780  
             ?_Prepare_LCD_Pins 0020                       __pstrings 0538              ??_Prepare_LCD_Pins 0000  
                _cursorPosition 0048                     _allow_input 0047                     ??i1___lldiv 0028  
           __end_ofi1_LCD_clear 0FDC             __end_ofi1_LCD_print 0760               interrupt_function 0004  
      Handle_Keypress@asciiCode 00B5                  ___wmul@product 00A0                        _LCD_data 079C  
                      _LCD_init 058B                       clear_ram0 07F8          _Send_Message_To_Master 05D8  
                   __stringbase 0547               ___wmul@multiplier 003E           LCD_setCursor@position 00A3  
              Handle_Keypress@i 00B9                     _LCD_command 07B3                        _i2c_role 005F  
            i1LCD_setCursor@row 0024             i1_LCD_setCursor$339 0025              __end_of__stringtab 0548  
                   i1_LCD_clear 0FCC                 _I2C_Master_Init 0617                 _I2C_Master_Wait 0FBF  
               _I2C_Master_Stop 0FA4                     i1_LCD_print 073E                        __ptext10 0FA4  
                      __ptext11 0F9D                        __ptext20 0FDC                        __ptext12 0FBF  
                      __ptext21 07B3                        __ptext13 0617                        __ptext22 026E  
                      __ptext14 0458                        __ptext23 0780                        __ptext15 0F99  
                      __ptext24 073E                        __ptext16 0760                        __ptext25 07CA  
                      __ptext17 071C                        __ptext26 0FCC                        __ptext18 079C  
                      __ptext27 07E1                        __ptext19 058B                        __ptext28 06C3  
                      __ptext29 04D0           __end_ofi1_LCD_command 07F8                ??_I2C_Slave_Init 0000  
      __end_of_I2C_Master_Start 0FA4        __end_of_I2C_Master_Write 0FBF              LCD_command@command 0040  
                      intlevel1 0000                      i1_LCD_data 07CA                ___lldiv@dividend 00A4  
                     stringcode 0542             LCD_setCursor@column 0041         __end_of_I2C_Master_Init 0656  
       __end_of_I2C_Master_Wait 0FCC         __end_of_I2C_Master_Stop 0FAB                ___lldiv@quotient 00A8  
                      stringdir 0542                        stringtab 0538             _Prepare_Keypad_Pins 0FAB  
                 _displayString 004B                  Read_Keypad@col 00A2                  Read_Keypad@row 00A0  
                    _SSPCONbits 0014         ?_Send_Message_To_Master 0020  
